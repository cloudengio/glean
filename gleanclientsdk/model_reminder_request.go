/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the ReminderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReminderRequest{}

// ReminderRequest struct for ReminderRequest
type ReminderRequest struct {
	// The document which the verification is for new reminders and/or update.
	DocumentId string `json:"documentId"`
	// The obfuscated id of the person this verification is assigned to.
	Assignee *string `json:"assignee,omitempty"`
	// Reminder for the next verifications in terms of days. For deletion, this will be omitted.
	RemindInDays *int32 `json:"remindInDays,omitempty"`
	// An optional free-text reason for the reminder. This is particularly useful when a reminder is used to ask for verification from another user (for example, \"Duplicate\", \"Incomplete\", \"Incorrect\").
	Reason *string `json:"reason,omitempty"`
}

// NewReminderRequest instantiates a new ReminderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReminderRequest(documentId string) *ReminderRequest {
	this := ReminderRequest{}
	this.DocumentId = documentId
	return &this
}

// NewReminderRequestWithDefaults instantiates a new ReminderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReminderRequestWithDefaults() *ReminderRequest {
	this := ReminderRequest{}
	return &this
}

// GetDocumentId returns the DocumentId field value
func (o *ReminderRequest) GetDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
func (o *ReminderRequest) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentId, true
}

// SetDocumentId sets field value
func (o *ReminderRequest) SetDocumentId(v string) {
	o.DocumentId = v
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *ReminderRequest) GetAssignee() string {
	if o == nil || IsNil(o.Assignee) {
		var ret string
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReminderRequest) GetAssigneeOk() (*string, bool) {
	if o == nil || IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *ReminderRequest) HasAssignee() bool {
	if o != nil && !IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given string and assigns it to the Assignee field.
func (o *ReminderRequest) SetAssignee(v string) {
	o.Assignee = &v
}

// GetRemindInDays returns the RemindInDays field value if set, zero value otherwise.
func (o *ReminderRequest) GetRemindInDays() int32 {
	if o == nil || IsNil(o.RemindInDays) {
		var ret int32
		return ret
	}
	return *o.RemindInDays
}

// GetRemindInDaysOk returns a tuple with the RemindInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReminderRequest) GetRemindInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RemindInDays) {
		return nil, false
	}
	return o.RemindInDays, true
}

// HasRemindInDays returns a boolean if a field has been set.
func (o *ReminderRequest) HasRemindInDays() bool {
	if o != nil && !IsNil(o.RemindInDays) {
		return true
	}

	return false
}

// SetRemindInDays gets a reference to the given int32 and assigns it to the RemindInDays field.
func (o *ReminderRequest) SetRemindInDays(v int32) {
	o.RemindInDays = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ReminderRequest) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReminderRequest) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ReminderRequest) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ReminderRequest) SetReason(v string) {
	o.Reason = &v
}

func (o ReminderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReminderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["documentId"] = o.DocumentId
	if !IsNil(o.Assignee) {
		toSerialize["assignee"] = o.Assignee
	}
	if !IsNil(o.RemindInDays) {
		toSerialize["remindInDays"] = o.RemindInDays
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableReminderRequest struct {
	value *ReminderRequest
	isSet bool
}

func (v NullableReminderRequest) Get() *ReminderRequest {
	return v.value
}

func (v *NullableReminderRequest) Set(val *ReminderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReminderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReminderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReminderRequest(val *ReminderRequest) *NullableReminderRequest {
	return &NullableReminderRequest{value: val, isSet: true}
}

func (v NullableReminderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReminderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


