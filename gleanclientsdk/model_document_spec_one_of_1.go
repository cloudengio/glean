/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DocumentSpecOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentSpecOneOf1{}

// DocumentSpecOneOf1 struct for DocumentSpecOneOf1
type DocumentSpecOneOf1 struct {
	// The id for document.
	Id string `json:"id"`
}

// NewDocumentSpecOneOf1 instantiates a new DocumentSpecOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentSpecOneOf1(id string) *DocumentSpecOneOf1 {
	this := DocumentSpecOneOf1{}
	this.Id = id
	return &this
}

// NewDocumentSpecOneOf1WithDefaults instantiates a new DocumentSpecOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentSpecOneOf1WithDefaults() *DocumentSpecOneOf1 {
	this := DocumentSpecOneOf1{}
	return &this
}

// GetId returns the Id field value
func (o *DocumentSpecOneOf1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DocumentSpecOneOf1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DocumentSpecOneOf1) SetId(v string) {
	o.Id = v
}

func (o DocumentSpecOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentSpecOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableDocumentSpecOneOf1 struct {
	value *DocumentSpecOneOf1
	isSet bool
}

func (v NullableDocumentSpecOneOf1) Get() *DocumentSpecOneOf1 {
	return v.value
}

func (v *NullableDocumentSpecOneOf1) Set(val *DocumentSpecOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentSpecOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentSpecOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentSpecOneOf1(val *DocumentSpecOneOf1) *NullableDocumentSpecOneOf1 {
	return &NullableDocumentSpecOneOf1{value: val, isSet: true}
}

func (v NullableDocumentSpecOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentSpecOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


