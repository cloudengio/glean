/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DocumentSpecOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentSpecOneOf{}

// DocumentSpecOneOf struct for DocumentSpecOneOf
type DocumentSpecOneOf struct {
	// The url for document.
	Url string `json:"url"`
}

// NewDocumentSpecOneOf instantiates a new DocumentSpecOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentSpecOneOf(url string) *DocumentSpecOneOf {
	this := DocumentSpecOneOf{}
	this.Url = url
	return &this
}

// NewDocumentSpecOneOfWithDefaults instantiates a new DocumentSpecOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentSpecOneOfWithDefaults() *DocumentSpecOneOf {
	this := DocumentSpecOneOf{}
	return &this
}

// GetUrl returns the Url field value
func (o *DocumentSpecOneOf) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *DocumentSpecOneOf) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *DocumentSpecOneOf) SetUrl(v string) {
	o.Url = v
}

func (o DocumentSpecOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentSpecOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableDocumentSpecOneOf struct {
	value *DocumentSpecOneOf
	isSet bool
}

func (v NullableDocumentSpecOneOf) Get() *DocumentSpecOneOf {
	return v.value
}

func (v *NullableDocumentSpecOneOf) Set(val *DocumentSpecOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentSpecOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentSpecOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentSpecOneOf(val *DocumentSpecOneOf) *NullableDocumentSpecOneOf {
	return &NullableDocumentSpecOneOf{value: val, isSet: true}
}

func (v NullableDocumentSpecOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentSpecOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


