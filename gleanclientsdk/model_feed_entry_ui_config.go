/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the FeedEntryUiConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedEntryUiConfig{}

// FeedEntryUiConfig struct for FeedEntryUiConfig
type FeedEntryUiConfig struct {
	// defines how to render this particular displayable list card
	Format *string `json:"format,omitempty"`
	AdditionalFlags *DisplayableListItemUIConfig `json:"additionalFlags,omitempty"`
}

// NewFeedEntryUiConfig instantiates a new FeedEntryUiConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedEntryUiConfig() *FeedEntryUiConfig {
	this := FeedEntryUiConfig{}
	return &this
}

// NewFeedEntryUiConfigWithDefaults instantiates a new FeedEntryUiConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedEntryUiConfigWithDefaults() *FeedEntryUiConfig {
	this := FeedEntryUiConfig{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *FeedEntryUiConfig) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedEntryUiConfig) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *FeedEntryUiConfig) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *FeedEntryUiConfig) SetFormat(v string) {
	o.Format = &v
}

// GetAdditionalFlags returns the AdditionalFlags field value if set, zero value otherwise.
func (o *FeedEntryUiConfig) GetAdditionalFlags() DisplayableListItemUIConfig {
	if o == nil || IsNil(o.AdditionalFlags) {
		var ret DisplayableListItemUIConfig
		return ret
	}
	return *o.AdditionalFlags
}

// GetAdditionalFlagsOk returns a tuple with the AdditionalFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedEntryUiConfig) GetAdditionalFlagsOk() (*DisplayableListItemUIConfig, bool) {
	if o == nil || IsNil(o.AdditionalFlags) {
		return nil, false
	}
	return o.AdditionalFlags, true
}

// HasAdditionalFlags returns a boolean if a field has been set.
func (o *FeedEntryUiConfig) HasAdditionalFlags() bool {
	if o != nil && !IsNil(o.AdditionalFlags) {
		return true
	}

	return false
}

// SetAdditionalFlags gets a reference to the given DisplayableListItemUIConfig and assigns it to the AdditionalFlags field.
func (o *FeedEntryUiConfig) SetAdditionalFlags(v DisplayableListItemUIConfig) {
	o.AdditionalFlags = &v
}

func (o FeedEntryUiConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedEntryUiConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.AdditionalFlags) {
		toSerialize["additionalFlags"] = o.AdditionalFlags
	}
	return toSerialize, nil
}

type NullableFeedEntryUiConfig struct {
	value *FeedEntryUiConfig
	isSet bool
}

func (v NullableFeedEntryUiConfig) Get() *FeedEntryUiConfig {
	return v.value
}

func (v *NullableFeedEntryUiConfig) Set(val *FeedEntryUiConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedEntryUiConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedEntryUiConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedEntryUiConfig(val *FeedEntryUiConfig) *NullableFeedEntryUiConfig {
	return &NullableFeedEntryUiConfig{value: val, isSet: true}
}

func (v NullableFeedEntryUiConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedEntryUiConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


