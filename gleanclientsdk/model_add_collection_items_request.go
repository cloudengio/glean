/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the AddCollectionItemsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCollectionItemsRequest{}

// AddCollectionItemsRequest struct for AddCollectionItemsRequest
type AddCollectionItemsRequest struct {
	// The ID of the Collection to add items to.
	CollectionId float32 `json:"collectionId"`
	// The CollectionItemDescriptors of the items being added.
	AddedCollectionItemDescriptors []CollectionItemDescriptor `json:"addedCollectionItemDescriptors,omitempty"`
}

// NewAddCollectionItemsRequest instantiates a new AddCollectionItemsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCollectionItemsRequest(collectionId float32) *AddCollectionItemsRequest {
	this := AddCollectionItemsRequest{}
	this.CollectionId = collectionId
	return &this
}

// NewAddCollectionItemsRequestWithDefaults instantiates a new AddCollectionItemsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCollectionItemsRequestWithDefaults() *AddCollectionItemsRequest {
	this := AddCollectionItemsRequest{}
	return &this
}

// GetCollectionId returns the CollectionId field value
func (o *AddCollectionItemsRequest) GetCollectionId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *AddCollectionItemsRequest) GetCollectionIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *AddCollectionItemsRequest) SetCollectionId(v float32) {
	o.CollectionId = v
}

// GetAddedCollectionItemDescriptors returns the AddedCollectionItemDescriptors field value if set, zero value otherwise.
func (o *AddCollectionItemsRequest) GetAddedCollectionItemDescriptors() []CollectionItemDescriptor {
	if o == nil || IsNil(o.AddedCollectionItemDescriptors) {
		var ret []CollectionItemDescriptor
		return ret
	}
	return o.AddedCollectionItemDescriptors
}

// GetAddedCollectionItemDescriptorsOk returns a tuple with the AddedCollectionItemDescriptors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectionItemsRequest) GetAddedCollectionItemDescriptorsOk() ([]CollectionItemDescriptor, bool) {
	if o == nil || IsNil(o.AddedCollectionItemDescriptors) {
		return nil, false
	}
	return o.AddedCollectionItemDescriptors, true
}

// HasAddedCollectionItemDescriptors returns a boolean if a field has been set.
func (o *AddCollectionItemsRequest) HasAddedCollectionItemDescriptors() bool {
	if o != nil && !IsNil(o.AddedCollectionItemDescriptors) {
		return true
	}

	return false
}

// SetAddedCollectionItemDescriptors gets a reference to the given []CollectionItemDescriptor and assigns it to the AddedCollectionItemDescriptors field.
func (o *AddCollectionItemsRequest) SetAddedCollectionItemDescriptors(v []CollectionItemDescriptor) {
	o.AddedCollectionItemDescriptors = v
}

func (o AddCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCollectionItemsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collectionId"] = o.CollectionId
	if !IsNil(o.AddedCollectionItemDescriptors) {
		toSerialize["addedCollectionItemDescriptors"] = o.AddedCollectionItemDescriptors
	}
	return toSerialize, nil
}

type NullableAddCollectionItemsRequest struct {
	value *AddCollectionItemsRequest
	isSet bool
}

func (v NullableAddCollectionItemsRequest) Get() *AddCollectionItemsRequest {
	return v.value
}

func (v *NullableAddCollectionItemsRequest) Set(val *AddCollectionItemsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCollectionItemsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCollectionItemsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCollectionItemsRequest(val *AddCollectionItemsRequest) *NullableAddCollectionItemsRequest {
	return &NullableAddCollectionItemsRequest{value: val, isSet: true}
}

func (v NullableAddCollectionItemsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCollectionItemsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


