/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the ClusterGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterGroup{}

// ClusterGroup struct for ClusterGroup
type ClusterGroup struct {
	// A list of results that should be displayed as associated with this result.
	ClusteredResults []SearchResult `json:"clusteredResults,omitempty"`
	ClusterType *ClusterTypeEnum `json:"clusterType,omitempty"`
	// The default number of results to display before truncating and showing a \"see more\" link
	VisibleCountHint int32 `json:"visibleCountHint"`
}

// NewClusterGroup instantiates a new ClusterGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterGroup(visibleCountHint int32) *ClusterGroup {
	this := ClusterGroup{}
	this.VisibleCountHint = visibleCountHint
	return &this
}

// NewClusterGroupWithDefaults instantiates a new ClusterGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterGroupWithDefaults() *ClusterGroup {
	this := ClusterGroup{}
	return &this
}

// GetClusteredResults returns the ClusteredResults field value if set, zero value otherwise.
func (o *ClusterGroup) GetClusteredResults() []SearchResult {
	if o == nil || IsNil(o.ClusteredResults) {
		var ret []SearchResult
		return ret
	}
	return o.ClusteredResults
}

// GetClusteredResultsOk returns a tuple with the ClusteredResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterGroup) GetClusteredResultsOk() ([]SearchResult, bool) {
	if o == nil || IsNil(o.ClusteredResults) {
		return nil, false
	}
	return o.ClusteredResults, true
}

// HasClusteredResults returns a boolean if a field has been set.
func (o *ClusterGroup) HasClusteredResults() bool {
	if o != nil && !IsNil(o.ClusteredResults) {
		return true
	}

	return false
}

// SetClusteredResults gets a reference to the given []SearchResult and assigns it to the ClusteredResults field.
func (o *ClusterGroup) SetClusteredResults(v []SearchResult) {
	o.ClusteredResults = v
}

// GetClusterType returns the ClusterType field value if set, zero value otherwise.
func (o *ClusterGroup) GetClusterType() ClusterTypeEnum {
	if o == nil || IsNil(o.ClusterType) {
		var ret ClusterTypeEnum
		return ret
	}
	return *o.ClusterType
}

// GetClusterTypeOk returns a tuple with the ClusterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterGroup) GetClusterTypeOk() (*ClusterTypeEnum, bool) {
	if o == nil || IsNil(o.ClusterType) {
		return nil, false
	}
	return o.ClusterType, true
}

// HasClusterType returns a boolean if a field has been set.
func (o *ClusterGroup) HasClusterType() bool {
	if o != nil && !IsNil(o.ClusterType) {
		return true
	}

	return false
}

// SetClusterType gets a reference to the given ClusterTypeEnum and assigns it to the ClusterType field.
func (o *ClusterGroup) SetClusterType(v ClusterTypeEnum) {
	o.ClusterType = &v
}

// GetVisibleCountHint returns the VisibleCountHint field value
func (o *ClusterGroup) GetVisibleCountHint() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VisibleCountHint
}

// GetVisibleCountHintOk returns a tuple with the VisibleCountHint field value
// and a boolean to check if the value has been set.
func (o *ClusterGroup) GetVisibleCountHintOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VisibleCountHint, true
}

// SetVisibleCountHint sets field value
func (o *ClusterGroup) SetVisibleCountHint(v int32) {
	o.VisibleCountHint = v
}

func (o ClusterGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusteredResults) {
		toSerialize["clusteredResults"] = o.ClusteredResults
	}
	if !IsNil(o.ClusterType) {
		toSerialize["clusterType"] = o.ClusterType
	}
	toSerialize["visibleCountHint"] = o.VisibleCountHint
	return toSerialize, nil
}

type NullableClusterGroup struct {
	value *ClusterGroup
	isSet bool
}

func (v NullableClusterGroup) Get() *ClusterGroup {
	return v.value
}

func (v *NullableClusterGroup) Set(val *ClusterGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterGroup(val *ClusterGroup) *NullableClusterGroup {
	return &NullableClusterGroup{value: val, isSet: true}
}

func (v NullableClusterGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


