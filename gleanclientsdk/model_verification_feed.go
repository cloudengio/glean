/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the VerificationFeed type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerificationFeed{}

// VerificationFeed struct for VerificationFeed
type VerificationFeed struct {
	// List of document infos that include verification related information for them.
	Documents []Verification `json:"documents,omitempty"`
}

// NewVerificationFeed instantiates a new VerificationFeed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationFeed() *VerificationFeed {
	this := VerificationFeed{}
	return &this
}

// NewVerificationFeedWithDefaults instantiates a new VerificationFeed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationFeedWithDefaults() *VerificationFeed {
	this := VerificationFeed{}
	return &this
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
func (o *VerificationFeed) GetDocuments() []Verification {
	if o == nil || IsNil(o.Documents) {
		var ret []Verification
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerificationFeed) GetDocumentsOk() ([]Verification, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *VerificationFeed) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []Verification and assigns it to the Documents field.
func (o *VerificationFeed) SetDocuments(v []Verification) {
	o.Documents = v
}

func (o VerificationFeed) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerificationFeed) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	return toSerialize, nil
}

type NullableVerificationFeed struct {
	value *VerificationFeed
	isSet bool
}

func (v NullableVerificationFeed) Get() *VerificationFeed {
	return v.value
}

func (v *NullableVerificationFeed) Set(val *VerificationFeed) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationFeed) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationFeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationFeed(val *VerificationFeed) *NullableVerificationFeed {
	return &NullableVerificationFeed{value: val, isSet: true}
}

func (v NullableVerificationFeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationFeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


