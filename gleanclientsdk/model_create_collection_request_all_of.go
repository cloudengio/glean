/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CreateCollectionRequestAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCollectionRequestAllOf{}

// CreateCollectionRequestAllOf struct for CreateCollectionRequestAllOf
type CreateCollectionRequestAllOf struct {
	// The (optional) ItemId of the next CollectionItem in sequence. If omitted, will be added to the end of the Collection. Only used if parentId is specified.
	NewNextItemId *string `json:"newNextItemId,omitempty"`
}

// NewCreateCollectionRequestAllOf instantiates a new CreateCollectionRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCollectionRequestAllOf() *CreateCollectionRequestAllOf {
	this := CreateCollectionRequestAllOf{}
	return &this
}

// NewCreateCollectionRequestAllOfWithDefaults instantiates a new CreateCollectionRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCollectionRequestAllOfWithDefaults() *CreateCollectionRequestAllOf {
	this := CreateCollectionRequestAllOf{}
	return &this
}

// GetNewNextItemId returns the NewNextItemId field value if set, zero value otherwise.
func (o *CreateCollectionRequestAllOf) GetNewNextItemId() string {
	if o == nil || IsNil(o.NewNextItemId) {
		var ret string
		return ret
	}
	return *o.NewNextItemId
}

// GetNewNextItemIdOk returns a tuple with the NewNextItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCollectionRequestAllOf) GetNewNextItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.NewNextItemId) {
		return nil, false
	}
	return o.NewNextItemId, true
}

// HasNewNextItemId returns a boolean if a field has been set.
func (o *CreateCollectionRequestAllOf) HasNewNextItemId() bool {
	if o != nil && !IsNil(o.NewNextItemId) {
		return true
	}

	return false
}

// SetNewNextItemId gets a reference to the given string and assigns it to the NewNextItemId field.
func (o *CreateCollectionRequestAllOf) SetNewNextItemId(v string) {
	o.NewNextItemId = &v
}

func (o CreateCollectionRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCollectionRequestAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewNextItemId) {
		toSerialize["newNextItemId"] = o.NewNextItemId
	}
	return toSerialize, nil
}

type NullableCreateCollectionRequestAllOf struct {
	value *CreateCollectionRequestAllOf
	isSet bool
}

func (v NullableCreateCollectionRequestAllOf) Get() *CreateCollectionRequestAllOf {
	return v.value
}

func (v *NullableCreateCollectionRequestAllOf) Set(val *CreateCollectionRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCollectionRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCollectionRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCollectionRequestAllOf(val *CreateCollectionRequestAllOf) *NullableCreateCollectionRequestAllOf {
	return &NullableCreateCollectionRequestAllOf{value: val, isSet: true}
}

func (v NullableCreateCollectionRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCollectionRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


