/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the MetaConfigAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetaConfigAllOf{}

// MetaConfigAllOf struct for MetaConfigAllOf
type MetaConfigAllOf struct {
	HideInAttachment *bool `json:"hideInAttachment,omitempty"`
	Label *StatusLabelConfig `json:"label,omitempty"`
	CommonKeys []string `json:"commonKeys,omitempty"`
}

// NewMetaConfigAllOf instantiates a new MetaConfigAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetaConfigAllOf() *MetaConfigAllOf {
	this := MetaConfigAllOf{}
	return &this
}

// NewMetaConfigAllOfWithDefaults instantiates a new MetaConfigAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetaConfigAllOfWithDefaults() *MetaConfigAllOf {
	this := MetaConfigAllOf{}
	return &this
}

// GetHideInAttachment returns the HideInAttachment field value if set, zero value otherwise.
func (o *MetaConfigAllOf) GetHideInAttachment() bool {
	if o == nil || IsNil(o.HideInAttachment) {
		var ret bool
		return ret
	}
	return *o.HideInAttachment
}

// GetHideInAttachmentOk returns a tuple with the HideInAttachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaConfigAllOf) GetHideInAttachmentOk() (*bool, bool) {
	if o == nil || IsNil(o.HideInAttachment) {
		return nil, false
	}
	return o.HideInAttachment, true
}

// HasHideInAttachment returns a boolean if a field has been set.
func (o *MetaConfigAllOf) HasHideInAttachment() bool {
	if o != nil && !IsNil(o.HideInAttachment) {
		return true
	}

	return false
}

// SetHideInAttachment gets a reference to the given bool and assigns it to the HideInAttachment field.
func (o *MetaConfigAllOf) SetHideInAttachment(v bool) {
	o.HideInAttachment = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *MetaConfigAllOf) GetLabel() StatusLabelConfig {
	if o == nil || IsNil(o.Label) {
		var ret StatusLabelConfig
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaConfigAllOf) GetLabelOk() (*StatusLabelConfig, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *MetaConfigAllOf) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given StatusLabelConfig and assigns it to the Label field.
func (o *MetaConfigAllOf) SetLabel(v StatusLabelConfig) {
	o.Label = &v
}

// GetCommonKeys returns the CommonKeys field value if set, zero value otherwise.
func (o *MetaConfigAllOf) GetCommonKeys() []string {
	if o == nil || IsNil(o.CommonKeys) {
		var ret []string
		return ret
	}
	return o.CommonKeys
}

// GetCommonKeysOk returns a tuple with the CommonKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetaConfigAllOf) GetCommonKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.CommonKeys) {
		return nil, false
	}
	return o.CommonKeys, true
}

// HasCommonKeys returns a boolean if a field has been set.
func (o *MetaConfigAllOf) HasCommonKeys() bool {
	if o != nil && !IsNil(o.CommonKeys) {
		return true
	}

	return false
}

// SetCommonKeys gets a reference to the given []string and assigns it to the CommonKeys field.
func (o *MetaConfigAllOf) SetCommonKeys(v []string) {
	o.CommonKeys = v
}

func (o MetaConfigAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetaConfigAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HideInAttachment) {
		toSerialize["hideInAttachment"] = o.HideInAttachment
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.CommonKeys) {
		toSerialize["commonKeys"] = o.CommonKeys
	}
	return toSerialize, nil
}

type NullableMetaConfigAllOf struct {
	value *MetaConfigAllOf
	isSet bool
}

func (v NullableMetaConfigAllOf) Get() *MetaConfigAllOf {
	return v.value
}

func (v *NullableMetaConfigAllOf) Set(val *MetaConfigAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMetaConfigAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMetaConfigAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetaConfigAllOf(val *MetaConfigAllOf) *NullableMetaConfigAllOf {
	return &NullableMetaConfigAllOf{value: val, isSet: true}
}

func (v NullableMetaConfigAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetaConfigAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


