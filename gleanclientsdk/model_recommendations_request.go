/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
	"time"
)

// checks if the RecommendationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendationsRequest{}

// RecommendationsRequest struct for RecommendationsRequest
type RecommendationsRequest struct {
	// The ISO 8601 timestamp associated with the client request.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// A previously received trackingToken for a search associated with the same query. Useful for more requests and requests for other tabs.
	TrackingToken *string `json:"trackingToken,omitempty"`
	SessionInfo *SessionInfo `json:"sessionInfo,omitempty"`
	SourceInfo SearchRequestSourceInfo `json:"sourceInfo"`
	SourceDocument *Document `json:"sourceDocument,omitempty"`
	// Debug only search params to to change the flow of control in request handling. It will be passed around service boundaries/endpoints. For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit. Requires sufficient permissions.
	Sc *string `json:"sc,omitempty"`
	// Hint to the server about how many results to send back. Server may return less or more. Structured results and clustered results don't count towards pageSize.
	PageSize *int32 `json:"pageSize,omitempty"`
	// Hint to the server about how many characters long a snippet may be. Server may return less or more.
	MaxSnippetSize *int32 `json:"maxSnippetSize,omitempty"`
	RecommendationDocumentSpec *DocumentSpec `json:"recommendationDocumentSpec,omitempty"`
	RequestOptions *RecommendationsRequestOptions `json:"requestOptions,omitempty"`
}

// NewRecommendationsRequest instantiates a new RecommendationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendationsRequest(sourceInfo SearchRequestSourceInfo) *RecommendationsRequest {
	this := RecommendationsRequest{}
	this.SourceInfo = sourceInfo
	return &this
}

// NewRecommendationsRequestWithDefaults instantiates a new RecommendationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendationsRequestWithDefaults() *RecommendationsRequest {
	this := RecommendationsRequest{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *RecommendationsRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTrackingToken returns the TrackingToken field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetTrackingToken() string {
	if o == nil || IsNil(o.TrackingToken) {
		var ret string
		return ret
	}
	return *o.TrackingToken
}

// GetTrackingTokenOk returns a tuple with the TrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingToken) {
		return nil, false
	}
	return o.TrackingToken, true
}

// HasTrackingToken returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasTrackingToken() bool {
	if o != nil && !IsNil(o.TrackingToken) {
		return true
	}

	return false
}

// SetTrackingToken gets a reference to the given string and assigns it to the TrackingToken field.
func (o *RecommendationsRequest) SetTrackingToken(v string) {
	o.TrackingToken = &v
}

// GetSessionInfo returns the SessionInfo field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetSessionInfo() SessionInfo {
	if o == nil || IsNil(o.SessionInfo) {
		var ret SessionInfo
		return ret
	}
	return *o.SessionInfo
}

// GetSessionInfoOk returns a tuple with the SessionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetSessionInfoOk() (*SessionInfo, bool) {
	if o == nil || IsNil(o.SessionInfo) {
		return nil, false
	}
	return o.SessionInfo, true
}

// HasSessionInfo returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasSessionInfo() bool {
	if o != nil && !IsNil(o.SessionInfo) {
		return true
	}

	return false
}

// SetSessionInfo gets a reference to the given SessionInfo and assigns it to the SessionInfo field.
func (o *RecommendationsRequest) SetSessionInfo(v SessionInfo) {
	o.SessionInfo = &v
}

// GetSourceInfo returns the SourceInfo field value
func (o *RecommendationsRequest) GetSourceInfo() SearchRequestSourceInfo {
	if o == nil {
		var ret SearchRequestSourceInfo
		return ret
	}

	return o.SourceInfo
}

// GetSourceInfoOk returns a tuple with the SourceInfo field value
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetSourceInfoOk() (*SearchRequestSourceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceInfo, true
}

// SetSourceInfo sets field value
func (o *RecommendationsRequest) SetSourceInfo(v SearchRequestSourceInfo) {
	o.SourceInfo = v
}

// GetSourceDocument returns the SourceDocument field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetSourceDocument() Document {
	if o == nil || IsNil(o.SourceDocument) {
		var ret Document
		return ret
	}
	return *o.SourceDocument
}

// GetSourceDocumentOk returns a tuple with the SourceDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetSourceDocumentOk() (*Document, bool) {
	if o == nil || IsNil(o.SourceDocument) {
		return nil, false
	}
	return o.SourceDocument, true
}

// HasSourceDocument returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasSourceDocument() bool {
	if o != nil && !IsNil(o.SourceDocument) {
		return true
	}

	return false
}

// SetSourceDocument gets a reference to the given Document and assigns it to the SourceDocument field.
func (o *RecommendationsRequest) SetSourceDocument(v Document) {
	o.SourceDocument = &v
}

// GetSc returns the Sc field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetSc() string {
	if o == nil || IsNil(o.Sc) {
		var ret string
		return ret
	}
	return *o.Sc
}

// GetScOk returns a tuple with the Sc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetScOk() (*string, bool) {
	if o == nil || IsNil(o.Sc) {
		return nil, false
	}
	return o.Sc, true
}

// HasSc returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasSc() bool {
	if o != nil && !IsNil(o.Sc) {
		return true
	}

	return false
}

// SetSc gets a reference to the given string and assigns it to the Sc field.
func (o *RecommendationsRequest) SetSc(v string) {
	o.Sc = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *RecommendationsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetMaxSnippetSize returns the MaxSnippetSize field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetMaxSnippetSize() int32 {
	if o == nil || IsNil(o.MaxSnippetSize) {
		var ret int32
		return ret
	}
	return *o.MaxSnippetSize
}

// GetMaxSnippetSizeOk returns a tuple with the MaxSnippetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetMaxSnippetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSnippetSize) {
		return nil, false
	}
	return o.MaxSnippetSize, true
}

// HasMaxSnippetSize returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasMaxSnippetSize() bool {
	if o != nil && !IsNil(o.MaxSnippetSize) {
		return true
	}

	return false
}

// SetMaxSnippetSize gets a reference to the given int32 and assigns it to the MaxSnippetSize field.
func (o *RecommendationsRequest) SetMaxSnippetSize(v int32) {
	o.MaxSnippetSize = &v
}

// GetRecommendationDocumentSpec returns the RecommendationDocumentSpec field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetRecommendationDocumentSpec() DocumentSpec {
	if o == nil || IsNil(o.RecommendationDocumentSpec) {
		var ret DocumentSpec
		return ret
	}
	return *o.RecommendationDocumentSpec
}

// GetRecommendationDocumentSpecOk returns a tuple with the RecommendationDocumentSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetRecommendationDocumentSpecOk() (*DocumentSpec, bool) {
	if o == nil || IsNil(o.RecommendationDocumentSpec) {
		return nil, false
	}
	return o.RecommendationDocumentSpec, true
}

// HasRecommendationDocumentSpec returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasRecommendationDocumentSpec() bool {
	if o != nil && !IsNil(o.RecommendationDocumentSpec) {
		return true
	}

	return false
}

// SetRecommendationDocumentSpec gets a reference to the given DocumentSpec and assigns it to the RecommendationDocumentSpec field.
func (o *RecommendationsRequest) SetRecommendationDocumentSpec(v DocumentSpec) {
	o.RecommendationDocumentSpec = &v
}

// GetRequestOptions returns the RequestOptions field value if set, zero value otherwise.
func (o *RecommendationsRequest) GetRequestOptions() RecommendationsRequestOptions {
	if o == nil || IsNil(o.RequestOptions) {
		var ret RecommendationsRequestOptions
		return ret
	}
	return *o.RequestOptions
}

// GetRequestOptionsOk returns a tuple with the RequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetRequestOptionsOk() (*RecommendationsRequestOptions, bool) {
	if o == nil || IsNil(o.RequestOptions) {
		return nil, false
	}
	return o.RequestOptions, true
}

// HasRequestOptions returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasRequestOptions() bool {
	if o != nil && !IsNil(o.RequestOptions) {
		return true
	}

	return false
}

// SetRequestOptions gets a reference to the given RecommendationsRequestOptions and assigns it to the RequestOptions field.
func (o *RecommendationsRequest) SetRequestOptions(v RecommendationsRequestOptions) {
	o.RequestOptions = &v
}

func (o RecommendationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TrackingToken) {
		toSerialize["trackingToken"] = o.TrackingToken
	}
	if !IsNil(o.SessionInfo) {
		toSerialize["sessionInfo"] = o.SessionInfo
	}
	toSerialize["sourceInfo"] = o.SourceInfo
	if !IsNil(o.SourceDocument) {
		toSerialize["sourceDocument"] = o.SourceDocument
	}
	if !IsNil(o.Sc) {
		toSerialize["sc"] = o.Sc
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.MaxSnippetSize) {
		toSerialize["maxSnippetSize"] = o.MaxSnippetSize
	}
	if !IsNil(o.RecommendationDocumentSpec) {
		toSerialize["recommendationDocumentSpec"] = o.RecommendationDocumentSpec
	}
	if !IsNil(o.RequestOptions) {
		toSerialize["requestOptions"] = o.RequestOptions
	}
	return toSerialize, nil
}

type NullableRecommendationsRequest struct {
	value *RecommendationsRequest
	isSet bool
}

func (v NullableRecommendationsRequest) Get() *RecommendationsRequest {
	return v.value
}

func (v *NullableRecommendationsRequest) Set(val *RecommendationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationsRequest(val *RecommendationsRequest) *NullableRecommendationsRequest {
	return &NullableRecommendationsRequest{value: val, isSet: true}
}

func (v NullableRecommendationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


