/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PinCollectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinCollectionRequest{}

// PinCollectionRequest struct for PinCollectionRequest
type PinCollectionRequest struct {
	// Whether to pin or unpin
	Action string `json:"action"`
	Data *CollectionPinMetadata `json:"data,omitempty"`
	// DEPRECTED - The id of the collection to be pinned. Insted use data.id.
	Id int32 `json:"id"`
	Category CollectionPinnableCategories `json:"category"`
}

// NewPinCollectionRequest instantiates a new PinCollectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinCollectionRequest(action string, id int32, category CollectionPinnableCategories) *PinCollectionRequest {
	this := PinCollectionRequest{}
	this.Action = action
	this.Id = id
	this.Category = category
	return &this
}

// NewPinCollectionRequestWithDefaults instantiates a new PinCollectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinCollectionRequestWithDefaults() *PinCollectionRequest {
	this := PinCollectionRequest{}
	var action string = "PIN"
	this.Action = action
	return &this
}

// GetAction returns the Action field value
func (o *PinCollectionRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *PinCollectionRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *PinCollectionRequest) SetAction(v string) {
	o.Action = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PinCollectionRequest) GetData() CollectionPinMetadata {
	if o == nil || IsNil(o.Data) {
		var ret CollectionPinMetadata
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinCollectionRequest) GetDataOk() (*CollectionPinMetadata, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PinCollectionRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given CollectionPinMetadata and assigns it to the Data field.
func (o *PinCollectionRequest) SetData(v CollectionPinMetadata) {
	o.Data = &v
}

// GetId returns the Id field value
func (o *PinCollectionRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PinCollectionRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PinCollectionRequest) SetId(v int32) {
	o.Id = v
}

// GetCategory returns the Category field value
func (o *PinCollectionRequest) GetCategory() CollectionPinnableCategories {
	if o == nil {
		var ret CollectionPinnableCategories
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *PinCollectionRequest) GetCategoryOk() (*CollectionPinnableCategories, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *PinCollectionRequest) SetCategory(v CollectionPinnableCategories) {
	o.Category = v
}

func (o PinCollectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinCollectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["id"] = o.Id
	toSerialize["category"] = o.Category
	return toSerialize, nil
}

type NullablePinCollectionRequest struct {
	value *PinCollectionRequest
	isSet bool
}

func (v NullablePinCollectionRequest) Get() *PinCollectionRequest {
	return v.value
}

func (v *NullablePinCollectionRequest) Set(val *PinCollectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePinCollectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePinCollectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinCollectionRequest(val *PinCollectionRequest) *NullablePinCollectionRequest {
	return &NullablePinCollectionRequest{value: val, isSet: true}
}

func (v NullablePinCollectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinCollectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


