/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
	"time"
)

// checks if the PinDocumentAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinDocumentAllOf{}

// PinDocumentAllOf struct for PinDocumentAllOf
type PinDocumentAllOf struct {
	// The opaque id of the pin.
	Id *string `json:"id,omitempty"`
	// DEPRECATED - Prefer use of `id` string field instead
	PinId *int32 `json:"pinId,omitempty"`
	// The document which should be a pinned result.
	DocumentId string `json:"documentId"`
	// DEPRECATED - The query string for which the result was generated.
	Query *string `json:"query,omitempty"`
	// Filters which restrict who should see the pinned document. Values are taken from the corresponding filters in people search.
	AudienceFilters []FacetFilter `json:"audienceFilters,omitempty"`
	Attribution *Person `json:"attribution,omitempty"`
	UpdatedBy *Person `json:"updatedBy,omitempty"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewPinDocumentAllOf instantiates a new PinDocumentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinDocumentAllOf(documentId string) *PinDocumentAllOf {
	this := PinDocumentAllOf{}
	this.DocumentId = documentId
	return &this
}

// NewPinDocumentAllOfWithDefaults instantiates a new PinDocumentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinDocumentAllOfWithDefaults() *PinDocumentAllOf {
	this := PinDocumentAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PinDocumentAllOf) SetId(v string) {
	o.Id = &v
}

// GetPinId returns the PinId field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetPinId() int32 {
	if o == nil || IsNil(o.PinId) {
		var ret int32
		return ret
	}
	return *o.PinId
}

// GetPinIdOk returns a tuple with the PinId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetPinIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PinId) {
		return nil, false
	}
	return o.PinId, true
}

// HasPinId returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasPinId() bool {
	if o != nil && !IsNil(o.PinId) {
		return true
	}

	return false
}

// SetPinId gets a reference to the given int32 and assigns it to the PinId field.
func (o *PinDocumentAllOf) SetPinId(v int32) {
	o.PinId = &v
}

// GetDocumentId returns the DocumentId field value
func (o *PinDocumentAllOf) GetDocumentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetDocumentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentId, true
}

// SetDocumentId sets field value
func (o *PinDocumentAllOf) SetDocumentId(v string) {
	o.DocumentId = v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *PinDocumentAllOf) SetQuery(v string) {
	o.Query = &v
}

// GetAudienceFilters returns the AudienceFilters field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetAudienceFilters() []FacetFilter {
	if o == nil || IsNil(o.AudienceFilters) {
		var ret []FacetFilter
		return ret
	}
	return o.AudienceFilters
}

// GetAudienceFiltersOk returns a tuple with the AudienceFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetAudienceFiltersOk() ([]FacetFilter, bool) {
	if o == nil || IsNil(o.AudienceFilters) {
		return nil, false
	}
	return o.AudienceFilters, true
}

// HasAudienceFilters returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasAudienceFilters() bool {
	if o != nil && !IsNil(o.AudienceFilters) {
		return true
	}

	return false
}

// SetAudienceFilters gets a reference to the given []FacetFilter and assigns it to the AudienceFilters field.
func (o *PinDocumentAllOf) SetAudienceFilters(v []FacetFilter) {
	o.AudienceFilters = v
}

// GetAttribution returns the Attribution field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetAttribution() Person {
	if o == nil || IsNil(o.Attribution) {
		var ret Person
		return ret
	}
	return *o.Attribution
}

// GetAttributionOk returns a tuple with the Attribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetAttributionOk() (*Person, bool) {
	if o == nil || IsNil(o.Attribution) {
		return nil, false
	}
	return o.Attribution, true
}

// HasAttribution returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasAttribution() bool {
	if o != nil && !IsNil(o.Attribution) {
		return true
	}

	return false
}

// SetAttribution gets a reference to the given Person and assigns it to the Attribution field.
func (o *PinDocumentAllOf) SetAttribution(v Person) {
	o.Attribution = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetUpdatedBy() Person {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret Person
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetUpdatedByOk() (*Person, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given Person and assigns it to the UpdatedBy field.
func (o *PinDocumentAllOf) SetUpdatedBy(v Person) {
	o.UpdatedBy = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *PinDocumentAllOf) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *PinDocumentAllOf) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinDocumentAllOf) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *PinDocumentAllOf) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *PinDocumentAllOf) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o PinDocumentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinDocumentAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PinId) {
		toSerialize["pinId"] = o.PinId
	}
	toSerialize["documentId"] = o.DocumentId
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.AudienceFilters) {
		toSerialize["audienceFilters"] = o.AudienceFilters
	}
	if !IsNil(o.Attribution) {
		toSerialize["attribution"] = o.Attribution
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullablePinDocumentAllOf struct {
	value *PinDocumentAllOf
	isSet bool
}

func (v NullablePinDocumentAllOf) Get() *PinDocumentAllOf {
	return v.value
}

func (v *NullablePinDocumentAllOf) Set(val *PinDocumentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePinDocumentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePinDocumentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinDocumentAllOf(val *PinDocumentAllOf) *NullablePinDocumentAllOf {
	return &NullablePinDocumentAllOf{value: val, isSet: true}
}

func (v NullablePinDocumentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinDocumentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


