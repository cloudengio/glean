/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the RelatedDocuments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelatedDocuments{}

// RelatedDocuments struct for RelatedDocuments
type RelatedDocuments struct {
	// How this document relates to the including entity.
	Relation *string `json:"relation,omitempty"`
	// Which entity in the response that this entity relates to. Relevant when there are multiple entities associated with the response (such as merged customers)
	AssociatedEntityId *string `json:"associatedEntityId,omitempty"`
	QuerySuggestion *QuerySuggestion `json:"querySuggestion,omitempty"`
	// A truncated list of documents with this relation. TO BE DEPRECATED.
	// Deprecated
	Documents []Document `json:"documents,omitempty"`
	// A truncated list of documents associated with this relation. To be used in favor of `documents` because it contains a trackingToken.
	Results []SearchResult `json:"results,omitempty"`
}

// NewRelatedDocuments instantiates a new RelatedDocuments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedDocuments() *RelatedDocuments {
	this := RelatedDocuments{}
	return &this
}

// NewRelatedDocumentsWithDefaults instantiates a new RelatedDocuments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedDocumentsWithDefaults() *RelatedDocuments {
	this := RelatedDocuments{}
	return &this
}

// GetRelation returns the Relation field value if set, zero value otherwise.
func (o *RelatedDocuments) GetRelation() string {
	if o == nil || IsNil(o.Relation) {
		var ret string
		return ret
	}
	return *o.Relation
}

// GetRelationOk returns a tuple with the Relation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedDocuments) GetRelationOk() (*string, bool) {
	if o == nil || IsNil(o.Relation) {
		return nil, false
	}
	return o.Relation, true
}

// HasRelation returns a boolean if a field has been set.
func (o *RelatedDocuments) HasRelation() bool {
	if o != nil && !IsNil(o.Relation) {
		return true
	}

	return false
}

// SetRelation gets a reference to the given string and assigns it to the Relation field.
func (o *RelatedDocuments) SetRelation(v string) {
	o.Relation = &v
}

// GetAssociatedEntityId returns the AssociatedEntityId field value if set, zero value otherwise.
func (o *RelatedDocuments) GetAssociatedEntityId() string {
	if o == nil || IsNil(o.AssociatedEntityId) {
		var ret string
		return ret
	}
	return *o.AssociatedEntityId
}

// GetAssociatedEntityIdOk returns a tuple with the AssociatedEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedDocuments) GetAssociatedEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedEntityId) {
		return nil, false
	}
	return o.AssociatedEntityId, true
}

// HasAssociatedEntityId returns a boolean if a field has been set.
func (o *RelatedDocuments) HasAssociatedEntityId() bool {
	if o != nil && !IsNil(o.AssociatedEntityId) {
		return true
	}

	return false
}

// SetAssociatedEntityId gets a reference to the given string and assigns it to the AssociatedEntityId field.
func (o *RelatedDocuments) SetAssociatedEntityId(v string) {
	o.AssociatedEntityId = &v
}

// GetQuerySuggestion returns the QuerySuggestion field value if set, zero value otherwise.
func (o *RelatedDocuments) GetQuerySuggestion() QuerySuggestion {
	if o == nil || IsNil(o.QuerySuggestion) {
		var ret QuerySuggestion
		return ret
	}
	return *o.QuerySuggestion
}

// GetQuerySuggestionOk returns a tuple with the QuerySuggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedDocuments) GetQuerySuggestionOk() (*QuerySuggestion, bool) {
	if o == nil || IsNil(o.QuerySuggestion) {
		return nil, false
	}
	return o.QuerySuggestion, true
}

// HasQuerySuggestion returns a boolean if a field has been set.
func (o *RelatedDocuments) HasQuerySuggestion() bool {
	if o != nil && !IsNil(o.QuerySuggestion) {
		return true
	}

	return false
}

// SetQuerySuggestion gets a reference to the given QuerySuggestion and assigns it to the QuerySuggestion field.
func (o *RelatedDocuments) SetQuerySuggestion(v QuerySuggestion) {
	o.QuerySuggestion = &v
}

// GetDocuments returns the Documents field value if set, zero value otherwise.
// Deprecated
func (o *RelatedDocuments) GetDocuments() []Document {
	if o == nil || IsNil(o.Documents) {
		var ret []Document
		return ret
	}
	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *RelatedDocuments) GetDocumentsOk() ([]Document, bool) {
	if o == nil || IsNil(o.Documents) {
		return nil, false
	}
	return o.Documents, true
}

// HasDocuments returns a boolean if a field has been set.
func (o *RelatedDocuments) HasDocuments() bool {
	if o != nil && !IsNil(o.Documents) {
		return true
	}

	return false
}

// SetDocuments gets a reference to the given []Document and assigns it to the Documents field.
// Deprecated
func (o *RelatedDocuments) SetDocuments(v []Document) {
	o.Documents = v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *RelatedDocuments) GetResults() []SearchResult {
	if o == nil || IsNil(o.Results) {
		var ret []SearchResult
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedDocuments) GetResultsOk() ([]SearchResult, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *RelatedDocuments) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []SearchResult and assigns it to the Results field.
func (o *RelatedDocuments) SetResults(v []SearchResult) {
	o.Results = v
}

func (o RelatedDocuments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelatedDocuments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Relation) {
		toSerialize["relation"] = o.Relation
	}
	if !IsNil(o.AssociatedEntityId) {
		toSerialize["associatedEntityId"] = o.AssociatedEntityId
	}
	if !IsNil(o.QuerySuggestion) {
		toSerialize["querySuggestion"] = o.QuerySuggestion
	}
	if !IsNil(o.Documents) {
		toSerialize["documents"] = o.Documents
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableRelatedDocuments struct {
	value *RelatedDocuments
	isSet bool
}

func (v NullableRelatedDocuments) Get() *RelatedDocuments {
	return v.value
}

func (v *NullableRelatedDocuments) Set(val *RelatedDocuments) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedDocuments) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedDocuments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedDocuments(val *RelatedDocuments) *NullableRelatedDocuments {
	return &NullableRelatedDocuments{value: val, isSet: true}
}

func (v NullableRelatedDocuments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedDocuments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


