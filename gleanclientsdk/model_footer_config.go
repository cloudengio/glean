/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the FooterConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FooterConfig{}

// FooterConfig Use RelatedConfig instead
type FooterConfig struct {
	Attachment *RelatedDocumentsConfig `json:"attachment,omitempty"`
	// Use RenderConfig.filePath instead
	// Deprecated
	FilePath *bool `json:"filePath,omitempty"`
}

// NewFooterConfig instantiates a new FooterConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFooterConfig() *FooterConfig {
	this := FooterConfig{}
	return &this
}

// NewFooterConfigWithDefaults instantiates a new FooterConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFooterConfigWithDefaults() *FooterConfig {
	this := FooterConfig{}
	return &this
}

// GetAttachment returns the Attachment field value if set, zero value otherwise.
func (o *FooterConfig) GetAttachment() RelatedDocumentsConfig {
	if o == nil || IsNil(o.Attachment) {
		var ret RelatedDocumentsConfig
		return ret
	}
	return *o.Attachment
}

// GetAttachmentOk returns a tuple with the Attachment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FooterConfig) GetAttachmentOk() (*RelatedDocumentsConfig, bool) {
	if o == nil || IsNil(o.Attachment) {
		return nil, false
	}
	return o.Attachment, true
}

// HasAttachment returns a boolean if a field has been set.
func (o *FooterConfig) HasAttachment() bool {
	if o != nil && !IsNil(o.Attachment) {
		return true
	}

	return false
}

// SetAttachment gets a reference to the given RelatedDocumentsConfig and assigns it to the Attachment field.
func (o *FooterConfig) SetAttachment(v RelatedDocumentsConfig) {
	o.Attachment = &v
}

// GetFilePath returns the FilePath field value if set, zero value otherwise.
// Deprecated
func (o *FooterConfig) GetFilePath() bool {
	if o == nil || IsNil(o.FilePath) {
		var ret bool
		return ret
	}
	return *o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FooterConfig) GetFilePathOk() (*bool, bool) {
	if o == nil || IsNil(o.FilePath) {
		return nil, false
	}
	return o.FilePath, true
}

// HasFilePath returns a boolean if a field has been set.
func (o *FooterConfig) HasFilePath() bool {
	if o != nil && !IsNil(o.FilePath) {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given bool and assigns it to the FilePath field.
// Deprecated
func (o *FooterConfig) SetFilePath(v bool) {
	o.FilePath = &v
}

func (o FooterConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FooterConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachment) {
		toSerialize["attachment"] = o.Attachment
	}
	if !IsNil(o.FilePath) {
		toSerialize["filePath"] = o.FilePath
	}
	return toSerialize, nil
}

type NullableFooterConfig struct {
	value *FooterConfig
	isSet bool
}

func (v NullableFooterConfig) Get() *FooterConfig {
	return v.value
}

func (v *NullableFooterConfig) Set(val *FooterConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFooterConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFooterConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFooterConfig(val *FooterConfig) *NullableFooterConfig {
	return &NullableFooterConfig{value: val, isSet: true}
}

func (v NullableFooterConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFooterConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


