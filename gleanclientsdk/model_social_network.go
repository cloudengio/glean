/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the SocialNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SocialNetwork{}

// SocialNetwork struct for SocialNetwork
type SocialNetwork struct {
	// Possible values are \"twitter\", \"linkedin\".
	Name string `json:"name"`
	// Human-readable profile name.
	ProfileName *string `json:"profileName,omitempty"`
	// Link to profile.
	ProfileUrl string `json:"profileUrl"`
}

// NewSocialNetwork instantiates a new SocialNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSocialNetwork(name string, profileUrl string) *SocialNetwork {
	this := SocialNetwork{}
	this.Name = name
	this.ProfileUrl = profileUrl
	return &this
}

// NewSocialNetworkWithDefaults instantiates a new SocialNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSocialNetworkWithDefaults() *SocialNetwork {
	this := SocialNetwork{}
	return &this
}

// GetName returns the Name field value
func (o *SocialNetwork) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SocialNetwork) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SocialNetwork) SetName(v string) {
	o.Name = v
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise.
func (o *SocialNetwork) GetProfileName() string {
	if o == nil || IsNil(o.ProfileName) {
		var ret string
		return ret
	}
	return *o.ProfileName
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SocialNetwork) GetProfileNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileName) {
		return nil, false
	}
	return o.ProfileName, true
}

// HasProfileName returns a boolean if a field has been set.
func (o *SocialNetwork) HasProfileName() bool {
	if o != nil && !IsNil(o.ProfileName) {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given string and assigns it to the ProfileName field.
func (o *SocialNetwork) SetProfileName(v string) {
	o.ProfileName = &v
}

// GetProfileUrl returns the ProfileUrl field value
func (o *SocialNetwork) GetProfileUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileUrl
}

// GetProfileUrlOk returns a tuple with the ProfileUrl field value
// and a boolean to check if the value has been set.
func (o *SocialNetwork) GetProfileUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileUrl, true
}

// SetProfileUrl sets field value
func (o *SocialNetwork) SetProfileUrl(v string) {
	o.ProfileUrl = v
}

func (o SocialNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SocialNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ProfileName) {
		toSerialize["profileName"] = o.ProfileName
	}
	toSerialize["profileUrl"] = o.ProfileUrl
	return toSerialize, nil
}

type NullableSocialNetwork struct {
	value *SocialNetwork
	isSet bool
}

func (v NullableSocialNetwork) Get() *SocialNetwork {
	return v.value
}

func (v *NullableSocialNetwork) Set(val *SocialNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableSocialNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableSocialNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSocialNetwork(val *SocialNetwork) *NullableSocialNetwork {
	return &NullableSocialNetwork{value: val, isSet: true}
}

func (v NullableSocialNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSocialNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


