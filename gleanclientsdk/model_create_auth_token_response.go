/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CreateAuthTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAuthTokenResponse{}

// CreateAuthTokenResponse struct for CreateAuthTokenResponse
type CreateAuthTokenResponse struct {
	// An authentication token that can be passed to any endpoint via Bearer Authentication
	Token string `json:"token"`
	// Unix timestamp for when this token expires (in seconds since epoch UTC).
	ExpirationTime int64 `json:"expirationTime"`
}

// NewCreateAuthTokenResponse instantiates a new CreateAuthTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAuthTokenResponse(token string, expirationTime int64) *CreateAuthTokenResponse {
	this := CreateAuthTokenResponse{}
	this.Token = token
	this.ExpirationTime = expirationTime
	return &this
}

// NewCreateAuthTokenResponseWithDefaults instantiates a new CreateAuthTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAuthTokenResponseWithDefaults() *CreateAuthTokenResponse {
	this := CreateAuthTokenResponse{}
	return &this
}

// GetToken returns the Token field value
func (o *CreateAuthTokenResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CreateAuthTokenResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CreateAuthTokenResponse) SetToken(v string) {
	o.Token = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *CreateAuthTokenResponse) GetExpirationTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *CreateAuthTokenResponse) GetExpirationTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *CreateAuthTokenResponse) SetExpirationTime(v int64) {
	o.ExpirationTime = v
}

func (o CreateAuthTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAuthTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	toSerialize["expirationTime"] = o.ExpirationTime
	return toSerialize, nil
}

type NullableCreateAuthTokenResponse struct {
	value *CreateAuthTokenResponse
	isSet bool
}

func (v NullableCreateAuthTokenResponse) Get() *CreateAuthTokenResponse {
	return v.value
}

func (v *NullableCreateAuthTokenResponse) Set(val *CreateAuthTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAuthTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAuthTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAuthTokenResponse(val *CreateAuthTokenResponse) *NullableCreateAuthTokenResponse {
	return &NullableCreateAuthTokenResponse{value: val, isSet: true}
}

func (v NullableCreateAuthTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAuthTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


