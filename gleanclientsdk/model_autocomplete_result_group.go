/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the AutocompleteResultGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutocompleteResultGroup{}

// AutocompleteResultGroup A subsection of the results list from which distinct sections should be created.
type AutocompleteResultGroup struct {
	// The inclusive start index of the range.
	StartIndex *int32 `json:"startIndex,omitempty"`
	// The exclusive end index of the range.
	EndIndex *int32 `json:"endIndex,omitempty"`
	// The title of the result group to be displayed by FE. Empty means no title.
	Title *string `json:"title,omitempty"`
}

// NewAutocompleteResultGroup instantiates a new AutocompleteResultGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompleteResultGroup() *AutocompleteResultGroup {
	this := AutocompleteResultGroup{}
	return &this
}

// NewAutocompleteResultGroupWithDefaults instantiates a new AutocompleteResultGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompleteResultGroupWithDefaults() *AutocompleteResultGroup {
	this := AutocompleteResultGroup{}
	return &this
}

// GetStartIndex returns the StartIndex field value if set, zero value otherwise.
func (o *AutocompleteResultGroup) GetStartIndex() int32 {
	if o == nil || IsNil(o.StartIndex) {
		var ret int32
		return ret
	}
	return *o.StartIndex
}

// GetStartIndexOk returns a tuple with the StartIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompleteResultGroup) GetStartIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.StartIndex) {
		return nil, false
	}
	return o.StartIndex, true
}

// HasStartIndex returns a boolean if a field has been set.
func (o *AutocompleteResultGroup) HasStartIndex() bool {
	if o != nil && !IsNil(o.StartIndex) {
		return true
	}

	return false
}

// SetStartIndex gets a reference to the given int32 and assigns it to the StartIndex field.
func (o *AutocompleteResultGroup) SetStartIndex(v int32) {
	o.StartIndex = &v
}

// GetEndIndex returns the EndIndex field value if set, zero value otherwise.
func (o *AutocompleteResultGroup) GetEndIndex() int32 {
	if o == nil || IsNil(o.EndIndex) {
		var ret int32
		return ret
	}
	return *o.EndIndex
}

// GetEndIndexOk returns a tuple with the EndIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompleteResultGroup) GetEndIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.EndIndex) {
		return nil, false
	}
	return o.EndIndex, true
}

// HasEndIndex returns a boolean if a field has been set.
func (o *AutocompleteResultGroup) HasEndIndex() bool {
	if o != nil && !IsNil(o.EndIndex) {
		return true
	}

	return false
}

// SetEndIndex gets a reference to the given int32 and assigns it to the EndIndex field.
func (o *AutocompleteResultGroup) SetEndIndex(v int32) {
	o.EndIndex = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AutocompleteResultGroup) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutocompleteResultGroup) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AutocompleteResultGroup) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AutocompleteResultGroup) SetTitle(v string) {
	o.Title = &v
}

func (o AutocompleteResultGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutocompleteResultGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartIndex) {
		toSerialize["startIndex"] = o.StartIndex
	}
	if !IsNil(o.EndIndex) {
		toSerialize["endIndex"] = o.EndIndex
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAutocompleteResultGroup struct {
	value *AutocompleteResultGroup
	isSet bool
}

func (v NullableAutocompleteResultGroup) Get() *AutocompleteResultGroup {
	return v.value
}

func (v *NullableAutocompleteResultGroup) Set(val *AutocompleteResultGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompleteResultGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompleteResultGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompleteResultGroup(val *AutocompleteResultGroup) *NullableAutocompleteResultGroup {
	return &NullableAutocompleteResultGroup{value: val, isSet: true}
}

func (v NullableAutocompleteResultGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompleteResultGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


