/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the EditPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditPermissionsResponse{}

// EditPermissionsResponse struct for EditPermissionsResponse
type EditPermissionsResponse struct {
	Permissions Permissions `json:"permissions"`
}

// NewEditPermissionsResponse instantiates a new EditPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditPermissionsResponse(permissions Permissions) *EditPermissionsResponse {
	this := EditPermissionsResponse{}
	this.Permissions = permissions
	return &this
}

// NewEditPermissionsResponseWithDefaults instantiates a new EditPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditPermissionsResponseWithDefaults() *EditPermissionsResponse {
	this := EditPermissionsResponse{}
	return &this
}

// GetPermissions returns the Permissions field value
func (o *EditPermissionsResponse) GetPermissions() Permissions {
	if o == nil {
		var ret Permissions
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *EditPermissionsResponse) GetPermissionsOk() (*Permissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *EditPermissionsResponse) SetPermissions(v Permissions) {
	o.Permissions = v
}

func (o EditPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

type NullableEditPermissionsResponse struct {
	value *EditPermissionsResponse
	isSet bool
}

func (v NullableEditPermissionsResponse) Get() *EditPermissionsResponse {
	return v.value
}

func (v *NullableEditPermissionsResponse) Set(val *EditPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEditPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEditPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditPermissionsResponse(val *EditPermissionsResponse) *NullableEditPermissionsResponse {
	return &NullableEditPermissionsResponse{value: val, isSet: true}
}

func (v NullableEditPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


