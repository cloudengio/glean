/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the ShortcutInsightsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShortcutInsightsResponse{}

// ShortcutInsightsResponse struct for ShortcutInsightsResponse
type ShortcutInsightsResponse struct {
	// Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC).
	LastLogTimestamp *int32 `json:"lastLogTimestamp,omitempty"`
	// Insights for shortcuts.
	ShortcutInsights []ShortcutInsight `json:"shortcutInsights,omitempty"`
	// list of departments applicable for shortcuts tab.
	Departments []string `json:"departments,omitempty"`
	// Min threshold in number of visitors while populating results, otherwise 0.
	MinVisitorThreshold *int32 `json:"minVisitorThreshold,omitempty"`
}

// NewShortcutInsightsResponse instantiates a new ShortcutInsightsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShortcutInsightsResponse() *ShortcutInsightsResponse {
	this := ShortcutInsightsResponse{}
	return &this
}

// NewShortcutInsightsResponseWithDefaults instantiates a new ShortcutInsightsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShortcutInsightsResponseWithDefaults() *ShortcutInsightsResponse {
	this := ShortcutInsightsResponse{}
	return &this
}

// GetLastLogTimestamp returns the LastLogTimestamp field value if set, zero value otherwise.
func (o *ShortcutInsightsResponse) GetLastLogTimestamp() int32 {
	if o == nil || IsNil(o.LastLogTimestamp) {
		var ret int32
		return ret
	}
	return *o.LastLogTimestamp
}

// GetLastLogTimestampOk returns a tuple with the LastLogTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortcutInsightsResponse) GetLastLogTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.LastLogTimestamp) {
		return nil, false
	}
	return o.LastLogTimestamp, true
}

// HasLastLogTimestamp returns a boolean if a field has been set.
func (o *ShortcutInsightsResponse) HasLastLogTimestamp() bool {
	if o != nil && !IsNil(o.LastLogTimestamp) {
		return true
	}

	return false
}

// SetLastLogTimestamp gets a reference to the given int32 and assigns it to the LastLogTimestamp field.
func (o *ShortcutInsightsResponse) SetLastLogTimestamp(v int32) {
	o.LastLogTimestamp = &v
}

// GetShortcutInsights returns the ShortcutInsights field value if set, zero value otherwise.
func (o *ShortcutInsightsResponse) GetShortcutInsights() []ShortcutInsight {
	if o == nil || IsNil(o.ShortcutInsights) {
		var ret []ShortcutInsight
		return ret
	}
	return o.ShortcutInsights
}

// GetShortcutInsightsOk returns a tuple with the ShortcutInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortcutInsightsResponse) GetShortcutInsightsOk() ([]ShortcutInsight, bool) {
	if o == nil || IsNil(o.ShortcutInsights) {
		return nil, false
	}
	return o.ShortcutInsights, true
}

// HasShortcutInsights returns a boolean if a field has been set.
func (o *ShortcutInsightsResponse) HasShortcutInsights() bool {
	if o != nil && !IsNil(o.ShortcutInsights) {
		return true
	}

	return false
}

// SetShortcutInsights gets a reference to the given []ShortcutInsight and assigns it to the ShortcutInsights field.
func (o *ShortcutInsightsResponse) SetShortcutInsights(v []ShortcutInsight) {
	o.ShortcutInsights = v
}

// GetDepartments returns the Departments field value if set, zero value otherwise.
func (o *ShortcutInsightsResponse) GetDepartments() []string {
	if o == nil || IsNil(o.Departments) {
		var ret []string
		return ret
	}
	return o.Departments
}

// GetDepartmentsOk returns a tuple with the Departments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortcutInsightsResponse) GetDepartmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Departments) {
		return nil, false
	}
	return o.Departments, true
}

// HasDepartments returns a boolean if a field has been set.
func (o *ShortcutInsightsResponse) HasDepartments() bool {
	if o != nil && !IsNil(o.Departments) {
		return true
	}

	return false
}

// SetDepartments gets a reference to the given []string and assigns it to the Departments field.
func (o *ShortcutInsightsResponse) SetDepartments(v []string) {
	o.Departments = v
}

// GetMinVisitorThreshold returns the MinVisitorThreshold field value if set, zero value otherwise.
func (o *ShortcutInsightsResponse) GetMinVisitorThreshold() int32 {
	if o == nil || IsNil(o.MinVisitorThreshold) {
		var ret int32
		return ret
	}
	return *o.MinVisitorThreshold
}

// GetMinVisitorThresholdOk returns a tuple with the MinVisitorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortcutInsightsResponse) GetMinVisitorThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.MinVisitorThreshold) {
		return nil, false
	}
	return o.MinVisitorThreshold, true
}

// HasMinVisitorThreshold returns a boolean if a field has been set.
func (o *ShortcutInsightsResponse) HasMinVisitorThreshold() bool {
	if o != nil && !IsNil(o.MinVisitorThreshold) {
		return true
	}

	return false
}

// SetMinVisitorThreshold gets a reference to the given int32 and assigns it to the MinVisitorThreshold field.
func (o *ShortcutInsightsResponse) SetMinVisitorThreshold(v int32) {
	o.MinVisitorThreshold = &v
}

func (o ShortcutInsightsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShortcutInsightsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLogTimestamp) {
		toSerialize["lastLogTimestamp"] = o.LastLogTimestamp
	}
	if !IsNil(o.ShortcutInsights) {
		toSerialize["shortcutInsights"] = o.ShortcutInsights
	}
	if !IsNil(o.Departments) {
		toSerialize["departments"] = o.Departments
	}
	if !IsNil(o.MinVisitorThreshold) {
		toSerialize["minVisitorThreshold"] = o.MinVisitorThreshold
	}
	return toSerialize, nil
}

type NullableShortcutInsightsResponse struct {
	value *ShortcutInsightsResponse
	isSet bool
}

func (v NullableShortcutInsightsResponse) Get() *ShortcutInsightsResponse {
	return v.value
}

func (v *NullableShortcutInsightsResponse) Set(val *ShortcutInsightsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableShortcutInsightsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableShortcutInsightsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShortcutInsightsResponse(val *ShortcutInsightsResponse) *NullableShortcutInsightsResponse {
	return &NullableShortcutInsightsResponse{value: val, isSet: true}
}

func (v NullableShortcutInsightsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShortcutInsightsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


