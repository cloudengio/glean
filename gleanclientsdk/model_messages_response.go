/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the MessagesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessagesResponse{}

// MessagesResponse struct for MessagesResponse
type MessagesResponse struct {
	// Whether there are more results for client to continue requesting.
	HasMore bool `json:"hasMore"`
	SearchResponse *SearchResponse `json:"searchResponse,omitempty"`
	RootMessage *SearchResult `json:"rootMessage,omitempty"`
}

// NewMessagesResponse instantiates a new MessagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessagesResponse(hasMore bool) *MessagesResponse {
	this := MessagesResponse{}
	this.HasMore = hasMore
	return &this
}

// NewMessagesResponseWithDefaults instantiates a new MessagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessagesResponseWithDefaults() *MessagesResponse {
	this := MessagesResponse{}
	return &this
}

// GetHasMore returns the HasMore field value
func (o *MessagesResponse) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *MessagesResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *MessagesResponse) SetHasMore(v bool) {
	o.HasMore = v
}

// GetSearchResponse returns the SearchResponse field value if set, zero value otherwise.
func (o *MessagesResponse) GetSearchResponse() SearchResponse {
	if o == nil || IsNil(o.SearchResponse) {
		var ret SearchResponse
		return ret
	}
	return *o.SearchResponse
}

// GetSearchResponseOk returns a tuple with the SearchResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesResponse) GetSearchResponseOk() (*SearchResponse, bool) {
	if o == nil || IsNil(o.SearchResponse) {
		return nil, false
	}
	return o.SearchResponse, true
}

// HasSearchResponse returns a boolean if a field has been set.
func (o *MessagesResponse) HasSearchResponse() bool {
	if o != nil && !IsNil(o.SearchResponse) {
		return true
	}

	return false
}

// SetSearchResponse gets a reference to the given SearchResponse and assigns it to the SearchResponse field.
func (o *MessagesResponse) SetSearchResponse(v SearchResponse) {
	o.SearchResponse = &v
}

// GetRootMessage returns the RootMessage field value if set, zero value otherwise.
func (o *MessagesResponse) GetRootMessage() SearchResult {
	if o == nil || IsNil(o.RootMessage) {
		var ret SearchResult
		return ret
	}
	return *o.RootMessage
}

// GetRootMessageOk returns a tuple with the RootMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessagesResponse) GetRootMessageOk() (*SearchResult, bool) {
	if o == nil || IsNil(o.RootMessage) {
		return nil, false
	}
	return o.RootMessage, true
}

// HasRootMessage returns a boolean if a field has been set.
func (o *MessagesResponse) HasRootMessage() bool {
	if o != nil && !IsNil(o.RootMessage) {
		return true
	}

	return false
}

// SetRootMessage gets a reference to the given SearchResult and assigns it to the RootMessage field.
func (o *MessagesResponse) SetRootMessage(v SearchResult) {
	o.RootMessage = &v
}

func (o MessagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessagesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hasMore"] = o.HasMore
	if !IsNil(o.SearchResponse) {
		toSerialize["searchResponse"] = o.SearchResponse
	}
	if !IsNil(o.RootMessage) {
		toSerialize["rootMessage"] = o.RootMessage
	}
	return toSerialize, nil
}

type NullableMessagesResponse struct {
	value *MessagesResponse
	isSet bool
}

func (v NullableMessagesResponse) Get() *MessagesResponse {
	return v.value
}

func (v *NullableMessagesResponse) Set(val *MessagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMessagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMessagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessagesResponse(val *MessagesResponse) *NullableMessagesResponse {
	return &NullableMessagesResponse{value: val, isSet: true}
}

func (v NullableMessagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


