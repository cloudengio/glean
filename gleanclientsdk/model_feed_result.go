/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the FeedResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedResult{}

// FeedResult struct for FeedResult
type FeedResult struct {
	// Category of the result, one of the requested categories in incoming request.
	Category string `json:"category"`
	PrimaryEntry FeedEntry `json:"primaryEntry"`
	// Secondary entries for the result e.g. suggested docs for the calendar, carousel.
	SecondaryEntries []FeedEntry `json:"secondaryEntries,omitempty"`
	// Rank of the result. Rank is suggested by server. Client side rank may differ.
	Rank *int32 `json:"rank,omitempty"`
	// DEPRECATED - List of facets that can be used to filter the entry's content.
	// Deprecated
	FacetResults []FacetResult `json:"facetResults,omitempty"`
}

// NewFeedResult instantiates a new FeedResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedResult(category string, primaryEntry FeedEntry) *FeedResult {
	this := FeedResult{}
	this.Category = category
	this.PrimaryEntry = primaryEntry
	return &this
}

// NewFeedResultWithDefaults instantiates a new FeedResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedResultWithDefaults() *FeedResult {
	this := FeedResult{}
	return &this
}

// GetCategory returns the Category field value
func (o *FeedResult) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *FeedResult) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *FeedResult) SetCategory(v string) {
	o.Category = v
}

// GetPrimaryEntry returns the PrimaryEntry field value
func (o *FeedResult) GetPrimaryEntry() FeedEntry {
	if o == nil {
		var ret FeedEntry
		return ret
	}

	return o.PrimaryEntry
}

// GetPrimaryEntryOk returns a tuple with the PrimaryEntry field value
// and a boolean to check if the value has been set.
func (o *FeedResult) GetPrimaryEntryOk() (*FeedEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryEntry, true
}

// SetPrimaryEntry sets field value
func (o *FeedResult) SetPrimaryEntry(v FeedEntry) {
	o.PrimaryEntry = v
}

// GetSecondaryEntries returns the SecondaryEntries field value if set, zero value otherwise.
func (o *FeedResult) GetSecondaryEntries() []FeedEntry {
	if o == nil || IsNil(o.SecondaryEntries) {
		var ret []FeedEntry
		return ret
	}
	return o.SecondaryEntries
}

// GetSecondaryEntriesOk returns a tuple with the SecondaryEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedResult) GetSecondaryEntriesOk() ([]FeedEntry, bool) {
	if o == nil || IsNil(o.SecondaryEntries) {
		return nil, false
	}
	return o.SecondaryEntries, true
}

// HasSecondaryEntries returns a boolean if a field has been set.
func (o *FeedResult) HasSecondaryEntries() bool {
	if o != nil && !IsNil(o.SecondaryEntries) {
		return true
	}

	return false
}

// SetSecondaryEntries gets a reference to the given []FeedEntry and assigns it to the SecondaryEntries field.
func (o *FeedResult) SetSecondaryEntries(v []FeedEntry) {
	o.SecondaryEntries = v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *FeedResult) GetRank() int32 {
	if o == nil || IsNil(o.Rank) {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedResult) GetRankOk() (*int32, bool) {
	if o == nil || IsNil(o.Rank) {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *FeedResult) HasRank() bool {
	if o != nil && !IsNil(o.Rank) {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *FeedResult) SetRank(v int32) {
	o.Rank = &v
}

// GetFacetResults returns the FacetResults field value if set, zero value otherwise.
// Deprecated
func (o *FeedResult) GetFacetResults() []FacetResult {
	if o == nil || IsNil(o.FacetResults) {
		var ret []FacetResult
		return ret
	}
	return o.FacetResults
}

// GetFacetResultsOk returns a tuple with the FacetResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *FeedResult) GetFacetResultsOk() ([]FacetResult, bool) {
	if o == nil || IsNil(o.FacetResults) {
		return nil, false
	}
	return o.FacetResults, true
}

// HasFacetResults returns a boolean if a field has been set.
func (o *FeedResult) HasFacetResults() bool {
	if o != nil && !IsNil(o.FacetResults) {
		return true
	}

	return false
}

// SetFacetResults gets a reference to the given []FacetResult and assigns it to the FacetResults field.
// Deprecated
func (o *FeedResult) SetFacetResults(v []FacetResult) {
	o.FacetResults = v
}

func (o FeedResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["primaryEntry"] = o.PrimaryEntry
	if !IsNil(o.SecondaryEntries) {
		toSerialize["secondaryEntries"] = o.SecondaryEntries
	}
	if !IsNil(o.Rank) {
		toSerialize["rank"] = o.Rank
	}
	if !IsNil(o.FacetResults) {
		toSerialize["facetResults"] = o.FacetResults
	}
	return toSerialize, nil
}

type NullableFeedResult struct {
	value *FeedResult
	isSet bool
}

func (v NullableFeedResult) Get() *FeedResult {
	return v.value
}

func (v *NullableFeedResult) Set(val *FeedResult) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedResult) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedResult(val *FeedResult) *NullableFeedResult {
	return &NullableFeedResult{value: val, isSet: true}
}

func (v NullableFeedResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


