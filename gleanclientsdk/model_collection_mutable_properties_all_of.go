/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CollectionMutablePropertiesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionMutablePropertiesAllOf{}

// CollectionMutablePropertiesAllOf struct for CollectionMutablePropertiesAllOf
type CollectionMutablePropertiesAllOf struct {
	// The emoji icon of this Collection.
	Icon *string `json:"icon,omitempty"`
	// Indicates whether edits are allowed for everyone or only admins.
	AdminLocked *bool `json:"adminLocked,omitempty"`
	// The parent of this Collection, or 0 if it's a top-level Collection.
	ParentId *int32 `json:"parentId,omitempty"`
	Thumbnail *Thumbnail `json:"thumbnail,omitempty"`
	// The datasource type this collection can hold.
	AllowedDatasource *string `json:"allowedDatasource,omitempty"`
}

// NewCollectionMutablePropertiesAllOf instantiates a new CollectionMutablePropertiesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionMutablePropertiesAllOf() *CollectionMutablePropertiesAllOf {
	this := CollectionMutablePropertiesAllOf{}
	return &this
}

// NewCollectionMutablePropertiesAllOfWithDefaults instantiates a new CollectionMutablePropertiesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionMutablePropertiesAllOfWithDefaults() *CollectionMutablePropertiesAllOf {
	this := CollectionMutablePropertiesAllOf{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CollectionMutablePropertiesAllOf) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMutablePropertiesAllOf) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CollectionMutablePropertiesAllOf) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CollectionMutablePropertiesAllOf) SetIcon(v string) {
	o.Icon = &v
}

// GetAdminLocked returns the AdminLocked field value if set, zero value otherwise.
func (o *CollectionMutablePropertiesAllOf) GetAdminLocked() bool {
	if o == nil || IsNil(o.AdminLocked) {
		var ret bool
		return ret
	}
	return *o.AdminLocked
}

// GetAdminLockedOk returns a tuple with the AdminLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMutablePropertiesAllOf) GetAdminLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.AdminLocked) {
		return nil, false
	}
	return o.AdminLocked, true
}

// HasAdminLocked returns a boolean if a field has been set.
func (o *CollectionMutablePropertiesAllOf) HasAdminLocked() bool {
	if o != nil && !IsNil(o.AdminLocked) {
		return true
	}

	return false
}

// SetAdminLocked gets a reference to the given bool and assigns it to the AdminLocked field.
func (o *CollectionMutablePropertiesAllOf) SetAdminLocked(v bool) {
	o.AdminLocked = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *CollectionMutablePropertiesAllOf) GetParentId() int32 {
	if o == nil || IsNil(o.ParentId) {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMutablePropertiesAllOf) GetParentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *CollectionMutablePropertiesAllOf) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *CollectionMutablePropertiesAllOf) SetParentId(v int32) {
	o.ParentId = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *CollectionMutablePropertiesAllOf) GetThumbnail() Thumbnail {
	if o == nil || IsNil(o.Thumbnail) {
		var ret Thumbnail
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMutablePropertiesAllOf) GetThumbnailOk() (*Thumbnail, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *CollectionMutablePropertiesAllOf) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given Thumbnail and assigns it to the Thumbnail field.
func (o *CollectionMutablePropertiesAllOf) SetThumbnail(v Thumbnail) {
	o.Thumbnail = &v
}

// GetAllowedDatasource returns the AllowedDatasource field value if set, zero value otherwise.
func (o *CollectionMutablePropertiesAllOf) GetAllowedDatasource() string {
	if o == nil || IsNil(o.AllowedDatasource) {
		var ret string
		return ret
	}
	return *o.AllowedDatasource
}

// GetAllowedDatasourceOk returns a tuple with the AllowedDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionMutablePropertiesAllOf) GetAllowedDatasourceOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedDatasource) {
		return nil, false
	}
	return o.AllowedDatasource, true
}

// HasAllowedDatasource returns a boolean if a field has been set.
func (o *CollectionMutablePropertiesAllOf) HasAllowedDatasource() bool {
	if o != nil && !IsNil(o.AllowedDatasource) {
		return true
	}

	return false
}

// SetAllowedDatasource gets a reference to the given string and assigns it to the AllowedDatasource field.
func (o *CollectionMutablePropertiesAllOf) SetAllowedDatasource(v string) {
	o.AllowedDatasource = &v
}

func (o CollectionMutablePropertiesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionMutablePropertiesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.AdminLocked) {
		toSerialize["adminLocked"] = o.AdminLocked
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.AllowedDatasource) {
		toSerialize["allowedDatasource"] = o.AllowedDatasource
	}
	return toSerialize, nil
}

type NullableCollectionMutablePropertiesAllOf struct {
	value *CollectionMutablePropertiesAllOf
	isSet bool
}

func (v NullableCollectionMutablePropertiesAllOf) Get() *CollectionMutablePropertiesAllOf {
	return v.value
}

func (v *NullableCollectionMutablePropertiesAllOf) Set(val *CollectionMutablePropertiesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionMutablePropertiesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionMutablePropertiesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionMutablePropertiesAllOf(val *CollectionMutablePropertiesAllOf) *NullableCollectionMutablePropertiesAllOf {
	return &NullableCollectionMutablePropertiesAllOf{value: val, isSet: true}
}

func (v NullableCollectionMutablePropertiesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionMutablePropertiesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


