/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DocumentFacetAnalytics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentFacetAnalytics{}

// DocumentFacetAnalytics struct for DocumentFacetAnalytics
type DocumentFacetAnalytics struct {
	Facet *FacetFilter `json:"facet,omitempty"`
	Analytics *DocumentAnalytics `json:"analytics,omitempty"`
}

// NewDocumentFacetAnalytics instantiates a new DocumentFacetAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentFacetAnalytics() *DocumentFacetAnalytics {
	this := DocumentFacetAnalytics{}
	return &this
}

// NewDocumentFacetAnalyticsWithDefaults instantiates a new DocumentFacetAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentFacetAnalyticsWithDefaults() *DocumentFacetAnalytics {
	this := DocumentFacetAnalytics{}
	return &this
}

// GetFacet returns the Facet field value if set, zero value otherwise.
func (o *DocumentFacetAnalytics) GetFacet() FacetFilter {
	if o == nil || IsNil(o.Facet) {
		var ret FacetFilter
		return ret
	}
	return *o.Facet
}

// GetFacetOk returns a tuple with the Facet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFacetAnalytics) GetFacetOk() (*FacetFilter, bool) {
	if o == nil || IsNil(o.Facet) {
		return nil, false
	}
	return o.Facet, true
}

// HasFacet returns a boolean if a field has been set.
func (o *DocumentFacetAnalytics) HasFacet() bool {
	if o != nil && !IsNil(o.Facet) {
		return true
	}

	return false
}

// SetFacet gets a reference to the given FacetFilter and assigns it to the Facet field.
func (o *DocumentFacetAnalytics) SetFacet(v FacetFilter) {
	o.Facet = &v
}

// GetAnalytics returns the Analytics field value if set, zero value otherwise.
func (o *DocumentFacetAnalytics) GetAnalytics() DocumentAnalytics {
	if o == nil || IsNil(o.Analytics) {
		var ret DocumentAnalytics
		return ret
	}
	return *o.Analytics
}

// GetAnalyticsOk returns a tuple with the Analytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentFacetAnalytics) GetAnalyticsOk() (*DocumentAnalytics, bool) {
	if o == nil || IsNil(o.Analytics) {
		return nil, false
	}
	return o.Analytics, true
}

// HasAnalytics returns a boolean if a field has been set.
func (o *DocumentFacetAnalytics) HasAnalytics() bool {
	if o != nil && !IsNil(o.Analytics) {
		return true
	}

	return false
}

// SetAnalytics gets a reference to the given DocumentAnalytics and assigns it to the Analytics field.
func (o *DocumentFacetAnalytics) SetAnalytics(v DocumentAnalytics) {
	o.Analytics = &v
}

func (o DocumentFacetAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentFacetAnalytics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Facet) {
		toSerialize["facet"] = o.Facet
	}
	if !IsNil(o.Analytics) {
		toSerialize["analytics"] = o.Analytics
	}
	return toSerialize, nil
}

type NullableDocumentFacetAnalytics struct {
	value *DocumentFacetAnalytics
	isSet bool
}

func (v NullableDocumentFacetAnalytics) Get() *DocumentFacetAnalytics {
	return v.value
}

func (v *NullableDocumentFacetAnalytics) Set(val *DocumentFacetAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentFacetAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentFacetAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentFacetAnalytics(val *DocumentFacetAnalytics) *NullableDocumentFacetAnalytics {
	return &NullableDocumentFacetAnalytics{value: val, isSet: true}
}

func (v NullableDocumentFacetAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentFacetAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


