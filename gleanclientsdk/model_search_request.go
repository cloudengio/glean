/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
	"time"
)

// checks if the SearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchRequest{}

// SearchRequest struct for SearchRequest
type SearchRequest struct {
	// The ISO 8601 timestamp associated with the client request.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	// A previously received trackingToken for a search associated with the same query. Useful for more requests and requests for other tabs.
	TrackingToken *string `json:"trackingToken,omitempty"`
	SessionInfo *SessionInfo `json:"sessionInfo,omitempty"`
	SourceInfo SearchRequestSourceInfo `json:"sourceInfo"`
	SourceDocument *Document `json:"sourceDocument,omitempty"`
	// Debug only search params to to change the flow of control in request handling. It will be passed around service boundaries/endpoints. For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit. Requires sufficient permissions.
	Sc *string `json:"sc,omitempty"`
	// Hint to the server about how many results to send back. Server may return less or more. Structured results and clustered results don't count towards pageSize.
	PageSize *int32 `json:"pageSize,omitempty"`
	// Hint to the server about how many characters long a snippet may be. Server may return less or more.
	MaxSnippetSize *int32 `json:"maxSnippetSize,omitempty"`
	// The search terms.
	Query *string `json:"query,omitempty"`
	// Pagination cursor. A previously received opaque token representing the position in the overall results at which to start.
	Cursor *string `json:"cursor,omitempty"`
	// The unique IDs of the result tabs for which to fetch results. This will have precedence over datasource filters if both are specified and in conflict.
	ResultTabIds []string `json:"resultTabIds,omitempty"`
	InputDetails *SearchRequestInputDetails `json:"inputDetails,omitempty"`
	RequestOptions *SearchRequestOptions `json:"requestOptions,omitempty"`
	// Timeout in milliseconds for the request. Backend should throw a 408 if request takes longer than this.
	TimeoutMillis *int32 `json:"timeoutMillis,omitempty"`
	// People associated with the search request. Hints to the server to fetch additional information for these people. Note that in this request, an email may be used as a person's obfuscatedId value.
	People []Person `json:"people,omitempty"`
	// Whether or not to disable spellcheck.
	DisableSpellcheck *bool `json:"disableSpellcheck,omitempty"`
}

// NewSearchRequest instantiates a new SearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchRequest(sourceInfo SearchRequestSourceInfo) *SearchRequest {
	this := SearchRequest{}
	this.SourceInfo = sourceInfo
	return &this
}

// NewSearchRequestWithDefaults instantiates a new SearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchRequestWithDefaults() *SearchRequest {
	this := SearchRequest{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SearchRequest) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SearchRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *SearchRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetTrackingToken returns the TrackingToken field value if set, zero value otherwise.
func (o *SearchRequest) GetTrackingToken() string {
	if o == nil || IsNil(o.TrackingToken) {
		var ret string
		return ret
	}
	return *o.TrackingToken
}

// GetTrackingTokenOk returns a tuple with the TrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingToken) {
		return nil, false
	}
	return o.TrackingToken, true
}

// HasTrackingToken returns a boolean if a field has been set.
func (o *SearchRequest) HasTrackingToken() bool {
	if o != nil && !IsNil(o.TrackingToken) {
		return true
	}

	return false
}

// SetTrackingToken gets a reference to the given string and assigns it to the TrackingToken field.
func (o *SearchRequest) SetTrackingToken(v string) {
	o.TrackingToken = &v
}

// GetSessionInfo returns the SessionInfo field value if set, zero value otherwise.
func (o *SearchRequest) GetSessionInfo() SessionInfo {
	if o == nil || IsNil(o.SessionInfo) {
		var ret SessionInfo
		return ret
	}
	return *o.SessionInfo
}

// GetSessionInfoOk returns a tuple with the SessionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetSessionInfoOk() (*SessionInfo, bool) {
	if o == nil || IsNil(o.SessionInfo) {
		return nil, false
	}
	return o.SessionInfo, true
}

// HasSessionInfo returns a boolean if a field has been set.
func (o *SearchRequest) HasSessionInfo() bool {
	if o != nil && !IsNil(o.SessionInfo) {
		return true
	}

	return false
}

// SetSessionInfo gets a reference to the given SessionInfo and assigns it to the SessionInfo field.
func (o *SearchRequest) SetSessionInfo(v SessionInfo) {
	o.SessionInfo = &v
}

// GetSourceInfo returns the SourceInfo field value
func (o *SearchRequest) GetSourceInfo() SearchRequestSourceInfo {
	if o == nil {
		var ret SearchRequestSourceInfo
		return ret
	}

	return o.SourceInfo
}

// GetSourceInfoOk returns a tuple with the SourceInfo field value
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetSourceInfoOk() (*SearchRequestSourceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceInfo, true
}

// SetSourceInfo sets field value
func (o *SearchRequest) SetSourceInfo(v SearchRequestSourceInfo) {
	o.SourceInfo = v
}

// GetSourceDocument returns the SourceDocument field value if set, zero value otherwise.
func (o *SearchRequest) GetSourceDocument() Document {
	if o == nil || IsNil(o.SourceDocument) {
		var ret Document
		return ret
	}
	return *o.SourceDocument
}

// GetSourceDocumentOk returns a tuple with the SourceDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetSourceDocumentOk() (*Document, bool) {
	if o == nil || IsNil(o.SourceDocument) {
		return nil, false
	}
	return o.SourceDocument, true
}

// HasSourceDocument returns a boolean if a field has been set.
func (o *SearchRequest) HasSourceDocument() bool {
	if o != nil && !IsNil(o.SourceDocument) {
		return true
	}

	return false
}

// SetSourceDocument gets a reference to the given Document and assigns it to the SourceDocument field.
func (o *SearchRequest) SetSourceDocument(v Document) {
	o.SourceDocument = &v
}

// GetSc returns the Sc field value if set, zero value otherwise.
func (o *SearchRequest) GetSc() string {
	if o == nil || IsNil(o.Sc) {
		var ret string
		return ret
	}
	return *o.Sc
}

// GetScOk returns a tuple with the Sc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetScOk() (*string, bool) {
	if o == nil || IsNil(o.Sc) {
		return nil, false
	}
	return o.Sc, true
}

// HasSc returns a boolean if a field has been set.
func (o *SearchRequest) HasSc() bool {
	if o != nil && !IsNil(o.Sc) {
		return true
	}

	return false
}

// SetSc gets a reference to the given string and assigns it to the Sc field.
func (o *SearchRequest) SetSc(v string) {
	o.Sc = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *SearchRequest) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *SearchRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *SearchRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetMaxSnippetSize returns the MaxSnippetSize field value if set, zero value otherwise.
func (o *SearchRequest) GetMaxSnippetSize() int32 {
	if o == nil || IsNil(o.MaxSnippetSize) {
		var ret int32
		return ret
	}
	return *o.MaxSnippetSize
}

// GetMaxSnippetSizeOk returns a tuple with the MaxSnippetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetMaxSnippetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSnippetSize) {
		return nil, false
	}
	return o.MaxSnippetSize, true
}

// HasMaxSnippetSize returns a boolean if a field has been set.
func (o *SearchRequest) HasMaxSnippetSize() bool {
	if o != nil && !IsNil(o.MaxSnippetSize) {
		return true
	}

	return false
}

// SetMaxSnippetSize gets a reference to the given int32 and assigns it to the MaxSnippetSize field.
func (o *SearchRequest) SetMaxSnippetSize(v int32) {
	o.MaxSnippetSize = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SearchRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SearchRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *SearchRequest) SetQuery(v string) {
	o.Query = &v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *SearchRequest) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *SearchRequest) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *SearchRequest) SetCursor(v string) {
	o.Cursor = &v
}

// GetResultTabIds returns the ResultTabIds field value if set, zero value otherwise.
func (o *SearchRequest) GetResultTabIds() []string {
	if o == nil || IsNil(o.ResultTabIds) {
		var ret []string
		return ret
	}
	return o.ResultTabIds
}

// GetResultTabIdsOk returns a tuple with the ResultTabIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetResultTabIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResultTabIds) {
		return nil, false
	}
	return o.ResultTabIds, true
}

// HasResultTabIds returns a boolean if a field has been set.
func (o *SearchRequest) HasResultTabIds() bool {
	if o != nil && !IsNil(o.ResultTabIds) {
		return true
	}

	return false
}

// SetResultTabIds gets a reference to the given []string and assigns it to the ResultTabIds field.
func (o *SearchRequest) SetResultTabIds(v []string) {
	o.ResultTabIds = v
}

// GetInputDetails returns the InputDetails field value if set, zero value otherwise.
func (o *SearchRequest) GetInputDetails() SearchRequestInputDetails {
	if o == nil || IsNil(o.InputDetails) {
		var ret SearchRequestInputDetails
		return ret
	}
	return *o.InputDetails
}

// GetInputDetailsOk returns a tuple with the InputDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetInputDetailsOk() (*SearchRequestInputDetails, bool) {
	if o == nil || IsNil(o.InputDetails) {
		return nil, false
	}
	return o.InputDetails, true
}

// HasInputDetails returns a boolean if a field has been set.
func (o *SearchRequest) HasInputDetails() bool {
	if o != nil && !IsNil(o.InputDetails) {
		return true
	}

	return false
}

// SetInputDetails gets a reference to the given SearchRequestInputDetails and assigns it to the InputDetails field.
func (o *SearchRequest) SetInputDetails(v SearchRequestInputDetails) {
	o.InputDetails = &v
}

// GetRequestOptions returns the RequestOptions field value if set, zero value otherwise.
func (o *SearchRequest) GetRequestOptions() SearchRequestOptions {
	if o == nil || IsNil(o.RequestOptions) {
		var ret SearchRequestOptions
		return ret
	}
	return *o.RequestOptions
}

// GetRequestOptionsOk returns a tuple with the RequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetRequestOptionsOk() (*SearchRequestOptions, bool) {
	if o == nil || IsNil(o.RequestOptions) {
		return nil, false
	}
	return o.RequestOptions, true
}

// HasRequestOptions returns a boolean if a field has been set.
func (o *SearchRequest) HasRequestOptions() bool {
	if o != nil && !IsNil(o.RequestOptions) {
		return true
	}

	return false
}

// SetRequestOptions gets a reference to the given SearchRequestOptions and assigns it to the RequestOptions field.
func (o *SearchRequest) SetRequestOptions(v SearchRequestOptions) {
	o.RequestOptions = &v
}

// GetTimeoutMillis returns the TimeoutMillis field value if set, zero value otherwise.
func (o *SearchRequest) GetTimeoutMillis() int32 {
	if o == nil || IsNil(o.TimeoutMillis) {
		var ret int32
		return ret
	}
	return *o.TimeoutMillis
}

// GetTimeoutMillisOk returns a tuple with the TimeoutMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetTimeoutMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutMillis) {
		return nil, false
	}
	return o.TimeoutMillis, true
}

// HasTimeoutMillis returns a boolean if a field has been set.
func (o *SearchRequest) HasTimeoutMillis() bool {
	if o != nil && !IsNil(o.TimeoutMillis) {
		return true
	}

	return false
}

// SetTimeoutMillis gets a reference to the given int32 and assigns it to the TimeoutMillis field.
func (o *SearchRequest) SetTimeoutMillis(v int32) {
	o.TimeoutMillis = &v
}

// GetPeople returns the People field value if set, zero value otherwise.
func (o *SearchRequest) GetPeople() []Person {
	if o == nil || IsNil(o.People) {
		var ret []Person
		return ret
	}
	return o.People
}

// GetPeopleOk returns a tuple with the People field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetPeopleOk() ([]Person, bool) {
	if o == nil || IsNil(o.People) {
		return nil, false
	}
	return o.People, true
}

// HasPeople returns a boolean if a field has been set.
func (o *SearchRequest) HasPeople() bool {
	if o != nil && !IsNil(o.People) {
		return true
	}

	return false
}

// SetPeople gets a reference to the given []Person and assigns it to the People field.
func (o *SearchRequest) SetPeople(v []Person) {
	o.People = v
}

// GetDisableSpellcheck returns the DisableSpellcheck field value if set, zero value otherwise.
func (o *SearchRequest) GetDisableSpellcheck() bool {
	if o == nil || IsNil(o.DisableSpellcheck) {
		var ret bool
		return ret
	}
	return *o.DisableSpellcheck
}

// GetDisableSpellcheckOk returns a tuple with the DisableSpellcheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchRequest) GetDisableSpellcheckOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSpellcheck) {
		return nil, false
	}
	return o.DisableSpellcheck, true
}

// HasDisableSpellcheck returns a boolean if a field has been set.
func (o *SearchRequest) HasDisableSpellcheck() bool {
	if o != nil && !IsNil(o.DisableSpellcheck) {
		return true
	}

	return false
}

// SetDisableSpellcheck gets a reference to the given bool and assigns it to the DisableSpellcheck field.
func (o *SearchRequest) SetDisableSpellcheck(v bool) {
	o.DisableSpellcheck = &v
}

func (o SearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TrackingToken) {
		toSerialize["trackingToken"] = o.TrackingToken
	}
	if !IsNil(o.SessionInfo) {
		toSerialize["sessionInfo"] = o.SessionInfo
	}
	toSerialize["sourceInfo"] = o.SourceInfo
	if !IsNil(o.SourceDocument) {
		toSerialize["sourceDocument"] = o.SourceDocument
	}
	if !IsNil(o.Sc) {
		toSerialize["sc"] = o.Sc
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.MaxSnippetSize) {
		toSerialize["maxSnippetSize"] = o.MaxSnippetSize
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.ResultTabIds) {
		toSerialize["resultTabIds"] = o.ResultTabIds
	}
	if !IsNil(o.InputDetails) {
		toSerialize["inputDetails"] = o.InputDetails
	}
	if !IsNil(o.RequestOptions) {
		toSerialize["requestOptions"] = o.RequestOptions
	}
	if !IsNil(o.TimeoutMillis) {
		toSerialize["timeoutMillis"] = o.TimeoutMillis
	}
	if !IsNil(o.People) {
		toSerialize["people"] = o.People
	}
	if !IsNil(o.DisableSpellcheck) {
		toSerialize["disableSpellcheck"] = o.DisableSpellcheck
	}
	return toSerialize, nil
}

type NullableSearchRequest struct {
	value *SearchRequest
	isSet bool
}

func (v NullableSearchRequest) Get() *SearchRequest {
	return v.value
}

func (v *NullableSearchRequest) Set(val *SearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchRequest(val *SearchRequest) *NullableSearchRequest {
	return &NullableSearchRequest{value: val, isSet: true}
}

func (v NullableSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


