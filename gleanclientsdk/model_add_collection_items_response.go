/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the AddCollectionItemsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCollectionItemsResponse{}

// AddCollectionItemsResponse struct for AddCollectionItemsResponse
type AddCollectionItemsResponse struct {
	Collection *Collection `json:"collection,omitempty"`
	Error *AddCollectionItemsError `json:"error,omitempty"`
}

// NewAddCollectionItemsResponse instantiates a new AddCollectionItemsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCollectionItemsResponse() *AddCollectionItemsResponse {
	this := AddCollectionItemsResponse{}
	return &this
}

// NewAddCollectionItemsResponseWithDefaults instantiates a new AddCollectionItemsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCollectionItemsResponseWithDefaults() *AddCollectionItemsResponse {
	this := AddCollectionItemsResponse{}
	return &this
}

// GetCollection returns the Collection field value if set, zero value otherwise.
func (o *AddCollectionItemsResponse) GetCollection() Collection {
	if o == nil || IsNil(o.Collection) {
		var ret Collection
		return ret
	}
	return *o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectionItemsResponse) GetCollectionOk() (*Collection, bool) {
	if o == nil || IsNil(o.Collection) {
		return nil, false
	}
	return o.Collection, true
}

// HasCollection returns a boolean if a field has been set.
func (o *AddCollectionItemsResponse) HasCollection() bool {
	if o != nil && !IsNil(o.Collection) {
		return true
	}

	return false
}

// SetCollection gets a reference to the given Collection and assigns it to the Collection field.
func (o *AddCollectionItemsResponse) SetCollection(v Collection) {
	o.Collection = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AddCollectionItemsResponse) GetError() AddCollectionItemsError {
	if o == nil || IsNil(o.Error) {
		var ret AddCollectionItemsError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectionItemsResponse) GetErrorOk() (*AddCollectionItemsError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AddCollectionItemsResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given AddCollectionItemsError and assigns it to the Error field.
func (o *AddCollectionItemsResponse) SetError(v AddCollectionItemsError) {
	o.Error = &v
}

func (o AddCollectionItemsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCollectionItemsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Collection) {
		toSerialize["collection"] = o.Collection
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableAddCollectionItemsResponse struct {
	value *AddCollectionItemsResponse
	isSet bool
}

func (v NullableAddCollectionItemsResponse) Get() *AddCollectionItemsResponse {
	return v.value
}

func (v *NullableAddCollectionItemsResponse) Set(val *AddCollectionItemsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCollectionItemsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCollectionItemsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCollectionItemsResponse(val *AddCollectionItemsResponse) *NullableAddCollectionItemsResponse {
	return &NullableAddCollectionItemsResponse{value: val, isSet: true}
}

func (v NullableAddCollectionItemsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCollectionItemsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


