/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the ListCollectionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCollectionsRequest{}

// ListCollectionsRequest struct for ListCollectionsRequest
type ListCollectionsRequest struct {
	// Whether to include the audience filters with the listed collections.
	IncludeAudience *bool `json:"includeAudience,omitempty"`
	// Whether to include the editor roles with the listed collections.
	IncludeRoles *bool `json:"includeRoles,omitempty"`
	// The datasource type this collection can hold. ANSWERS - for collections representing answer boards
	AllowedDatasource *string `json:"allowedDatasource,omitempty"`
}

// NewListCollectionsRequest instantiates a new ListCollectionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCollectionsRequest() *ListCollectionsRequest {
	this := ListCollectionsRequest{}
	return &this
}

// NewListCollectionsRequestWithDefaults instantiates a new ListCollectionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCollectionsRequestWithDefaults() *ListCollectionsRequest {
	this := ListCollectionsRequest{}
	return &this
}

// GetIncludeAudience returns the IncludeAudience field value if set, zero value otherwise.
func (o *ListCollectionsRequest) GetIncludeAudience() bool {
	if o == nil || IsNil(o.IncludeAudience) {
		var ret bool
		return ret
	}
	return *o.IncludeAudience
}

// GetIncludeAudienceOk returns a tuple with the IncludeAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCollectionsRequest) GetIncludeAudienceOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAudience) {
		return nil, false
	}
	return o.IncludeAudience, true
}

// HasIncludeAudience returns a boolean if a field has been set.
func (o *ListCollectionsRequest) HasIncludeAudience() bool {
	if o != nil && !IsNil(o.IncludeAudience) {
		return true
	}

	return false
}

// SetIncludeAudience gets a reference to the given bool and assigns it to the IncludeAudience field.
func (o *ListCollectionsRequest) SetIncludeAudience(v bool) {
	o.IncludeAudience = &v
}

// GetIncludeRoles returns the IncludeRoles field value if set, zero value otherwise.
func (o *ListCollectionsRequest) GetIncludeRoles() bool {
	if o == nil || IsNil(o.IncludeRoles) {
		var ret bool
		return ret
	}
	return *o.IncludeRoles
}

// GetIncludeRolesOk returns a tuple with the IncludeRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCollectionsRequest) GetIncludeRolesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeRoles) {
		return nil, false
	}
	return o.IncludeRoles, true
}

// HasIncludeRoles returns a boolean if a field has been set.
func (o *ListCollectionsRequest) HasIncludeRoles() bool {
	if o != nil && !IsNil(o.IncludeRoles) {
		return true
	}

	return false
}

// SetIncludeRoles gets a reference to the given bool and assigns it to the IncludeRoles field.
func (o *ListCollectionsRequest) SetIncludeRoles(v bool) {
	o.IncludeRoles = &v
}

// GetAllowedDatasource returns the AllowedDatasource field value if set, zero value otherwise.
func (o *ListCollectionsRequest) GetAllowedDatasource() string {
	if o == nil || IsNil(o.AllowedDatasource) {
		var ret string
		return ret
	}
	return *o.AllowedDatasource
}

// GetAllowedDatasourceOk returns a tuple with the AllowedDatasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCollectionsRequest) GetAllowedDatasourceOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedDatasource) {
		return nil, false
	}
	return o.AllowedDatasource, true
}

// HasAllowedDatasource returns a boolean if a field has been set.
func (o *ListCollectionsRequest) HasAllowedDatasource() bool {
	if o != nil && !IsNil(o.AllowedDatasource) {
		return true
	}

	return false
}

// SetAllowedDatasource gets a reference to the given string and assigns it to the AllowedDatasource field.
func (o *ListCollectionsRequest) SetAllowedDatasource(v string) {
	o.AllowedDatasource = &v
}

func (o ListCollectionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCollectionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludeAudience) {
		toSerialize["includeAudience"] = o.IncludeAudience
	}
	if !IsNil(o.IncludeRoles) {
		toSerialize["includeRoles"] = o.IncludeRoles
	}
	if !IsNil(o.AllowedDatasource) {
		toSerialize["allowedDatasource"] = o.AllowedDatasource
	}
	return toSerialize, nil
}

type NullableListCollectionsRequest struct {
	value *ListCollectionsRequest
	isSet bool
}

func (v NullableListCollectionsRequest) Get() *ListCollectionsRequest {
	return v.value
}

func (v *NullableListCollectionsRequest) Set(val *ListCollectionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListCollectionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListCollectionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCollectionsRequest(val *ListCollectionsRequest) *NullableListCollectionsRequest {
	return &NullableListCollectionsRequest{value: val, isSet: true}
}

func (v NullableListCollectionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCollectionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


