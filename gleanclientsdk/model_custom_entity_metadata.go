/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CustomEntityMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEntityMetadata{}

// CustomEntityMetadata struct for CustomEntityMetadata
type CustomEntityMetadata struct {
	// Custom fields specific to individual datasources
	CustomData *map[string]CustomDataValue `json:"customData,omitempty"`
}

// NewCustomEntityMetadata instantiates a new CustomEntityMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEntityMetadata() *CustomEntityMetadata {
	this := CustomEntityMetadata{}
	return &this
}

// NewCustomEntityMetadataWithDefaults instantiates a new CustomEntityMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEntityMetadataWithDefaults() *CustomEntityMetadata {
	this := CustomEntityMetadata{}
	return &this
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *CustomEntityMetadata) GetCustomData() map[string]CustomDataValue {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]CustomDataValue
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEntityMetadata) GetCustomDataOk() (*map[string]CustomDataValue, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *CustomEntityMetadata) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]CustomDataValue and assigns it to the CustomData field.
func (o *CustomEntityMetadata) SetCustomData(v map[string]CustomDataValue) {
	o.CustomData = &v
}

func (o CustomEntityMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEntityMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	return toSerialize, nil
}

type NullableCustomEntityMetadata struct {
	value *CustomEntityMetadata
	isSet bool
}

func (v NullableCustomEntityMetadata) Get() *CustomEntityMetadata {
	return v.value
}

func (v *NullableCustomEntityMetadata) Set(val *CustomEntityMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEntityMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEntityMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEntityMetadata(val *CustomEntityMetadata) *NullableCustomEntityMetadata {
	return &NullableCustomEntityMetadata{value: val, isSet: true}
}

func (v NullableCustomEntityMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEntityMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


