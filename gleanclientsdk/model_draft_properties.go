/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DraftProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DraftProperties{}

// DraftProperties struct for DraftProperties
type DraftProperties struct {
	// The opaque id of the associated draft.
	DraftId *int32 `json:"draftId,omitempty"`
}

// NewDraftProperties instantiates a new DraftProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDraftProperties() *DraftProperties {
	this := DraftProperties{}
	return &this
}

// NewDraftPropertiesWithDefaults instantiates a new DraftProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDraftPropertiesWithDefaults() *DraftProperties {
	this := DraftProperties{}
	return &this
}

// GetDraftId returns the DraftId field value if set, zero value otherwise.
func (o *DraftProperties) GetDraftId() int32 {
	if o == nil || IsNil(o.DraftId) {
		var ret int32
		return ret
	}
	return *o.DraftId
}

// GetDraftIdOk returns a tuple with the DraftId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DraftProperties) GetDraftIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DraftId) {
		return nil, false
	}
	return o.DraftId, true
}

// HasDraftId returns a boolean if a field has been set.
func (o *DraftProperties) HasDraftId() bool {
	if o != nil && !IsNil(o.DraftId) {
		return true
	}

	return false
}

// SetDraftId gets a reference to the given int32 and assigns it to the DraftId field.
func (o *DraftProperties) SetDraftId(v int32) {
	o.DraftId = &v
}

func (o DraftProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DraftProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DraftId) {
		toSerialize["draftId"] = o.DraftId
	}
	return toSerialize, nil
}

type NullableDraftProperties struct {
	value *DraftProperties
	isSet bool
}

func (v NullableDraftProperties) Get() *DraftProperties {
	return v.value
}

func (v *NullableDraftProperties) Set(val *DraftProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableDraftProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableDraftProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDraftProperties(val *DraftProperties) *NullableDraftProperties {
	return &NullableDraftProperties{value: val, isSet: true}
}

func (v NullableDraftProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDraftProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


