/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the ListAnswerBoardsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAnswerBoardsRequest{}

// ListAnswerBoardsRequest struct for ListAnswerBoardsRequest
type ListAnswerBoardsRequest struct {
	// Whether to include the audience filters with the listed Answer Boards.
	WithAudience *bool `json:"withAudience,omitempty"`
	// Whether to include the editor roles with the listed Answer Boards.
	WithRoles *bool `json:"withRoles,omitempty"`
}

// NewListAnswerBoardsRequest instantiates a new ListAnswerBoardsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAnswerBoardsRequest() *ListAnswerBoardsRequest {
	this := ListAnswerBoardsRequest{}
	return &this
}

// NewListAnswerBoardsRequestWithDefaults instantiates a new ListAnswerBoardsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAnswerBoardsRequestWithDefaults() *ListAnswerBoardsRequest {
	this := ListAnswerBoardsRequest{}
	return &this
}

// GetWithAudience returns the WithAudience field value if set, zero value otherwise.
func (o *ListAnswerBoardsRequest) GetWithAudience() bool {
	if o == nil || IsNil(o.WithAudience) {
		var ret bool
		return ret
	}
	return *o.WithAudience
}

// GetWithAudienceOk returns a tuple with the WithAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAnswerBoardsRequest) GetWithAudienceOk() (*bool, bool) {
	if o == nil || IsNil(o.WithAudience) {
		return nil, false
	}
	return o.WithAudience, true
}

// HasWithAudience returns a boolean if a field has been set.
func (o *ListAnswerBoardsRequest) HasWithAudience() bool {
	if o != nil && !IsNil(o.WithAudience) {
		return true
	}

	return false
}

// SetWithAudience gets a reference to the given bool and assigns it to the WithAudience field.
func (o *ListAnswerBoardsRequest) SetWithAudience(v bool) {
	o.WithAudience = &v
}

// GetWithRoles returns the WithRoles field value if set, zero value otherwise.
func (o *ListAnswerBoardsRequest) GetWithRoles() bool {
	if o == nil || IsNil(o.WithRoles) {
		var ret bool
		return ret
	}
	return *o.WithRoles
}

// GetWithRolesOk returns a tuple with the WithRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAnswerBoardsRequest) GetWithRolesOk() (*bool, bool) {
	if o == nil || IsNil(o.WithRoles) {
		return nil, false
	}
	return o.WithRoles, true
}

// HasWithRoles returns a boolean if a field has been set.
func (o *ListAnswerBoardsRequest) HasWithRoles() bool {
	if o != nil && !IsNil(o.WithRoles) {
		return true
	}

	return false
}

// SetWithRoles gets a reference to the given bool and assigns it to the WithRoles field.
func (o *ListAnswerBoardsRequest) SetWithRoles(v bool) {
	o.WithRoles = &v
}

func (o ListAnswerBoardsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAnswerBoardsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WithAudience) {
		toSerialize["withAudience"] = o.WithAudience
	}
	if !IsNil(o.WithRoles) {
		toSerialize["withRoles"] = o.WithRoles
	}
	return toSerialize, nil
}

type NullableListAnswerBoardsRequest struct {
	value *ListAnswerBoardsRequest
	isSet bool
}

func (v NullableListAnswerBoardsRequest) Get() *ListAnswerBoardsRequest {
	return v.value
}

func (v *NullableListAnswerBoardsRequest) Set(val *ListAnswerBoardsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListAnswerBoardsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListAnswerBoardsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAnswerBoardsRequest(val *ListAnswerBoardsRequest) *NullableListAnswerBoardsRequest {
	return &NullableListAnswerBoardsRequest{value: val, isSet: true}
}

func (v NullableListAnswerBoardsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAnswerBoardsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


