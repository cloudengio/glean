openapi: 3.0.0
info:
  contact:
    email: support@glean.com
  description: |
    # Introduction
    These are the public APIs to enable implementing a custom client interface to the Glean system.

    # Usage guidelines
    This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along
    with a 6-month sunset period for anything that requires developers to adopt the new versions.
  title: Glean Client API
  version: 0.9.0
servers:
- url: "https://{domain}-be.glean.com/rest/api/v1"
  variables:
    domain:
      default: domain
      description: Email domain (without extension) that determines the deployment
        backend.
security:
- BearerAuth: []
paths:
  /search:
    post:
      description: Retrieves results for the query
      operationId: search
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Search request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Invalid Query
      summary: Search the index
      tags:
      - Search
      x-codegen-request-body-name: payload
  /autocomplete:
    post:
      description: "Retrieves query suggestions, operators and documents for the given\
        \ partially typed query."
      operationId: autocomplete
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutocompleteRequest'
        description: Autocomplete request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutocompleteResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Autocomplete a query
      tags:
      - Search
      x-codegen-request-body-name: payload
  /createannouncement:
    post:
      description: Creates a textual announcement visible to some set of users based
        on department and location.
      operationId: createannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnnouncementRequest'
        description: Announcement content
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /createanswer:
    post:
      description: Creates a user-generated answer that contains a question and answer.
      operationId: createanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnswerRequest'
        description: CreateAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /createauthtoken:
    post:
      description: Creates an authentication token for the authenticated user
      operationId: createauthtoken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthTokenResponse'
          description: OK
        "400":
          description: Invalid Request
        "401":
          description: Not Authorized
      summary: Creates an authentication token for authenticated user
      tags:
      - Authentication
  /deleteannouncement:
    post:
      description: Deletes an existing user-generated announcement.
      operationId: deleteannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnnouncementRequest'
        description: Delete announcement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /deleteanswer:
    post:
      description: Deletes an existing user-generated answer.
      operationId: deleteanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnswerRequest'
        description: DeleteAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /editanswer:
    post:
      description: Edits an existing user-generated answer.
      operationId: editanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswerRequest'
        description: EditAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /listanswers:
    post:
      description: Lists answers created by the authed user.
      operationId: listanswers
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnswersRequest'
        description: ListAnswers request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnswersResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List answers created by the authed user
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /createcollection:
    post:
      description: Creates a publicly visible (empty) collection of documents.
      operationId: createcollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
        description: Collection content plus any additional metadata for the request.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCollectionResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionError'
          description: Semantic error
      summary: Create a collection
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /listcollections:
    post:
      description: Lists all existing collections
      operationId: listcollections
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCollectionsRequest'
        description: ListCollections request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List collections
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /verify:
    post:
      description: Verify documents to keep the knowledge up to date within customer
        corpus.
      operationId: verify
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
        description: Details about the verification request.
        required: true
        x-exportParamName: VerifyRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: "Document does not exist, does not support verification or\
            \ user cannot access document"
      summary: Update verification
      tags:
      - Verification
      x-codegen-request-body-name: payload
  /addverificationreminder:
    post:
      description: Creates a verification reminder for the document. Users can create
        verification reminders from different product surfaces.
      operationId: addverificationreminder
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReminderRequest'
        description: Details about the reminder.
        required: true
        x-exportParamName: ReminderRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: "Document does not exist, does not support verification or\
            \ user cannot access document"
      summary: Create verification reminder
      tags:
      - Verification
      x-codegen-request-body-name: payload
  /listverifications:
    post:
      description: Returns the information to be rendered in verification dashboard.
        Includes information for each document owned by user regarding their verifications.
      operationId: listverifications
      parameters:
      - description: Maximum number of documents to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationFeed'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List verifications
      tags:
      - Verification
      x-codegen-request-body-name: payload
  /createshortcut:
    post:
      description: Creates a user-generated shortcut that contains a alias and destination
        url.
      operationId: createshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShortcutRequest'
        description: CreateShortcut request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShortcutResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create shortcut
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /activity:
    post:
      description: "Reporting for any events that happen outside of the client UI,\
        \ such as enterprise app usage."
      operationId: activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
        x-exportParamName: Activity
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Report activity of enterprise app usage
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /feedback:
    post:
      description: "Reporting for events that happen within the client UI, such as\
        \ result views and clicks."
      operationId: feedback
      parameters:
      - description: A URL encoded versions of Feedback. This is useful for requests.
        explode: true
        in: query
        name: feedback
        required: false
        schema:
          type: string
        style: form
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
        x-exportParamName: Feedback
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Report user events such as clicks or views
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /people:
    post:
      description: Retrieves people details for given ids
      operationId: people
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleRequest'
        description: People request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read people details
      tags:
      - Search
      x-codegen-request-body-name: payload
  /pin:
    post:
      description: Pin a document as a result for a given search query.Pin results
        that are known to be a good match.
      operationId: pin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
        description: Details about the document and query for the pin.
        required: true
        x-exportParamName: PinDocument
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinDocument'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /unpin:
    post:
      description: Unpin a previously pinned result.
      operationId: unpin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unpin'
        description: Details about the pin being unpinned.
        required: true
        x-exportParamName: Unpin
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from unpinning someone else's pin
      summary: Delete pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /updateannouncement:
    post:
      description: Updates a textual announcement visible to some set of users based
        on department and location.
      operationId: updateannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnnouncementRequest'
        description: Announcement content. Id need to be specified for the announcement.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /getpin:
    post:
      description: Gets a pin given its ID.
      operationId: getpin
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPinRequest'
        description: Get pin request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPinResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read pin details.
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /listpins:
    post:
      description: Lists all pins.
      operationId: listpins
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: List pins request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List all pins.
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /editpin:
    post:
      description: Edit an existing user-generated pin.
      operationId: editpin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPinRequest'
        description: Edit pins request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinDocument'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit a pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /listentities:
    post:
      description: "Retrieves some set of details for all entities that fit the given\
        \ criteria and return in the requested order. Does not support negation in\
        \ filters, assumes relation type EQUALS."
      operationId: listentities
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntitiesRequest'
        description: List people request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List entities
      tags:
      - Search
      x-codegen-request-body-name: payload
components:
  parameters:
    actas:
      description: Email of another user to act as for debugging purposes. Requires
        sufficient permissions.
      explode: true
      in: query
      name: actas
      required: false
      schema:
        type: string
      style: form
    clientVersion:
      description: The version of the client making the request.
      explode: true
      in: query
      name: clientVersion
      required: false
      schema:
        type: string
      style: form
    domain:
      description: "The domain of the top-level page in which the client is being\
        \ run. For embedded search and NSR, it will be the domain of the embedding\
        \ page. For sidebar, it will be the domain of the embedding page if it's a\
        \ recognized workplace app. For NTP and app.glean.com requests, it will be\
        \ empty."
      explode: true
      in: query
      name: domain
      required: false
      schema:
        type: string
      style: form
    eids:
      description: List of experiment ids to force for incoming request.
      explode: false
      in: query
      name: eids
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
      style: simple
  schemas:
    SessionInfo:
      properties:
        sessionTrackingToken:
          description: A unique token for this session. A new session (and token)
            is created when the user issues a request from a new tab or when our server
            hasn't seen activity for more than 10 minutes from a tab.
          type: string
        tabId:
          description: "A unique id for all requests a user makes from a given tab,\
            \ no matter how far apart. A new tab id is only generated when a user\
            \ issues a request from a new tab."
          type: string
        lastSeen:
          description: The last time the server saw this token.
          format: date-time
          type: string
        lastQuery:
          description: The last query seen by the server.
          type: string
    SearchRequestSourceInfo:
      properties:
        initiator:
          description: "The means by which the search request was initiated. EVAL\
            \ - Internal usage for automated evaluation FACETS - A background request\
            \ to get bucket counts for facets following a user search request MORE\
            \ - The infinite scroll requested more results for an existing search\
            \ ONBOARDING - A demo query was issued as part of the onboarding flow\
            \ ONBOARDING_CHECKLIST - The user performed a search from the search step\
            \ of the new user onboarding checklist PAGE_LOAD - A SERP was visited\
            \ without going through regular product UI, e.g. from a bookmark, page\
            \ refresh, or hitting the browser back button DISCARDED_PAGE_LOAD - as\
            \ PAGE_LOAD but the page was previously discarded by the browser PREFETCH\
            \ - Results for a non-active tab were requested, e.g. gmail USER - The\
            \ user initiated a search by manually typing a query, clicking a suggestion,\
            \ etc. RECOMMENDATION - A query intent is detected from the user's activity\
            \ and a search request is issued proactively AUTOMATION - Initiated from\
            \ an API used for automation by an external developer or integration."
          enum:
          - EVAL
          - FACETS
          - MORE
          - ONBOARDING
          - ONBOARDING_CHECKLIST
          - PAGE_LOAD
          - DISCARDED_PAGE_LOAD
          - PREFETCH
          - USER
          - RECOMMENDATION
          - AUTOMATION
          type: string
        modality:
          description: "The UI paradigm from which the search request was sent. FULLPAGE\
            \ - The standard web app (including mobile) OVERLAY - An iframe that's\
            \ not Embedded Search / NSR (No such frame type as of now) OMNIBOX - The\
            \ browser omnibox CONTEXT_MENU - The browser right-click context menu\
            \ (powered by the browser extension) EMBEDDED_SEARCH - The embedded search\
            \ added as an iframe NSR - Native search replacement provided by extension\
            \ injected iframe SIDEBAR - The extension sidebar GLEANBOT - Gleanbot\
            \ in Slack, MS Teams, Discord, etc."
          enum:
          - FULLPAGE
          - OVERLAY
          - OMNIBOX
          - CONTEXT_MENU
          - EMBEDDED_SEARCH
          - NSR
          - SIDEBAR
          - GLEANBOT
          type: string
        domain:
          description: The domain from/on behalf of which the request is being issued.
            Currently only being used for tracking / logging purposes.
          type: string
        platform:
          description: Platform from which the search request was sent. Optional field.
          enum:
          - SLACK
          - DISCORD
          - MS_TEAMS
          type: string
        uiElement:
          description: "The (optional) UI element within the paradigm from which the\
            \ search request was sent. Each modality will have a dedicated uiElement\
            \ enum (e.g., SearchRequestGleanbotUIElementEnum)"
          type: string
        isDebug:
          description: "Whether the query is for debugging purposes and, as such,\
            \ should not be included in usage metrics and quality pipelines."
          type: boolean
        clientVersion:
          description: An opaque version identifier for the client. This is meant
            to be used for logging and debugging purposes only.
          type: string
      required:
      - modality
    ConnectorType:
      description: "The source from which document content was pulled, e.g. an API\
        \ crawl or browser history"
      enum:
      - API_CRAWL
      - BROWSER_CRAWL
      - BROWSER_HISTORY
      - BUILTIN
      - FEDERATED_SEARCH
      - PUSH_API
      - WEB_CRAWL
      - NATIVE_HISTORY
      type: string
    DocumentContent:
      example:
        fullTextList:
        - fullTextList
        - fullTextList
      properties:
        fullTextList:
          description: The plaintext content of the document.
          items:
            type: string
          type: array
    Document:
      example:
        connectorType: null
        metadata:
          container: container
          parentId: JIRA_EN-1337
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: Feature Request
          components:
          - Backend
          - Networking
          status:
          - Done
          customData:
            someCustomField: someCustomValue
        containerDocument: null
        datasource: datasource
        docType: docType
        id: id
        title: title
        content:
          fullTextList:
          - fullTextList
          - fullTextList
        parentDocument: null
        url: url
        sections:
        - title: title
          url: url
        - title: title
          url: url
      properties:
        id:
          description: The document id.
          type: string
        datasource:
          description: The app or other repository type from which the document was
            extracted
          type: string
        connectorType:
          $ref: '#/components/schemas/ConnectorType'
        docType:
          description: "The datasource-specific type of the document (e.g. for Jira\
            \ issues, this is the issue type such as Bug or Feature Request)."
          type: string
        content:
          $ref: '#/components/schemas/DocumentContent'
        containerDocument:
          $ref: '#/components/schemas/Document'
        parentDocument:
          $ref: '#/components/schemas/Document'
        title:
          description: The title of the document.
          type: string
        url:
          description: A permalink for the document.
          type: string
        metadata:
          $ref: '#/components/schemas/DocumentMetadata'
        sections:
          description: "A list of content sub-sections in the document, e.g. text\
            \ blocks with different headings in a Drive doc or Confluence page."
          items:
            $ref: '#/components/schemas/DocumentSection'
          type: array
    SearchDebugOptions:
      properties:
        forceParseQuery:
          description: "Debug only. When present, uses this parsed query JSON string\
            \ instead of the query in the request. Requires elevated permission."
          type: string
    FacetFilterValue:
      properties:
        value:
          example: Spreadsheet
          type: string
        relationType:
          enum:
          - EQUALS
          - LT
          - GT
          example: EQUALS
          type: string
        isNegated:
          example: false
          type: boolean
    FacetFilter:
      example:
        fieldName: doc_type
        values:
        - value: Spreadsheet
          relationType: EQUALS
          isNegated: false
        - value: Presentation
          relationType: EQUALS
          isNegated: false
      properties:
        fieldName:
          example: owner
          type: string
        values:
          description: "Within a single FacetFilter, the values are to be treated\
            \ like an OR. For example, fieldName doc_type with values [EQUALS Presentation,\
            \ EQUALS Spreadsheet] means we want to show a document if it's a Presentation\
            \ OR a Spreadsheet."
          items:
            $ref: '#/components/schemas/FacetFilterValue'
          type: array
        groupName:
          description: "Indicates the value of a facet, if any, that the given facet\
            \ is grouped under. This is only used for nested facets, for example,\
            \ fieldName could be owner and groupName would be Spreadsheet if showing\
            \ all owners for spreadsheets as a nested facet."
          example: Spreadsheet
          type: string
    FacetBucketFilter:
      properties:
        facet:
          description: The facet whose buckets should be filtered.
          type: string
        prefix:
          description: The per-term prefix that facet buckets should be filtered on.
          type: string
    AuthToken:
      example:
        accessToken: 123abc
        datasource: gmail
        scope: email profile https://www.googleapis.com/auth/gmail.readonly
        tokenType: Bearer
        authUser: "1"
      properties:
        accessToken:
          type: string
        datasource:
          type: string
        scope:
          type: string
        tokenType:
          type: string
        authUser:
          description: Used by Google to indicate the index of the logged in user.
            Useful for generating hyperlinks that support multilogin.
          type: string
        expiration:
          description: Unix timestamp when this token expires (in seconds since epoch
            UTC).
          format: int64
          type: integer
      required:
      - accessToken
      - datasource
    SearchRequestOptions:
      example:
        debugOptions:
          enableDebugging: true
        datasourceFilter: JIRA
        datasourcesFilter:
        - JIRA
        queryOverridesFacetFilters: true
        facetFilters:
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
      properties:
        debugOptions:
          $ref: '#/components/schemas/SearchDebugOptions'
        datasourceFilter:
          description: "Filter results to a single datasource name (e.g. gmail, slack).\
            \ All results are returned if missing."
          type: string
        datasourcesFilter:
          description: "Filter results to one or more datasources (e.g. gmail, slack).\
            \ All results are returned if missing."
          items:
            type: string
          type: array
        queryOverridesFacetFilters:
          description: "If true, the operators in the query are taken to override\
            \ any operators in facetFilters in the case of conflict. This is used\
            \ to correctly set rewrittenFacetFilters and rewrittenQuery."
          type: boolean
        facetFilters:
          description: "A list of filters for the query. An AND is assumed between\
            \ different facetFilters. For example, owner Sumeet and doc_type Spreadsheet\
            \ shows documents that are by Sumeet AND are Spreadsheets."
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        facetBucketFilter:
          $ref: '#/components/schemas/FacetBucketFilter'
        facetBucketSize:
          description: The maximum number of FacetBuckets to return in each FacetResult.
          type: integer
        authTokens:
          description: "Auth tokens which may be used for non-indexed, federated results\
            \ (e.g. Gmail)."
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
        fetchAllDatasourceCounts:
          description: "Hints that the QE should return result counts (via the datasource\
            \ facet result) for all supported datasources, rather than just those\
            \ specified in the datasource[s]Filter"
          type: boolean
        responseHints:
          description: Array of hints containing what QE should return back to FE.
          items:
            enum:
            - RESULTS
            - QUERY_METADATA
            type: string
          type: array
        timezoneOffset:
          description: The offset of the client's timezone in minutes from UTC. e.g.
            PDT is -420 because it's 7 hours behind UTC.
          type: integer
        forceNegation:
          description: "Whether or not to force not ignoring of negation, i.e. force\
            \ negated terms to be negated."
          type: boolean
        disableSpellcheck:
          description: Whether or not to disable spellcheck.
          type: boolean
        disableQueryAutocorrect:
          description: Disables automatic adjustment of the input query for spelling
            corrections or other reasons.
          type: boolean
        expandedSnippetSize:
          description: The number of characters to include in the expanded snippet.
          type: integer
      required:
      - facetBucketSize
    TextRange:
      description: A subsection of a given string to which some special formatting
        should be applied.
      properties:
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        type:
          enum:
          - BOLD
          - CITATION
          - LINK
          type: string
        document:
          $ref: '#/components/schemas/Document'
      required:
      - startIndex
    QuerySuggestion:
      example:
        query: app:github type:pull author:mortimer
        label: Mortimer's PRs
        datasource: github
      properties:
        missingTerm:
          description: A query term missing from the original query on which this
            suggestion is based
          type: string
        query:
          description: The query being suggested (e.g. enforcing the missing term
            from the original query)
          type: string
        label:
          description: A user-facing description to display for the suggestion
          type: string
        datasource:
          description: The datasource associated with the suggestion
          type: string
        requestOptions:
          $ref: '#/components/schemas/SearchRequestOptions'
        ranges:
          description: The bolded ranges within the query of the QuerySuggestion.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - query
    SearchResultSnippet:
      example:
        snippet: snippet
        mimeType: mimeType
      properties:
        snippet:
          description: A matching snippet from the document. Query term matches are
            marked by the unicode characters uE006 and uE007.
          type: string
        mimeType:
          description: "The mime type of the snippets, currently either text/plain\
            \ or text/html."
          type: string
        text:
          description: A matching snippet from the document with no highlights.
          type: string
        snippetTextOrdering:
          description: Used for sorting based off the snippet's location within all_snippetable_text
          type: integer
        ranges:
          description: The bolded ranges within text.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - snippet
    RelatedDocuments:
      example:
        associatedEntityId: associatedEntityId
        documents:
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        results:
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
        querySuggestion:
          query: app:github type:pull author:mortimer
          label: Mortimer's PRs
          datasource: github
        relation: CASE
      properties:
        relation:
          description: How this document relates to the including entity.
          enum:
          - CASE
          - CONTACT
          - CONVERSATION_MESSAGES
          - FROM
          - OPPORTUNITY
          - RECENT
          - SOURCE
          - TICKET
          - WITH
          - EXPERT
          type: string
        associatedEntityId:
          description: Which entity in the response that this entity relates to. Relevant
            when there are multiple entities associated with the response (such as
            merged customers)
          type: string
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        documents:
          deprecated: true
          description: A truncated list of documents with this relation. TO BE DEPRECATED.
          items:
            $ref: '#/components/schemas/Document'
          type: array
        results:
          description: A truncated list of documents associated with this relation.
            To be used in favor of `documents` because it contains a trackingToken.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
    SearchResult:
      example:
        snippets:
        - snippet: snippet
          mimeType: mimeType
        metadata:
          container: container
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: objectType
        debugInfo:
          formattedDebugInfo: formattedDebugInfo
        title: title
        url: https://example.com/foo/bar
        nativeAppUrl: slack://foo/bar
        mustIncludeSuggestions:
        - missingTerm: container
          query: container
      properties:
        document:
          $ref: '#/components/schemas/Document'
        title:
          type: string
        url:
          type: string
        nativeAppUrl:
          description: "A deep link, if available, into the datasource's native application\
            \ for the user's platform (e.g. slack://...)."
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        snippets:
          items:
            $ref: '#/components/schemas/SearchResultSnippet'
          type: array
        expandedSnippets:
          description: The expanded snippets for this result. This is only populated
            if the query has the expand_snippets parameter set to true.
          items:
            type: string
          type: array
        fullText:
          description: The full body text of the result if not already contained in
            the snippets
          type: string
        fullTextList:
          description: The full body text of the result if not already contained in
            the snippets; each item in the array represents a separate line in the
            original text
          items:
            type: string
          type: array
        relatedResults:
          description: A list of results related to this search result. Eg. for conversation
            results it contains individual messages from the conversation document
            which will be shown on SERP.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        clusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        allClusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/ClusterGroup'
          type: array
        attachmentCount:
          description: The total number of attachments.
          type: integer
        attachments:
          description: A (potentially partial) list of results representing documents
            attached to the main result document.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        backlinkResults:
          description: A list of results that should be displayed as backlinks of
            this result in reverse chronological order.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        clusterType:
          $ref: '#/components/schemas/ClusterTypeEnum'
        mustIncludeSuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        debugInfo:
          $ref: '#/components/schemas/SearchResultDebugInfo'
        structuredResults:
          description: "When present, this list of `StructuredResult`s will supercede\
            \ a `Document` in this `SearchResult`."
          items:
            $ref: '#/components/schemas/StructuredResult'
          type: array
        prominence:
          $ref: '#/components/schemas/SearchResultProminenceEnum'
        attachmentContext:
          description: Additional context for the relationship between the result
            and the document it's attached to.
          type: string
        pins:
          description: A list of pins associated with this search result.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
      required:
      - snippets
      - url
    ClusterTypeEnum:
      description: The reason for inclusion of clusteredResults.
      enum:
      - SIMILAR
      - FRESHNESS
      - TITLE
      - CONTENT
      - NONE
      - THREAD_REPLY
      - THREAD_ROOT
      type: string
    ClusterGroup:
      properties:
        clusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        clusterType:
          $ref: '#/components/schemas/ClusterTypeEnum'
        visibleCountHint:
          description: The default number of results to display before truncating
            and showing a "see more" link
          type: integer
      required:
      - visibleCountHint
    Person:
      example:
        name: George Clooney
        obfuscatedId: abc123
      properties:
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for
            a Person.
          type: string
        relatedDocuments:
          description: A list of documents related to this person.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        metadata:
          $ref: '#/components/schemas/PersonMetadata'
      required:
      - name
      - obfuscatedId
    QuerySuggestionList:
      properties:
        suggestions:
          items:
            $ref: '#/components/schemas/QuerySuggestion'
          type: array
        person:
          $ref: '#/components/schemas/Person'
      required:
      - suggestions
    SearchResultDebugInfo:
      properties:
        finalScore:
          format: double
          type: number
        scholasticScore:
          format: double
          type: number
        scholasticContent:
          type: string
        scholasticRetrievalOnly:
          type: boolean
        explanation:
          type: string
        snippetScore:
          format: double
          type: number
        position:
          format: int64
          type: integer
        evalDocumentDescriptorEncoded:
          description: "Information about boundaries / endpoints of documents, e.g.,\
            \ messages in a conversation - only used for evals and always scrubbed\
            \ + without PII."
          type: string
        id_hash:
          description: The document id hash.
          type: string
    Company:
      properties:
        name:
          description: User-friendly display name.
          type: string
        profileUrl:
          description: Link to internal company company profile.
          type: string
        websiteUrls:
          description: Link to company's associated websites.
          items:
            type: string
          type: array
        logoUrl:
          description: "The URL of the company's logo. Public, glean-authenticated\
            \ and Base64 encoded data URLs are all valid (but not third-party-authenticated\
            \ URLs)."
          type: string
        location:
          description: User facing string representing the company's location.
          example: New York City
          type: string
        phone:
          description: Phone number as a number string.
          type: string
        fax:
          description: Fax number as a number string.
          type: string
        industry:
          description: User facing string representing the company's industry.
          example: Finances
          type: string
        annualRevenue:
          description: Average company's annual revenue for reference.
          format: double
          type: number
        numberOfEmployees:
          description: Average company's number of employees for reference.
          format: int64
          type: integer
        stockSymbol:
          description: Company's stock symbol if company is public.
          type: string
        foundedDate:
          description: The date when the company was founded.
          format: date
          type: string
        about:
          description: User facing description of company.
          example: "Financial, software, data, and media company headquartered in\
            \ Midtown Manhattan, New York City"
          type: string
      required:
      - name
    DocumentCounts:
      additionalProperties:
        type: integer
      description: "A map of {string, int} pairs representing counts of each document\
        \ type associated with this customer."
      type: object
    CustomerMetadata:
      properties:
        datasourceId:
          description: The user visible id of the salesforce customer account.
          type: string
    Customer:
      properties:
        id:
          description: Unique identifier.
          type: string
        domains:
          description: Link to company's associated website domains.
          items:
            type: string
          type: array
        company:
          $ref: '#/components/schemas/Company'
        documentCounts:
          additionalProperties:
            type: integer
          description: "A map of {string, int} pairs representing counts of each document\
            \ type associated with this customer."
          type: object
        poc:
          description: A list of POC for company.
          items:
            $ref: '#/components/schemas/Person'
          type: array
        metadata:
          $ref: '#/components/schemas/CustomerMetadata'
        mergedCustomers:
          description: A list of Customers.
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        startDate:
          description: The date when the interaction with customer started.
          format: date
          type: string
        contractAnnualRevenue:
          description: Average contract annual revenue with that customer.
          format: double
          type: number
        notes:
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
          type: string
      required:
      - company
      - id
    RelatedObject:
      properties:
        id:
          description: The ID of the related object
          type: string
        metadata:
          $ref: '#/components/schemas/RelatedObject_metadata'
      required:
      - id
    RelatedObjectEdge:
      properties:
        objects:
          items:
            $ref: '#/components/schemas/RelatedObject'
          type: array
    RelatedObjects:
      properties:
        relatedObjects:
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
          description: A list of objects related to a source object.
          type: object
    PersonToTeamRelationship:
      description: Metadata about the relationship of a person to a team.
      properties:
        person:
          $ref: '#/components/schemas/Person'
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to
            MEMBER if not set.
          enum:
          - MEMBER
          - MANAGER
          - LEAD
          - POINT_OF_CONTACT
          - OTHER
          type: string
        customRelationshipStr:
          description: Displayed name for the relationship if relationship is set
            to `OTHER`.
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
      required:
      - person
      type: object
    TeamEmail:
      properties:
        email:
          description: An email address
          format: email
          type: string
        type:
          default: OTHER
          enum:
          - PRIMARY
          - SECONDARY
          - ONCALL
          - OTHER
          type: string
        isUserGenerated:
          description: true iff the email was manually added by a user from within
            Glean (aka not from the original data source)
          type: boolean
    DatasourceProfile:
      properties:
        datasource:
          description: The datasource the profile is of.
          example: github
          type: string
        handle:
          description: The display name of the person in the given datasource.
          type: string
        url:
          description: URL to view the user's profile.
          type: string
        nativeAppUrl:
          description: "A deep link, if available, into the datasource's native application\
            \ for the user's platform (i.e. slack://...)."
          type: string
        isUserGenerated:
          description: For internal use only. True iff the data source profile was
            manually added by a user from within Glean (aka not from the original
            data source)
          type: boolean
      required:
      - datasource
      - handle
    Team:
      allOf:
      - $ref: '#/components/schemas/RelatedObjects'
      - $ref: '#/components/schemas/Team_allOf'
    ScopeType:
      description: "Describes the scope for a ReadPermission, WritePermission, or\
        \ GrantPermission object"
      enum:
      - GLOBAL
      - OWN
      type: string
    WritePermission:
      description: Describes the write permissions levels that a user has for a specific
        feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        create:
          description: True if user has create permission for this feature and scope
          type: boolean
        update:
          description: True if user has update permission for this feature and scope
          type: boolean
        delete:
          description: True if user has delete permission for this feature and scope
          type: boolean
    ObjectPermissions:
      properties:
        write:
          $ref: '#/components/schemas/WritePermission'
    PermissionedObject:
      properties:
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          description: list of strings for multi-value properties
          items:
            type: string
          type: array
        numberValue:
          type: number
    CustomData:
      additionalProperties:
        $ref: '#/components/schemas/CustomDataValue'
      description: Custom fields specific to individual datasources
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          additionalProperties:
            $ref: '#/components/schemas/CustomDataValue'
          description: Custom fields specific to individual datasources
          type: object
    DocumentSpec:
      oneOf:
      - $ref: '#/components/schemas/DocumentSpec_oneOf'
      - $ref: '#/components/schemas/DocumentSpec_oneOf_1'
      - $ref: '#/components/schemas/DocumentSpec_oneOf_2'
    GroupType:
      description: The type of user group
      enum:
      - DEPARTMENT
      - ALL
      - TEAM
      - JOB_TITLE
      - ROLE_TYPE
      - LOCATION
      - REGION
      - EXTERNAL_GROUP
      type: string
    Group:
      example:
        name: name
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/GroupType'
        id:
          description: A unique identifier for the group. May be the same as name.
          type: string
        name:
          description: Name of the group.
          type: string
      required:
      - id
      - type
    UserRole:
      description: A user's role with respect to a specific document.
      enum:
      - OWNER
      - VIEWER
      - ANSWER_MODERATOR
      - EDITOR
      - VERIFIER
      type: string
    UserRoleSpecification:
      example:
        sourceDocumentSpec: null
        role: null
        person:
          name: George Clooney
          obfuscatedId: abc123
        group:
          name: name
          id: id
          type: null
      properties:
        sourceDocumentSpec:
          $ref: '#/components/schemas/DocumentSpec'
        person:
          $ref: '#/components/schemas/Person'
        group:
          $ref: '#/components/schemas/Group'
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - role
    CustomEntity:
      allOf:
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/CustomEntity_allOf'
    AnswerId:
      properties:
        id:
          description: The opaque id of the answer.
          example: 3
          type: integer
    AnswerDocId:
      properties:
        docId:
          description: "Internal document id of the answer. We support using the document\
            \ id for cases where the client doesn't have the integer id available.\
            \ If both are available, using the integer id is preferred."
          example: ANSWERS_answer_3
          type: string
    AnswerMutableProperties:
      properties:
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          items:
            type: string
          type: array
        bodyText:
          description: The plain text answer to the question.
          example: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
            \ sky is blue because blue light is more strongly scattered than longer-wavelength\
            \ light."
          type: string
        boardId:
          description: "The parent board ID of this Answer, or 0 if it's a floating\
            \ Answer."
          type: integer
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are
            taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        roles:
          description: "A list of roles for this answer explicitly granted by an owner,\
            \ editor, or admin."
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        sourceDocumentSpec:
          $ref: '#/components/schemas/DocumentSpec'
    StructuredTextMutableProperties:
      properties:
        text:
          example: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
            \ sky is blue because blue light is more strongly scattered than longer-wavelength\
            \ light."
          type: string
      required:
      - text
    StructuredTextItem:
      properties:
        link:
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
          type: string
        document:
          $ref: '#/components/schemas/Document'
        text:
          example: "Because its wavelengths are shorter, blue light is more strongly\
            \ scattered than the longer-wavelength lights, red or green. Hence the\
            \ result that when looking at the sky away from the direct incident sunlight,\
            \ the human eye perceives the sky to be blue."
          type: string
    StructuredText:
      allOf:
      - $ref: '#/components/schemas/StructuredTextMutableProperties'
      - $ref: '#/components/schemas/StructuredText_allOf'
    AnswerLike:
      properties:
        user:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the user liked the answer in ISO format (ISO 8601).
          format: date-time
          type: string
    AnswerLikes:
      properties:
        likedBy:
          items:
            $ref: '#/components/schemas/AnswerLike'
          type: array
        likedByUser:
          description: Whether the user in context liked the answer.
          type: boolean
        numLikes:
          description: The total number of likes for the answer.
          type: integer
      required:
      - likedBy
      - likedByUser
      - numLikes
    Reminder:
      example:
        createdAt: 5
        reason: reason
        assignee:
          name: George Clooney
          obfuscatedId: abc123
        requestor:
          name: George Clooney
          obfuscatedId: abc123
        remindAt: 1
      properties:
        assignee:
          $ref: '#/components/schemas/Person'
        requestor:
          $ref: '#/components/schemas/Person'
        remindAt:
          description: Unix timestamp for when the reminder should trigger (in seconds
            since epoch UTC).
          type: integer
        createdAt:
          description: Unix timestamp for when the reminder was first created (in
            seconds since epoch UTC).
          type: integer
        reason:
          description: "An optional free-text reason for the reminder. This is particularly\
            \ useful when a reminder is used to ask for verification from another\
            \ user (for example, \"Duplicate\", \"Incomplete\", \"Incorrect\")."
          type: string
      required:
      - assignee
      - remindAt
    TimePoint:
      example:
        daysFromNow: 3
        epochSeconds: 9
      properties:
        epochSeconds:
          description: Epoch seconds. Has precedence over daysFromNow.
          type: integer
        daysFromNow:
          description: The number of days from now. Specification relative to current
            time. Can be negative.
          type: integer
    Period:
      example:
        minDaysFromNow: 2
        start:
          daysFromNow: 3
          epochSeconds: 9
        maxDaysFromNow: 7
        end:
          daysFromNow: 3
          epochSeconds: 9
      properties:
        minDaysFromNow:
          deprecated: true
          description: DEPRECATED - The number of days from now in the past to define
            upper boundary of time period.
          type: integer
        maxDaysFromNow:
          deprecated: true
          description: DEPRECATED - The number of days from now in the past to define
            lower boundary of time period.
          type: integer
        start:
          $ref: '#/components/schemas/TimePoint'
        end:
          $ref: '#/components/schemas/TimePoint'
    CountInfo:
      example:
        period:
          minDaysFromNow: 2
          start:
            daysFromNow: 3
            epochSeconds: 9
          maxDaysFromNow: 7
          end:
            daysFromNow: 3
            epochSeconds: 9
        org: org
        count: 5
      properties:
        count:
          description: The counter value
          type: integer
        period:
          $ref: '#/components/schemas/Period'
        org:
          description: "The unit of organization over which we did the count aggregation,\
            \ e.g. org (department) or company"
          type: string
      required:
      - count
    VerificationMetadata:
      example:
        reminders:
        - createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        - createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        lastReminder:
          createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        expirationTs: 6
        visitorCount:
        - period:
            minDaysFromNow: 2
            start:
              daysFromNow: 3
              epochSeconds: 9
            maxDaysFromNow: 7
            end:
              daysFromNow: 3
              epochSeconds: 9
          org: org
          count: 5
        - period:
            minDaysFromNow: 2
            start:
              daysFromNow: 3
              epochSeconds: 9
            maxDaysFromNow: 7
            end:
              daysFromNow: 3
              epochSeconds: 9
          org: org
          count: 5
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        lastVerifier:
          name: George Clooney
          obfuscatedId: abc123
        lastVerificationTs: 0
        candidateVerifiers:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
      properties:
        lastVerifier:
          $ref: '#/components/schemas/Person'
        lastVerificationTs:
          description: The unix timestamp of the verification (in seconds since epoch
            UTC).
          type: integer
        expirationTs:
          description: The unix timestamp of the verification expiration if applicable
            (in seconds since epoch UTC).
          type: integer
        document:
          $ref: '#/components/schemas/Document'
        reminders:
          description: Info about all outstanding verification reminders for the document
            if exists.
          items:
            $ref: '#/components/schemas/Reminder'
          type: array
        lastReminder:
          $ref: '#/components/schemas/Reminder'
        visitorCount:
          description: Number of visitors to the document during included time periods.
          items:
            $ref: '#/components/schemas/CountInfo'
          type: array
        candidateVerifiers:
          description: List of potential verifiers for the document e.g. old verifiers
            and/or users with view/edit permissions.
          items:
            $ref: '#/components/schemas/Person'
          type: array
      required:
      - documentId
    Verification:
      example:
        metadata:
          reminders:
          - createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          - createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          lastReminder:
            createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          expirationTs: 6
          visitorCount:
          - period:
              minDaysFromNow: 2
              start:
                daysFromNow: 3
                epochSeconds: 9
              maxDaysFromNow: 7
              end:
                daysFromNow: 3
                epochSeconds: 9
            org: org
            count: 5
          - period:
              minDaysFromNow: 2
              start:
                daysFromNow: 3
                epochSeconds: 9
              maxDaysFromNow: 7
              end:
                daysFromNow: 3
                epochSeconds: 9
            org: org
            count: 5
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          lastVerifier:
            name: George Clooney
            obfuscatedId: abc123
          lastVerificationTs: 0
          candidateVerifiers:
          - name: George Clooney
            obfuscatedId: abc123
          - name: George Clooney
            obfuscatedId: abc123
        state: UNVERIFIED
      properties:
        state:
          description: The verification state for the document.
          enum:
          - UNVERIFIED
          - VERIFIED
          - DEPRECATED
          type: string
        metadata:
          $ref: '#/components/schemas/VerificationMetadata'
      required:
      - state
    CollectionBaseMutableProperties:
      properties:
        name:
          description: The unique name of the Collection.
          type: string
        description:
          description: A brief summary of the Collection's contents.
          type: string
        addedRoles:
          description: A list of added user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of removed user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        audienceFilters:
          description: Filters which restrict who should see this collection. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
      required:
      - name
    AnswerBoardMutableProperties:
      allOf:
      - $ref: '#/components/schemas/CollectionBaseMutableProperties'
    AnswerBoard:
      allOf:
      - $ref: '#/components/schemas/AnswerBoardMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/AnswerBoard_allOf'
    Thumbnail:
      properties:
        photoId:
          description: Photo id if the thumbnail is from splash.
          type: string
        url:
          description: Thumbnail url. This can be user provided image and/or from
            downloaded images hosted by glean.
          type: string
    CollectionMutableProperties:
      allOf:
      - $ref: '#/components/schemas/CollectionBaseMutableProperties'
      - $ref: '#/components/schemas/CollectionMutableProperties_allOf'
    CollectionItemMutableProperties:
      properties:
        name:
          description: The optional name of the collection item.
          type: string
        description:
          description: A helpful description of why this CollectionItem is in the
            Collection that it's in.
          type: string
        icon:
          description: The emoji icon for this CollectionItem. Only used for Text
            type items.
          type: string
    UserGeneratedContentId:
      properties:
        id:
          description: The opaque id of the user generated content.
          type: integer
    ShortcutMutableProperties:
      example:
        destinationDocumentId: destinationDocumentId
        unlisted: true
        urlTemplate: urlTemplate
        description: description
        inputAlias: inputAlias
        destinationUrl: destinationUrl
        addedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        removedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
      properties:
        inputAlias:
          description: link text following go/ prefix as entered by the user.
          type: string
        destinationUrl:
          description: destination URL for the shortcut.
          type: string
        destinationDocumentId:
          description: "document id for the url, if known."
          type: string
        description:
          description: "A short, plain text blurb to help people understand the intent\
            \ of the shortcut."
          type: string
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts
            are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: "For variable shortcuts, contains the url template; note, destinationUrl\
            \ contains default url"
          type: string
        addedRoles:
          description: A list of user roles added for the Shortcut.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
    ShortcutMetadata:
      properties:
        createdBy:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/Person'
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        destinationDocument:
          $ref: '#/components/schemas/Document'
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination
            URL. Full replacement for https://go/<inputAlias>.
          type: string
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used
            for showing shortcuts to users. Should end with "/". e.g. "go/" for native
            shortcuts.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        editUrl:
          description: The URL using which the user can access the edit page of the
            shortcut.
          type: string
    Shortcut:
      allOf:
      - $ref: '#/components/schemas/UserGeneratedContentId'
      - $ref: '#/components/schemas/ShortcutMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/ShortcutMetadata'
      - $ref: '#/components/schemas/Shortcut_allOf'
    Collection:
      allOf:
      - $ref: '#/components/schemas/CollectionMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Collection_allOf'
    CollectionItem:
      allOf:
      - $ref: '#/components/schemas/CollectionItemMutableProperties'
      - $ref: '#/components/schemas/CollectionItem_allOf'
    CollectionPinnableCategories:
      description: Categories a collection can be pinned to
      enum:
      - COMPANY_RESOURCE
      - DEPARTMENT_RESOURCE
      - TEAM_RESOURCE
      type: string
    CollectionPinnableTargets:
      description: What targets can a collection be pinned to
      enum:
      - RESOURCE_CARD
      - TEAM_PROFILE_PAGE
      type: string
    CollectionPinTarget:
      properties:
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
        value:
          description: "Optional. If category supports values, then the additional\
            \ value for the category e.g. department name for DEPARTMENT_RESOURCE,\
            \ team name/id for TEAM_RESOURCE and so on."
          type: string
        target:
          $ref: '#/components/schemas/CollectionPinnableTargets'
      required:
      - category
    CollectionPinMetadata:
      properties:
        id:
          description: The id of the collection.
          type: integer
        target:
          $ref: '#/components/schemas/CollectionPinTarget'
      required:
      - id
      - target
    CollectionPinnedMetadata:
      properties:
        existingPins:
          description: List of targets this collection is pinned to
          items:
            $ref: '#/components/schemas/CollectionPinTarget'
          type: array
        eligiblePins:
          description: "List of targets this collection can be pinned to, excluding\
            \ the targets this collection is already pinned to. We also include collection\
            \ id already is pinned to each eligible target, which will be 0 if the\
            \ target has no pinned collection."
          items:
            $ref: '#/components/schemas/CollectionPinMetadata'
          type: array
        pinnedCategories:
          deprecated: true
          description: DEPRECATED - List of categories this collection is pinned to.
            Use existingPins instead.
          items:
            $ref: '#/components/schemas/CollectionPinnableCategories'
          type: array
        eligibleCategoriesForPinning:
          additionalProperties:
            type: integer
          deprecated: true
          description: "DEPRECATED - A map of {category, collectionId to bump out}\
            \ pairs of eligible categories to pin. We exclude categories the collection\
            \ is already pinned to. CollectionId will be 0 if the the cateogry has\
            \ no pinned collection. Use eligiblePins instead."
          type: object
      required:
      - eligibleCategoriesForPinning
      - pinnedCategories
    Answer:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Answer_allOf'
    ExtractedQnA:
      properties:
        heading:
          description: Heading text that was matched to produce this result.
          type: string
        question:
          description: Question text that was matched to produce this result.
          type: string
        questionResult:
          $ref: '#/components/schemas/SearchResult'
    AppResult:
      properties:
        datasource:
          description: The app or other repository type this represents
          type: string
        docType:
          description: "The datasource-specific type of the document (e.g. for Jira\
            \ issues, this is the issue type such as Bug or Feature Request)."
          type: string
        mimeType:
          description: "Mimetype is used to differentiate between sub applications\
            \ from a datasource (e.g. Sheets, Docs from Gdrive)"
          type: string
        iconUrl:
          description: If there is available icon url.
          type: string
      required:
      - datasource
    CodeLine:
      properties:
        lineNumber:
          type: integer
        content:
          type: string
        ranges:
          description: Index ranges depicting matched sections of the line
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
    Code:
      example:
        repoName: scio
        fileName: README.md
        matches:
        - lineNumber: 1
          content: Welcome to the beginning
          ranges: []
        - lineNumber: 2
          content: Second line of the file
          ranges: []
        - lineNumber: 3
          content: hello world hello world
          ranges:
          - startindex: 0
            endIndex: 5
          - startIndex: 12
            endIndex: 17
      properties:
        repoName:
          type: string
        fileName:
          type: string
        fileUrl:
          type: string
        lines:
          items:
            $ref: '#/components/schemas/CodeLine'
          type: array
        isLastMatch:
          description: Last file match for a repo
          type: boolean
    StructuredResult:
      properties:
        snippets:
          items:
            $ref: '#/components/schemas/SearchResultSnippet'
          type: array
        person:
          $ref: '#/components/schemas/Person'
        customer:
          $ref: '#/components/schemas/Customer'
        team:
          $ref: '#/components/schemas/Team'
        customEntity:
          $ref: '#/components/schemas/CustomEntity'
        answer:
          $ref: '#/components/schemas/Answer'
        extractedQnA:
          $ref: '#/components/schemas/ExtractedQnA'
        app:
          $ref: '#/components/schemas/AppResult'
        collection:
          $ref: '#/components/schemas/Collection'
        answerBoard:
          $ref: '#/components/schemas/AnswerBoard'
        code:
          $ref: '#/components/schemas/Code'
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        querySuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        relatedDocuments:
          description: A list of documents related to this structured result.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        debugInfo:
          description: Debug details for this result if debug is enabled.
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        prominence:
          description: |
            The level of visual distinction that should be given to a result.
            HERO - A high-confidence result that should feature prominently on the page.
            PROMOTED - May not be the best result but should be given additional visual distinction.
            STANDARD - Should not be distinct from any other results.
            TODO: Deprecate and use prominence field only in SearchResult.
          enum:
          - HERO
          - PROMOTED
          - STANDARD
          type: string
        source:
          description: Source context for this result. Possible values depend on the
            result type.
          enum:
          - EXPERT_DETECTION
          type: string
    SearchResultProminenceEnum:
      description: |
        The level of visual distinction that should be given to a result.
        HERO - A high-confidence result that should feature prominently on the page.
        PROMOTED - May not be the best result but should be given additional visual distinction.
        STANDARD - Should not be distinct from any other results.
      enum:
      - HERO
      - PROMOTED
      - STANDARD
      type: string
    PinDocumentMutableProperties:
      properties:
        query:
          description: DEPRECATED - The query string to be set for the pin
          type: string
        queries:
          description: The query strings for which the pinned result will show.
          items:
            type: string
          type: array
        audienceFilters:
          description: Filters which restrict who should see the pinned document.
            Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
    PinDocument:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/PinDocument_allOf'
    PersonTeam:
      description: "Use `id` if you index teams via Glean, and use `name` and `externalLink`\
        \ if you want to use your own team pages"
      properties:
        id:
          description: Unique identifier
          type: string
        name:
          description: Team name
          type: string
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to
            MEMBER if not set.
          enum:
          - MEMBER
          - MANAGER
          - LEAD
          - POINT_OF_CONTACT
          - OTHER
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
    StructuredLocation:
      description: "Detailed location with information about country, state, city\
        \ etc."
      properties:
        deskLocation:
          description: Desk number.
          type: string
        timezone:
          description: "Location's timezone, e.g. UTC, PST."
          type: string
        address:
          description: Office address or name.
          type: string
        city:
          description: Name of the city.
          type: string
        state:
          description: State code.
          type: string
        region:
          description: "Region information, e.g. NORAM, APAC."
          type: string
        zipCode:
          description: ZIP Code for the address.
          type: string
        country:
          description: Country name.
          type: string
        countryCode:
          description: "Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA."
          type: string
      type: object
    SocialNetwork:
      properties:
        name:
          description: "Possible values are \"twitter\", \"linkedin\"."
          type: string
        profileName:
          description: Human-readable profile name.
          type: string
        profileUrl:
          description: Link to profile.
          type: string
      required:
      - name
      - profileUrl
    PersonDistance:
      properties:
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for
            a Person.
          type: string
        distance:
          description: "Distance to person, refer to PeopleDistance pipeline on interpretation\
            \ of the value."
          format: float
          type: number
      required:
      - distance
      - name
      - obfuscatedId
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        inviter:
          $ref: '#/components/schemas/Person'
        inviteTime:
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        signUpTime:
          description: The time this person signed up in ISO format (ISO 8601).
          format: date-time
          type: string
        reminderTime:
          description: The time this person was reminded in ISO format (ISO 8601)
            if a reminder was sent.
          format: date-time
          type: string
    ReadPermission:
      description: Describes the read permission level that a user has for a specific
        feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ReadPermissions:
      additionalProperties:
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/ReadPermission'
        type: array
      description: Describes the read permission levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    WritePermissions:
      additionalProperties:
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
        type: array
      description: Describes the write permissions levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific
        feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    GrantPermissions:
      additionalProperties:
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/GrantPermission'
        type: array
      description: Describes the grant permission levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    Permissions:
      description: "Describes the permissions levels that a user has for permissioned\
        \ features. When the client sends this, Permissions.read and Permissions.write\
        \ are the additional permissions granted to a user on top of what they have\
        \ via their roles. When the server sends this, Permissions.read and Permissions.write\
        \ are the complete (merged) set of permissions the user has, and Permissions.roles\
        \ is just for display purposes (along with Permisisons.isModified)"
      properties:
        canInsightsDashboard:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to the insights dashboard
          type: boolean
        canAdminSearch:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to /adminsearch
          type: boolean
        canAdminClientApiGlobalTokens:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user can administrate client API tokens with global scope
          type: boolean
        canDlp:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to data loss prevention (DLP) features
          type: boolean
        createUgcTags:
          description: TODO--deprecate in favor of the read and write properties.
            Define new UGC tags.
          type: boolean
        editDocumentTags:
          description: TODO--deprecate in favor of the read and write properties.
            Add and remove existing UGC tags on any document.
          type: boolean
        canCreateAnnoucements:
          description: TODO--deprecate in favor of the read and write properties.
            True is the user can create/update/delete announcements.
          type: boolean
        canAccessGeneratedQna:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to the Generated Qna feature on SERP
          type: boolean
        read:
          additionalProperties:
            description: List of read permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/ReadPermission'
            type: array
          description: Describes the read permission levels that a user has for permissioned
            features. Key must be PermissionedFeatureOrObject
          type: object
        write:
          additionalProperties:
            description: List of write permissions (for different scopes but same
              feature)
            items:
              $ref: '#/components/schemas/WritePermission'
            type: array
          description: Describes the write permissions levels that a user has for
            permissioned features. Key must be PermissionedFeatureOrObject
          type: object
        grant:
          additionalProperties:
            description: List of grant permissions (for different scopes but same
              feature)
            items:
              $ref: '#/components/schemas/GrantPermission'
            type: array
          description: Describes the grant permission levels that a user has for permissioned
            features. Key must be PermissionedFeatureOrObject
          type: object
        role:
          deprecated: true
          description: DEPRECATED - The role for the user
          type: string
        roles:
          description: The roles a user has.
          items:
            type: string
          type: array
        isModified:
          description: True if this user was given additional permissions beyond what
            they're granted via their permission role
          type: boolean
      required:
      - canAdminClientAPIGlobalTokens
      - canAdminSearch
      - canCreateAnnoucements
      - canInsightsDashboard
      - createUgcTags
      - editDocumentTags
    CustomFieldValueStr:
      properties:
        strText:
          description: Text field for string value.
          type: string
      required:
      - strText
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          description: Anchor text for hyperlink.
          type: string
        urlLink:
          description: Link for this URL.
          type: string
      required:
      - urlAnchor
      - urlLink
    CustomFieldValuePerson:
      properties:
        person:
          $ref: '#/components/schemas/Person'
    CustomFieldValue:
      oneOf:
      - $ref: '#/components/schemas/CustomFieldValueStr'
      - $ref: '#/components/schemas/CustomFieldValueHyperlink'
      - $ref: '#/components/schemas/CustomFieldValuePerson'
    CustomFieldData:
      properties:
        label:
          description: A user-facing label for this field.
          type: string
        values:
          items:
            $ref: '#/components/schemas/CustomFieldValue'
          type: array
        displayable:
          default: true
          description: Determines whether the client should display this custom field
          type: boolean
      required:
      - displayable
      - label
      - values
    TimeInterval:
      properties:
        start:
          description: The RFC3339 timestamp formatted start time of this event.
          type: string
        end:
          description: The RFC3339 timestamp formatted end time of this event.
          type: string
      required:
      - end
      - start
    AnonymousEvent:
      description: "A generic, light-weight calendar event."
      properties:
        time:
          $ref: '#/components/schemas/TimeInterval'
        eventType:
          description: "The nature of the event, for example \"out of office\"."
          enum:
          - DEFAULT
          - OUT_OF_OFFICE
          type: string
      type: object
    IconConfig:
      description: Defines how to render an icon
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
      properties:
        generatedBackgroundColorKey:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
          - COLLECTION
          - CUSTOM
          - DATASOURCE
          - DATASOURCE_INSTANCE
          - FAVICON
          - FILE_TYPE
          - GENERATED_BACKGROUND
          - GLYPH
          - MIME_TYPE
          - NO_ICON
          - PERSON
          - REACTIONS
          - URL
          type: string
        name:
          description: "The name of the icon if applicable, e.g. the glyph name for\
            \ IconType.GLYPH icons"
          type: string
        url:
          description: "The URL to an image to be displayed if applicable, e.g. the\
            \ url for iconType.URL icons"
          type: string
    Badge:
      description: Displays a user's accomplishment or milestone
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
        - $ref: ../../shared/common.yaml#/components/schemas/IconConfig/example
      properties:
        key:
          description: An auto generated unique identifier.
          type: string
        displayName:
          description: The badge name displayed to users
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        pinned:
          description: The badge should be shown on the PersonAttribution
          type: boolean
      type: object
    PersonMetadata:
      example:
        department: Movies
        email: george@example.com
        location: "Hollywood, CA"
        phone: 6505551234
        photoUrl: https://example.com/george.jpg
        startDate: 2000-01-23
        title: Actor
      properties:
        type:
          enum:
          - FULL_TIME
          - CONTRACTOR
          - NON_EMPLOYEE
          example: FULL_TIME
          type: string
        firstName:
          description: The first name of the person
          type: string
        lastName:
          description: The last name of the person
          type: string
        title:
          description: Job title.
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally
            applies to bigger companies with multiple distinct businesses.
          type: string
        department:
          description: "An organizational unit where everyone has a similar task,\
            \ e.g. `Engineering`."
          type: string
        teams:
          description: Info about the employee's team(s).
          items:
            $ref: '#/components/schemas/PersonTeam'
          type: array
        departmentCount:
          description: The number of people in this person's department.
          type: integer
        email:
          description: The user's primary email address
          type: string
        aliasEmails:
          description: "Additional email addresses of this user beyond the primary,\
            \ if any."
          items:
            type: string
          type: array
        location:
          description: User facing string representing the person's location.
          type: string
        structuredLocation:
          $ref: '#/components/schemas/StructuredLocation'
        externalProfileLink:
          description: Link to a customer's internal profile page. This is set to
            '#' when no link is desired.
          type: string
        manager:
          $ref: '#/components/schemas/Person'
        managementChain:
          description: The chain of reporting in the company as far up as it goes.
            The last entry is this person's direct manager.
          items:
            $ref: '#/components/schemas/Person'
          type: array
        phone:
          description: Phone number as a number string.
          type: string
        photoUrl:
          description: "The URL of the person's avatar. Public, glean-authenticated\
            \ and Base64 encoded data URLs are all valid (but not third-party-authenticated\
            \ URLs)."
          type: string
        uneditedPhotoUrl:
          description: The original photo URL of the person's avatar before any edits
            they made are applied
          type: string
        bannerUrl:
          description: The URL of the person's banner photo.
          type: string
        reports:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        startDate:
          description: The date when the employee started.
          format: date
          type: string
        endDate:
          description: "If a former employee, the last date of employment."
          format: date
          type: string
        bio:
          description: Short biography or mission statement of the employee.
          type: string
        pronoun:
          description: "She/her, He/his or other pronoun."
          type: string
        orgSizeCount:
          description: "The total recursive size of the people reporting to this person,\
            \ or 1"
          type: integer
        directReportsCount:
          description: "The total number of people who directly report to this person,\
            \ or 0"
          type: integer
        preferredName:
          description: "The preferred name of the person, or a nickname."
          type: string
        socialNetwork:
          description: List of social network profiles.
          items:
            $ref: '#/components/schemas/SocialNetwork'
          type: array
        datasourceProfile:
          description: List of profiles this user has in different datasources / tools
            that they use.
          items:
            $ref: '#/components/schemas/DatasourceProfile'
          type: array
        querySuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        peopleDistance:
          description: List of people and distances to those people from this person.
            Optionally with metadata.
          items:
            $ref: '#/components/schemas/PersonDistance'
          type: array
        inviteInfo:
          $ref: '#/components/schemas/InviteInfo'
        isSignedUp:
          description: Whether the user has signed into Glean at least once.
          type: boolean
        lastExtensionUse:
          description: The last time the user has used the Glean extension in ISO
            8601 format.
          format: date-time
          type: string
        permissions:
          $ref: '#/components/schemas/Permissions'
        customFields:
          description: User customizable fields for additional people information.
          items:
            $ref: '#/components/schemas/CustomFieldData'
          type: array
        loggingId:
          description: "The logging id of the person used in scrubbed logs, tracking\
            \ GA metrics."
          type: string
        startDatePercentile:
          description: "Percentage of the company that started strictly after this\
            \ person. Between [0,100)."
          format: float
          type: number
        busyEvents:
          description: "Intervals of busy time for this person, along with the type\
            \ of event they're busy with."
          items:
            $ref: '#/components/schemas/AnonymousEvent'
          type: array
        profileBoolSettings:
          additionalProperties:
            type: boolean
          description: flag settings to indicate user profile settings for certain
            items
          type: object
        badges:
          description: The badges that a user has earned over their lifetime.
          items:
            $ref: '#/components/schemas/Badge'
          type: array
    DocumentVisibility:
      description: The level of visibility of the document as understood by our system.
        PRIVATE - Only one person is able to see the document SPECIFIC_PEOPLE_AND_GROUPS
        - Only specific people and/or groups can see the document DOMAIN_LINK - Anyone
        in the domain with the link can see the document DOMAIN_VISIBLE - Anyone in
        the domain can search for the document PUBLIC_LINK - Anyone with the link
        can see the document PUBLIC_VISIBLE - Anyone on the internet can search for
        the document
      enum:
      - PRIVATE
      - SPECIFIC_PEOPLE_AND_GROUPS
      - DOMAIN_LINK
      - DOMAIN_VISIBLE
      - PUBLIC_LINK
      - PUBLIC_VISIBLE
      type: string
    Reaction:
      properties:
        type:
          type: string
        count:
          description: The count of the reaction type on the document.
          type: integer
        reactors:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        reactedByViewer:
          description: Whether the user in context reacted with this type to the document.
          type: boolean
    Share:
      description: Search endpoint will only fill out numDays ago since that's all
        we need to display shared badge; docmetadata endpoint will fill out all the
        fields so that we can display shared badge tooltip
      properties:
        numDaysAgo:
          description: The number of days that has passed since the share happened
          type: integer
        sharer:
          $ref: '#/components/schemas/Person'
        sharingDocument:
          $ref: '#/components/schemas/Document'
      required:
      - numDaysAgo
    DocumentInteractions:
      properties:
        numComments:
          description: The count of comments (thread replies in the case of slack).
          type: integer
        numReactions:
          description: The count of reactions on the document.
          type: integer
        reactions:
          deprecated: true
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive)
            list of reactions for the document.
          items:
            type: string
          type: array
        reacts:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
        shares:
          description: Describes instances of someone posting a link to this document
            in one of our indexed datasources.
          items:
            $ref: '#/components/schemas/Share'
          type: array
        visitorCount:
          $ref: '#/components/schemas/CountInfo'
    ViewerInfo:
      properties:
        role:
          deprecated: true
          description: DEPRECATED - use permissions instead. Viewer's role on the
            specific document.
          enum:
          - ANSWER_MODERATOR
          - OWNER
          - VIEWER
          type: string
        lastViewedTime:
          format: date-time
          type: string
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          format: date-time
          type: string
        lastIndexedTime:
          description: When the document was last indexed
          format: date-time
          type: string
    DocumentMetadata:
      example:
        container: container
        parentId: JIRA_EN-1337
        createTime: 2000-01-23T04:56:07.000Z
        datasource: datasource
        author:
          name: name
        documentId: documentId
        updateTime: 2000-01-23T04:56:07.000Z
        mimeType: mimeType
        objectType: Feature Request
        components:
        - Backend
        - Networking
        status:
        - Done
        customData:
          someCustomField: someCustomValue
      properties:
        datasource:
          type: string
        datasourceInstance:
          description: The datasource instance from which the document was extracted.
          type: string
        objectType:
          description: "The type of the result. Interpretation is specific to each\
            \ datasource. (e.g. for Jira issues, this is the issue type such as Bug\
            \ or Feature Request)."
          type: string
        container:
          description: "The name of the container (higher level parent, not direct\
            \ parent) of the result. Interpretation is specific to each datasource\
            \ (e.g. Channels for Slack, Project for Jira). cf. parentId"
          type: string
        parentId:
          description: The id of the direct parent of the result. Interpretation is
            specific to each datasource (e.g. parent issue for Jira). cf. container
          type: string
        mimeType:
          type: string
        documentId:
          description: The index-wide unique identifier.
          type: string
        documentIdHash:
          description: Hash of documentId.
          type: string
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        author:
          $ref: '#/components/schemas/Person'
        owner:
          $ref: '#/components/schemas/Person'
        visibility:
          $ref: '#/components/schemas/DocumentVisibility'
        components:
          description: "A list of components this result is associated with. Interpretation\
            \ is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)"
          items:
            type: string
          type: array
        status:
          description: "The status or disposition of the result. Interpretation is\
            \ specific to each datasource. (e.g. for Jira issues, this is the issue\
            \ status such as Done, In Progress or Will Not Fix)."
          type: string
        statusCategory:
          description: The status category of the result. Meant to be more general
            than status. Interpretation is specific to each datasource.
          type: string
        pins:
          description: A list of stars associated with this result.  "Pin" is an older
            name.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
        priority:
          description: The document priority. Interpretation is datasource specific.
          type: string
        assignedTo:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        labels:
          description: A list of tags for the document. Interpretation is datasource
            specific.
          items:
            type: string
          type: array
        collections:
          description: A list of collections that the document belongs to.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        datasourceId:
          description: "The user-visible datasource specific id (e.g. Salesforce case\
            \ number for example, GitHub PR number)."
          type: string
        interactions:
          $ref: '#/components/schemas/DocumentInteractions'
        verification:
          $ref: '#/components/schemas/Verification'
        viewerInfo:
          $ref: '#/components/schemas/ViewerInfo'
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
        visitCount:
          $ref: '#/components/schemas/CountInfo'
        shortcuts:
          description: A list of shortcuts of which destination url is for the document.
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
        path:
          description: For file datasources like onedrive/github etc this has the
            path to the file
          type: string
        customData:
          additionalProperties:
            $ref: '#/components/schemas/CustomDataValue'
          description: Custom fields specific to individual datasources
          type: object
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        contactPerson:
          $ref: '#/components/schemas/Person'
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        indexStatus:
          $ref: '#/components/schemas/IndexStatus'
    DocumentSection:
      example:
        title: title
        url: url
      properties:
        title:
          description: The title of the document section (e.g. the section header).
          type: string
        url:
          description: The permalink of the document section.
          type: string
      type: object
    ResultsRequest:
      properties:
        timestamp:
          description: The ISO 8601 timestamp associated with the client request.
          format: date-time
          type: string
        trackingToken:
          description: A previously received trackingToken for a search associated
            with the same query. Useful for more requests and requests for other tabs.
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        sourceInfo:
          $ref: '#/components/schemas/SearchRequestSourceInfo'
        sourceDocument:
          $ref: '#/components/schemas/Document'
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit.\
            \ Requires sufficient permissions."
          example: "db.enable_debug=true,qp.idf_threshold=0.3"
          type: string
        pageSize:
          description: Hint to the server about how many results to send back. Server
            may return less or more. Structured results and clustered results don't
            count towards pageSize.
          example: 100
          type: integer
        maxSnippetSize:
          description: Hint to the server about how many characters long a snippet
            may be. Server may return less or more.
          example: 400
          type: integer
      required:
      - sourceInfo
    SearchRequestInputDetails:
      example:
        hasCopyPaste: true
      properties:
        hasCopyPaste:
          description: "Whether the associated query was at least partially copy-pasted.\
            \  If subsequent requests are issued after a copy-pasted query is constructed\
            \ (e.g. with facet modifications), this bit should continue to be set\
            \ for those requests."
          type: boolean
    SearchRequest:
      allOf:
      - $ref: '#/components/schemas/ResultsRequest'
      - $ref: '#/components/schemas/SearchRequest_allOf'
      example:
        trackingToken: trackingToken
        query: vacation policy
        pageSize: 10
        requestOptions:
          debugOptions:
            enableDebugging: true
          facetFilters:
          - fieldName: doctype
            fieldValues:
            - article
            - document
          - fieldName: container
            fieldValues:
            - engineering
    GeneratedQna:
      properties:
        question:
          description: Search query rephrased into a question.
          type: string
        answer:
          description: Answer generated for the given query or the generated question.
          type: string
        ranges:
          description: "Answer subsections to mark with special formatting (citations,\
            \ bolding etc)"
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
        status:
          description: Status of backend generating the answer
          enum:
          - COMPUTING
          - DISABLED
          - FAILED
          - NO_ANSWER
          - SKIPPED
          - SUCCEEDED
          - TIMEOUT
          type: string
        cursor:
          description: An opaque cursor representing the search request
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        debugInfo:
          description: Debug details for this result if debug is enabled.
          type: string
    SearchDebugInfo:
      example:
        formattedDebugInfo: formattedDebugInfo
      properties:
        formattedDebugQuery:
          description: A formatted string that represents the parsed query.
          type: string
        searchConfigurationJson:
          description: JSON of the search config
          type: string
        extraArgsJson:
          description: JSON of the extra args
          type: string
        parsedQueryJson:
          description: "JSON for the parsed query, to be used as an override."
          type: string
        debugParsedQueryJson:
          description: JSON for the parsed query with debugging signals (e.g. syns
            and spellchecks)
          type: string
        debugScholasticJson:
          description: "JSON containing Scholastic data (query embeddings, doc similarities)."
          type: string
        debugQPMetadataJson:
          description: JSON containing QP metadata
          type: string
        debugScholasticMetadataJson:
          description: JSON containing Scholastic metadata
          type: string
        debugMinedSamplesJson:
          description: JSON containing mined Intelligence samples
          type: string
        debugRetrievalElasticQuery:
          description: JSON containing Elastic retrieval query
          type: string
        debugSnippetsElasticQuery:
          description: JSON containing Elastic snippets query
          type: string
        elasticPerformanceString:
          description: A string showing performance information returned by elastic.
          type: string
        scoringLegendString:
          description: A legend of what the functions are when computing the backend
            score
          type: string
        resultsDebugString:
          description: Additional debugging details associated with the request.
          type: string
        debugKeywordGenerationJson:
          description: JSON containing Keyword Generation data for debugging purposes.
          type: string
    InvalidOperatorValueError:
      properties:
        key:
          description: The operator key that has an invalid value.
          type: string
        value:
          description: The invalid operator value.
          type: string
    ErrorMessage:
      properties:
        source:
          description: The datasource this message relates to.
          type: string
        errorMessage:
          type: string
    ErrorInfo:
      properties:
        badGmailToken:
          description: Indicates the gmail results could not be fetched due to bad
            token.
          type: boolean
        badOutlookToken:
          description: Indicates the outlook results could not be fetched due to bad
            token.
          type: boolean
        invalidOperators:
          description: Indicates results could not be fetched due to invalid operators
            in the query.
          items:
            $ref: '#/components/schemas/InvalidOperatorValueError'
          type: array
        errorMessages:
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
    ResultsResponse:
      properties:
        trackingToken:
          description: A token that should be passed for additional requests related
            to this request (such as more results requests).
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        results:
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        structuredResults:
          items:
            $ref: '#/components/schemas/StructuredResult'
          type: array
        generatedQnaResult:
          $ref: '#/components/schemas/GeneratedQna'
        debugInfo:
          $ref: '#/components/schemas/SearchDebugInfo'
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
        requestID:
          description: A platform-generated request ID to correlate backend logs.
          type: string
        backendTimeMillis:
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
          format: int64
          type: integer
    BackendExperimentsContext:
      properties:
        experimentIds:
          description: List of experiment ids for the corresponding request.
          items:
            format: int64
            type: integer
          type: array
    SearchWarning:
      properties:
        warningType:
          description: The type of the warning.
          enum:
          - LONG_QUERY
          - QUOTED_PUNCTUATION
          - PUNCTUATION_ONLY
          - COPYPASTED_QUOTES
          type: string
        lastUsedTerm:
          description: The last term we considered in the user's long query.
          type: string
        quotesIgnoredQuery:
          description: The query after ignoring/removing quotes.
          type: string
      required:
      - warningType
    SearchResponseMetadata:
      properties:
        rewrittenQuery:
          description: A cleaned up or updated version of the query to be displayed
            in the query box. Useful for mapping visual facets to search operators.
          type: string
        searchedQuery:
          description: The actual query used to perform search and return results.
          type: string
        searchedQueryRanges:
          description: The bolded ranges within the searched query.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
        originalQuery:
          description: The query text sent by the client in the request.
          type: string
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        negatedTerms:
          description: A list of terms that were negated when processing the query.
          items:
            type: string
          type: array
        ignoredTerms:
          deprecated: true
          description: "DEPRECATED - A list of terms that are ignored in search. Used,\
            \ for example, by negation."
          items:
            type: string
          type: array
        modifiedQueryWasUsed:
          description: A different query was performed than the one requested.
          type: boolean
        originalQueryHadNoResults:
          description: No results were found for the original query. The usage of
            this bit in conjunction with modifiedQueryWasUsed will dictate whether
            the full page replacement is 0-result or few-result based.
          type: boolean
        searchWarning:
          $ref: '#/components/schemas/SearchWarning'
        triggeredExpertDetection:
          description: Whether the query triggered expert detection results in the
            People tab.
          type: boolean
    FacetValue:
      example:
        displayLabel: engineering
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
        stringValue: engineering
        integerValue: 5
      properties:
        stringValue:
          description: The value that should be set in the FacetFilter when applying
            this filter to a search request.
          example: engineering
          type: string
        integerValue:
          example: 5
          type: integer
        displayLabel:
          description: An optional user-friendly label to display in place of the
            facet value.
          example: engineering
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    FacetBucket:
      example:
        datasource: jira
        percentage: 5
        count: 1
        value:
          displayLabel: engineering
          iconConfig:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          stringValue: engineering
          integerValue: 5
      properties:
        count:
          description: Estimated number of results in this facet.
          example: 1
          type: integer
        datasource:
          description: The datasource the value belongs to. This will be used by the
            all tab to show types across all datasources.
          example: jira
          type: string
        percentage:
          description: Estimated percentage of results in this facet.
          example: 5
          type: integer
        value:
          $ref: '#/components/schemas/FacetValue'
    FacetResult:
      example:
        groupName: Service Cloud
        buckets:
        - datasource: jira
          percentage: 5
          count: 1
          value:
            displayLabel: engineering
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            stringValue: engineering
            integerValue: 5
        - datasource: jira
          percentage: 5
          count: 1
          value:
            displayLabel: engineering
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            stringValue: engineering
            integerValue: 5
        sourceName: container_name
        hasMoreBuckets: false
        operatorName: SelectMultiple
      properties:
        sourceName:
          description: "The source of this facet (e.g. container_name, doc_type, last_updated_at)."
          example: container_name
          type: string
        operatorName:
          description: How to display this facet. Currently supportes 'SelectSingle'
            and 'SelectMultiple'.
          example: SelectMultiple
          type: string
        buckets:
          description: A list of unique buckets that exist within this result set.
          items:
            $ref: '#/components/schemas/FacetBucket'
          type: array
        hasMoreBuckets:
          description: Returns true if more buckets exist than those returned. Additional
            buckets can be retrieve by requesting again with a higher facetBucketSize.
          example: false
          type: boolean
        groupName:
          description: "For most facets this will be the empty string, meaning the\
            \ facet is high-level and applies to all documents for the datasource.\
            \ When non-empty, this is used to group facets together (i.e. group facets\
            \ for each doctype for a certain datasource)"
          example: Service Cloud
          type: string
    ResultTab:
      properties:
        id:
          description: The unique ID of the tab. Can be passed in a search request
            to get results for that tab.
          type: string
        count:
          description: The number of results in this tab for the current query.
          type: integer
        datasource:
          description: "The datasource associated with the tab, if any."
          type: string
        datasourceInstance:
          description: "The datasource instance associated with the tab, if any."
          type: string
    ResultsDescription:
      properties:
        text:
          description: "Textual description of the results. Can be shown at the top\
            \ of SERP, e.g. 'People who write about this topic' for experts in people\
            \ tab."
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    SearchResponse:
      allOf:
      - $ref: '#/components/schemas/ResultsResponse'
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/SearchResponse_allOf'
      example:
        trackingToken: trackingToken
        suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
        hasMoreResults: true
        errorInfo:
          errorMessages:
          - source: gmail
            errorMessage: invalid token
          - source: slack
            errorMessage: expired token
        debugInfo:
          formattedDebugInfo: formattedDebugInfo
        requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
        results:
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: url
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: url
        facetResults:
        - buckets:
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          sourceName: sourceName
          operatorName: operatorName
          objectType: objectType
        - buckets:
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          sourceName: sourceName
          operatorName: operatorName
          objectType: objectType
        rewrittenQuery: rewrittenQuery
        rewrittenFacetFilters:
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
    AutocompleteRequest:
      example:
        trackingToken: trackingToken
        query: what is a que
        datasource: GDRIVE
        resultSize: 10
      properties:
        trackingToken:
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        sourceInfo:
          $ref: '#/components/schemas/SearchRequestSourceInfo'
        query:
          description: Partially typed query.
          example: San Fra
          type: string
        datasourcesFilter:
          description: "Filter results to only those relevant to one or more datasources\
            \ (e.g. jira, gdrive). Results are unfiltered if missing."
          items:
            type: string
          type: array
        datasource:
          description: Filter to only return results relevant to the given datasource.
          type: string
        resultTypes:
          description: Filter to only return results of the given type(s). All types
            may be returned if omitted.
          items:
            enum:
            - DOCUMENT
            - HISTORY
            - OPERATOR
            - SUGGESTION
            - ENTITY
            - GOLINK
            type: string
          type: array
        resultSize:
          description: |
            Maximum number of results to be returned. If no value is provided, the backend will cap at 200.
          example: 10
          type: integer
        authTokens:
          description: Auth tokens which may be used for federated results.
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details,"
          example: ro.pero.do_historical_simulation_for_visits=true
          type: string
      type: object
    OperatorScope:
      properties:
        datasource:
          type: string
        docType:
          type: string
    OperatorMetadata:
      example:
        name: Last Updated
        operatorType: DATE
        scopes:
        - datasource: GDRIVE
          docType: Document
        - datasource: ZENDESK
      properties:
        name:
          type: string
        isCustom:
          description: Whether this operator is supported by default or something
            that was created within a workplace app (e.g. custom jira field).
          type: boolean
        operatorType:
          enum:
          - TEXT
          - DOUBLE
          - DATE
          type: string
        helpText:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/OperatorScope'
          type: array
      required:
      - name
    Quicklink:
      description: "An action for a specific datasource that will show up in autocomplete\
        \ and app card, e.g. \"Create new issue\" for jira"
      properties:
        name:
          description: Full action name. Used in autocomplete
          type: string
        shortName:
          description: Shortened name. Used in app card
          type: string
        url:
          description: The URL for the action
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        id:
          description: Unique identifier of this quicklink
          type: string
        scopes:
          description: The scopes for which this quicklink is applicable
          items:
            enum:
            - APP_CARD
            - AUTOCOMPLETE_EXACT_MATCH
            - AUTOCOMPLETE_FUZZY_MATCH
            - AUTOCOMPLETE_ZERO_QUERY
            - NEW_TAB_PAGE
            type: string
          type: array
    AutocompleteResult:
      example:
        result: sample result
        resultType: DOCUMENT
        score: 4.56
        url: url
        trackingToken: abcd
        metadata:
        - datasource: confluence
        - objectType: page
      properties:
        result:
          type: string
        keywords:
          description: A list of all possible keywords for given result.
          items:
            type: string
          type: array
        resultType:
          enum:
          - APP
          - DOCUMENT
          - HISTORY
          - OPERATOR
          - SUGGESTION
          - ENTITY
          - BROWSER_HISTORY
          - DATASOURCE
          - QUICKLINK
          - OPERATOR_VALUE
          - GOLINK
          - ADDITIONAL_DOCUMENT
          type: string
        score:
          description: Higher indicates a more confident match.
          type: number
        operatorMetadata:
          $ref: '#/components/schemas/OperatorMetadata'
        quicklink:
          $ref: '#/components/schemas/Quicklink'
        document:
          $ref: '#/components/schemas/Document'
        url:
          type: string
        structuredResult:
          $ref: '#/components/schemas/StructuredResult'
        trackingToken:
          description: A token to be passed in /feedback events associated with this
            autocomplete result.
          type: string
        ranges:
          description: Subsections of the result string to which some special formatting
            should be applied (eg. bold)
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - result
      - result_type
    AutocompleteResultGroup:
      description: A subsection of the results list from which distinct sections should
        be created.
      properties:
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        title:
          description: The title of the result group to be displayed by FE. Empty
            means no title.
          type: string
    AutocompleteResponse:
      allOf:
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/AutocompleteResponse_allOf'
    AnnouncementMutableProperties:
      properties:
        startTime:
          description: The date and time at which the announcement becomes active.
          format: date-time
          type: string
        endTime:
          description: The date and time at which the announcement expires.
          format: date-time
          type: string
        title:
          description: The headline of the announcement.
          type: string
        body:
          $ref: '#/components/schemas/StructuredText'
        emoji:
          description: An emoji used to indicate the nature of the announcement.
          type: string
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        banner:
          $ref: '#/components/schemas/Thumbnail'
        audienceFilters:
          description: Filters which restrict who should see the announcement. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        sourceDocumentId:
          description: The Document ID of the Source Document this Announcement was
            created from (e.g. Slack thread).
          type: string
        hideAttribution:
          description: Whether or not to hide an author attribution.
          type: boolean
        channel:
          description: This determines whether this is a Social Feed post or a regular
            announcement.
          enum:
          - MAIN
          - SOCIAL_FEED
          type: string
        isPrioritized:
          description: Used by the Social Feed to pin posts to the front of the feed.
          type: boolean
        viewUrl:
          description: Url for viewing the announcement. It will be set to document
            url for announcements from other datasources e.g. simpplr. Can only be
            written when channel="SOCIAL_FEED".
          type: string
    AnnouncementCreateOrUpdateData:
      properties:
        id:
          description: "If editing an existing announcement, the announcement's ID."
          type: integer
        title:
          description: The headline of the announcement.
          type: string
        structuredText:
          $ref: '#/components/schemas/StructuredText'
        emoji:
          description: An emoji used to indicate the nature of the announcement.
          type: string
        startTime:
          description: "The date and time at which the announcement becomes active.\
            \ If omitted, the announement will become active immediately."
          format: date-time
          type: string
        endTime:
          description: The date and time at which the announcement expires.
          format: date-time
          type: string
        audienceFilters:
          description: Filters which restrict who should see the announcement. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
      required:
      - endTime
      - title
    CreateAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/CreateAnnouncementRequest_allOf'
    DraftProperties:
      example:
        draftId: 342
      properties:
        draftId:
          description: The opaque id of the associated draft.
          type: integer
    UserActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Person'
        timestamp:
          description: Unix timestamp of the activity (in seconds since epoch UTC).
          type: integer
        action:
          description: The action for the activity
          enum:
          - ADD
          - ADD_REMINDER
          - CLICK
          - COMMENT
          - DELETE
          - DISMISS
          - EDIT
          - MENTION
          - MOVE
          - OTHER
          - RESTORE
          - UNKNOWN
          - VERIFY
          - VIEW
          type: string
        aggregateVisitCount:
          $ref: '#/components/schemas/CountInfo'
    Announcement:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/DraftProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Announcement_allOf'
    AddedCollections:
      properties:
        addedCollections:
          description: IDs of collections to which a document is added.
          items:
            type: integer
          type: array
    AnswerCreationData:
      allOf:
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/AddedCollections'
      - $ref: '#/components/schemas/AnswerCreationData_allOf'
    CreateAnswerRequest:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/AnswerCreationData'
      required:
      - data
    CreateAuthTokenResponse:
      example:
        expirationTime: 0
        token: token
      properties:
        token:
          description: An authentication token that can be passed to any endpoint
            via Bearer Authentication
          type: string
        expirationTime:
          description: Unix timestamp for when this token expires (in seconds since
            epoch UTC).
          format: int64
          type: integer
      required:
      - expirationTime
      - token
    DeleteAnnouncementRequest:
      example:
        id: 0
      properties:
        id:
          description: The opaque id of the announcement to be deleted.
          type: integer
      required:
      - id
    DeleteAnswerRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - required:
        - id
        type: object
    RemovedCollections:
      properties:
        removedCollections:
          description: IDs of collections from which a document is removed.
          items:
            type: integer
          type: array
    EditAnswerRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/AddedCollections'
      - $ref: '#/components/schemas/RemovedCollections'
      - $ref: '#/components/schemas/EditAnswerRequest_allOf'
    ListAnswersRequest:
      example:
        boardId: 0
      properties:
        boardId:
          description: The Answer Board Id to list answers on.
          type: integer
    AnswerResult:
      example:
        trackingToken: trackingToken
        answer: null
      properties:
        answer:
          $ref: '#/components/schemas/Answer'
        trackingToken:
          description: An opaque token that represents this particular answer. To
            be used for /feedback reporting.
          type: string
      required:
      - answer
    ListAnswersResponse:
      example:
        answerResults:
        - trackingToken: trackingToken
          answer: null
        - trackingToken: trackingToken
          answer: null
        userRole: REGULAR
      properties:
        answerResults:
          description: List of answers with tracking tokens.
          items:
            $ref: '#/components/schemas/AnswerResult'
          type: array
        userRole:
          deprecated: true
          description: DEPRECATED - use permissions instead. User's role for Answers
            in their workplace.
          enum:
          - REGULAR
          - ANSWER_MODERATOR
          type: string
      required:
      - answerResults
      - answers
    CreateCollectionRequest:
      allOf:
      - $ref: '#/components/schemas/CollectionMutableProperties'
      - $ref: '#/components/schemas/CreateCollectionRequest_allOf'
    CollectionError:
      properties:
        errorCode:
          enum:
          - NAME_EXISTS
          - NOT_FOUND
          - COLLECTION_PINNED
          - CONCURRENT_HIERARCHY_EDIT
          - HEIGHT_VIOLATION
          - WIDTH_VIOLATION
          - NO_PERMISSIONS
          type: string
      required:
      - errorCode
    CreateCollectionResponse:
      allOf:
      - $ref: '#/components/schemas/Collection'
      - $ref: '#/components/schemas/CollectionError'
      - $ref: '#/components/schemas/CreateCollectionResponse_allOf'
    ListCollectionsRequest:
      example:
        includeAudience: true
        includeRoles: true
        allowedDatasource: allowedDatasource
      properties:
        includeAudience:
          description: Whether to include the audience filters with the listed collections.
          type: boolean
        includeRoles:
          description: Whether to include the editor roles with the listed collections.
          type: boolean
        allowedDatasource:
          description: |-
            The datasource type this collection can hold.
            ANSWERS - for collections representing answer boards
          type: string
    ListCollectionsResponse:
      example:
        collections:
        - null
        - null
      properties:
        collections:
          description: "List of all collections, no collection items are fetched."
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - collections
    VerifyRequest:
      example:
        action: VERIFY
        documentId: documentId
      properties:
        documentId:
          description: The document which is verified.
          type: string
        action:
          description: The verification action requested.
          enum:
          - VERIFY
          - DEPRECATE
          - UNVERIFY
          type: string
      required:
      - documentId
    ReminderRequest:
      example:
        reason: reason
        documentId: documentId
        assignee: assignee
        remindInDays: 0
      properties:
        documentId:
          description: The document which the verification is for new reminders and/or
            update.
          type: string
        assignee:
          description: The obfuscated id of the person this verification is assigned
            to.
          type: string
        remindInDays:
          description: "Reminder for the next verifications in terms of days. For\
            \ deletion, this will be omitted."
          type: integer
        reason:
          description: "An optional free-text reason for the reminder. This is particularly\
            \ useful when a reminder is used to ask for verification from another\
            \ user (for example, \"Duplicate\", \"Incomplete\", \"Incorrect\")."
          type: string
      required:
      - documentId
    VerificationFeed:
      example:
        documents:
        - metadata:
            reminders:
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            lastReminder:
              createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            expirationTs: 6
            visitorCount:
            - period:
                minDaysFromNow: 2
                start:
                  daysFromNow: 3
                  epochSeconds: 9
                maxDaysFromNow: 7
                end:
                  daysFromNow: 3
                  epochSeconds: 9
              org: org
              count: 5
            - period:
                minDaysFromNow: 2
                start:
                  daysFromNow: 3
                  epochSeconds: 9
                maxDaysFromNow: 7
                end:
                  daysFromNow: 3
                  epochSeconds: 9
              org: org
              count: 5
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            lastVerifier:
              name: George Clooney
              obfuscatedId: abc123
            lastVerificationTs: 0
            candidateVerifiers:
            - name: George Clooney
              obfuscatedId: abc123
            - name: George Clooney
              obfuscatedId: abc123
          state: UNVERIFIED
        - metadata:
            reminders:
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            lastReminder:
              createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            expirationTs: 6
            visitorCount:
            - period:
                minDaysFromNow: 2
                start:
                  daysFromNow: 3
                  epochSeconds: 9
                maxDaysFromNow: 7
                end:
                  daysFromNow: 3
                  epochSeconds: 9
              org: org
              count: 5
            - period:
                minDaysFromNow: 2
                start:
                  daysFromNow: 3
                  epochSeconds: 9
                maxDaysFromNow: 7
                end:
                  daysFromNow: 3
                  epochSeconds: 9
              org: org
              count: 5
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            lastVerifier:
              name: George Clooney
              obfuscatedId: abc123
            lastVerificationTs: 0
            candidateVerifiers:
            - name: George Clooney
              obfuscatedId: abc123
            - name: George Clooney
              obfuscatedId: abc123
          state: UNVERIFIED
      properties:
        documents:
          description: List of document infos that include verification related information
            for them.
          items:
            $ref: '#/components/schemas/Verification'
          type: array
    CreateShortcutRequest:
      example:
        data:
          destinationDocumentId: destinationDocumentId
          unlisted: true
          urlTemplate: urlTemplate
          description: description
          inputAlias: inputAlias
          destinationUrl: destinationUrl
          addedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          removedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
      properties:
        data:
          $ref: '#/components/schemas/ShortcutMutableProperties'
      required:
      - data
    ShortcutError:
      example:
        errorType: NO_PERMISSION
      properties:
        errorType:
          enum:
          - NO_PERMISSION
          - INVALID_ID
          - EXISTING_SHORTCUT
          type: string
    CreateShortcutResponse:
      example:
        shortcut: null
        error:
          errorType: NO_PERMISSION
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        error:
          $ref: '#/components/schemas/ShortcutError'
    ActivityEventParams:
      properties:
        bodyContent:
          description: The HTML content of the page body.
          type: string
        datasourceInstance:
          description: The full datasource instance name inferred from the URL of
            the event
          type: string
        datasource:
          description: The datasource without the instance inferred from the URL of
            the event
          type: string
        instanceOnlyName:
          description: "The instance only name of the datasource instance, e.g. 1\
            \ for jira_1, inferred from the URL of the event"
          type: string
        duration:
          description: "Length in seconds of the activity. For VIEWS, this represents\
            \ the amount the page was visible in the foreground."
          type: integer
        query:
          description: The user's search query associated with a SEARCH.
          type: string
        referrer:
          description: The referring URL of the VIEW or SEARCH.
          type: string
        title:
          description: The page title associated with the URL of the event
          type: string
        truncated:
          description: Indicates that the params are incomplete and more params may
            be sent with the same action+timestamp+url in the future. This is used
            for sending the duration when a VIEW is finished.
          type: boolean
    ActivityEvent:
      properties:
        action:
          description: |-
            The type of activity this represents.
            CRAWL - Represents an explicit request to index the given `url` along with associated attributes in this payload. HISTORICAL_SEARCH - Represents a search performed at the given `url` as indicated by the user's history. HISTORICAL_VIEW - Represents a visit to the given `url` as indicated by the user's history. SEARCH - Represents a search performed at the given `url`. VIEW - Represents a visit to the given `url`. EDIT - Represents an edit of the document represented by the `url`. COMMENT - Represents a comment on the document represented by the `url`.
          enum:
          - CRAWL
          - HISTORICAL_SEARCH
          - HISTORICAL_VIEW
          - SEARCH
          - VIEW
          - EDIT
          - COMMENT
          type: string
        params:
          $ref: '#/components/schemas/ActivityEventParams'
        source:
          description: Identifies the type of client that is reporting the activity.
          enum:
          - EMBEDDED_SEARCH
          - EXTENSION
          - REST_ENDPOINT
          type: string
        timestamp:
          description: The ISO 8601 timestamp when the activity began.
          format: date-time
          type: string
        url:
          description: The url of the activity.
          type: string
      required:
      - action
      - source
      - timestamp
      - url
    User:
      properties:
        userID:
          description: "An opaque user ID for the claimed authority (i.e., the actas\
            \ param, or the origid if actas is not specified)."
          type: string
        origID:
          description: An opaque user ID for the authenticated user (ignores actas).
          type: string
    Activity:
      example:
        events:
        - url: https://example.com/
          action: HISTORICAL_VIEW
          timestamp: 2000-01-23T04:56:07.000Z
        - url: https://example.com/search?q=query
          action: SEARCH
          timestamp: 2000-01-23T04:56:07.000Z
          params:
            query: query
        - url: https://example.com/
          action: VIEW
          timestamp: 2000-01-23T04:56:07.000Z
          params:
            duration: 20
            referrer: https://example.com/document
      properties:
        events:
          items:
            $ref: '#/components/schemas/ActivityEvent'
          type: array
        user:
          $ref: '#/components/schemas/User'
      required:
      - events
    ManualFeedbackInfo:
      properties:
        email:
          description: The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK
            event.
          type: string
        source:
          description: The source associated with the Feedback.event.MANUAL_FEEDBACK
            event.
          enum:
          - SEARCH
          - FEED
          - Q_AND_A
          - GENERATED_Q_AND_A
          - SUMMARY
          - EXPERT_DETECTION
          type: string
        issue:
          description: The issue the user indicated in the feedback.
          type: string
        query:
          description: The query associated with the Feedback.event.MANUAL_FEEDBACK
            event.
          type: string
        obscuredQuery:
          description: "The query associated with the Feedback.event.MANUAL_FEEDBACK\
            \ event, but obscured such that the vowels are replaced with special characters.\
            \ For search feedback events only."
          type: string
        activeTab:
          description: Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK
            event. For search feedback events only.
          type: string
        comments:
          description: The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK
            events.
          type: string
        searchResults:
          description: "The array of search result docIds, ordered by top to bottom\
            \ result."
          items:
            type: string
          type: array
        numQueriesFromFirstRun:
          description: How many times this query has been run in the past.
          type: integer
    SeenFeedbackInfo:
      properties:
        isExplicit:
          description: The confidence of the user seeing the object is high because
            they explicitly interacted with it e.g. answer impression in SERP with
            additional user interaction.
          type: boolean
    UserViewInfo:
      properties:
        docId:
          description: Unique identifier of associated document
          type: string
        docTitle:
          description: Title of associated document
          type: string
        docUrl:
          description: URL of associated document
          type: string
    Feedback:
      example:
        trackingTokens:
        - trackingTokens
        event: VIEW
      properties:
        category:
          description: "The feature category to which the feedback applies. These\
            \ should be broad product areas such as Announcements, Answers, Search,\
            \ etc. rather than specific components or UI treatments within those areas."
          enum:
          - ANNOUNCEMENT
          - AUTOCOMPLETE
          - COLLECTIONS
          - FEED
          - SEARCH
          - CHAT
          type: string
        trackingTokens:
          description: A list of server-generated trackingTokens to which this event
            applies.
          items:
            type: string
          type: array
        event:
          description: |-
            The action the user took within a Glean client with respect to the object referred to by the given `trackingToken``.
            CLICK - The object's primary link was clicked with the intent to view its full representation. Depending on the object type, this may imply an external navigation or navigating to a new page or view within the Glean app. CONTAINER_CLICK - A link to the object's parent container (e.g. the folder in which it's located) was clicked. COPY_LINK - The user copied a link to the primary link. CREATE - The user creates a document. DISMISS - The user dismissed the object such that it was hidden from view. DOWNVOTE - The user gave feedback that the object was not useful. EMAIL - The user attempted to send an email. FOCUS_IN - The user clicked into an interactive element, e.g. the search box. MANUAL_FEEDBACK - The user submitted textual manual feedback regarding the object. MESSAGE - The user attempted to send a message using their default messaing app. MIDDLE_CLICK - The user middle clicked the object's primary link with the intent to open its full representation in a new tab. PREVIEW - The user clicked the object's inline preview affordance. RIGHT_CLICK - The user right clicked the object's primary link. This may indicate an intent to open it in a new tab or copy it. SECTION_CLICK - The user clicked a link to a subsection of the primary object. SEEN - The user has likely seen the object (e.g. took action to make the object visible within the user's viewport). SHARE - The user shared the object with another user. SHOW_MORE - The user clicked the object's show more affordance. UPVOTE - The user gave feedback that the object was useful. VIEW - The object was visible within the user's viewport. VISIBLE - The object was visible within the user's viewport.
          enum:
          - CLICK
          - CONTAINER_CLICK
          - COPY_LINK
          - CREATE
          - DISMISS
          - DOWNVOTE
          - EMAIL
          - FOCUS_IN
          - MANUAL_FEEDBACK
          - MESSAGE
          - MIDDLE_CLICK
          - PREVIEW
          - RELATED_CLICK
          - RIGHT_CLICK
          - SECTION_CLICK
          - SEEN
          - SHARE
          - SHOW_MORE
          - UPVOTE
          - VIEW
          - VISIBLE
          type: string
        position:
          description: Position of the element in the case that the client controls
            order (such as feed and autocomplete).
          type: integer
        payload:
          description: "For type MANUAL_FEEDBACK, contains string of user feedback.\
            \ For autocomplete, partial query string. For feed, string of user feedback\
            \ in addition to manual feedback signals extracted from all suggested\
            \ content."
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        timestamp:
          description: The ISO 8601 timestamp when the event occured.
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/User'
        pathname:
          description: The path the client was at when the feedback event triggered.
          type: string
        channels:
          description: "Where the feedback will be sent, e.g. to Glean, the user's\
            \ company, or both. If no channels are specified, feedback will go only\
            \ to Glean."
          items:
            enum:
            - COMPANY
            - GLEAN
            type: string
          type: array
        url:
          description: The url the client was at when the feedback event triggered.
          type: string
        uiElement:
          description: "The UI element associated with the event, if any."
          type: string
        manualFeedbackInfo:
          $ref: '#/components/schemas/ManualFeedbackInfo'
        seenFeedbackInfo:
          $ref: '#/components/schemas/SeenFeedbackInfo'
        userViewInfo:
          $ref: '#/components/schemas/UserViewInfo'
      required:
      - event
      - trackingTokens
    PeopleRequest:
      example:
        obfuscatedIds:
        - abc123
        - abc456
      properties:
        timezoneOffset:
          description: The offset of the client's timezone in minutes from UTC. e.g.
            PDT is -420 because it's 7 hours behind UTC.
          type: integer
        obfuscatedIds:
          description: "The Person IDs to retrieve. If no IDs are requested, the current\
            \ user's details are returned."
          items:
            type: string
          type: array
        emailIds:
          description: The email IDs to retrieve. The result is the deduplicated union
            of emailIds and obfuscatedIds.
          items:
            type: string
          type: array
        includeFields:
          description: List of PersonMetadata fields to return (that aren't returned
            by default)
          items:
            enum:
            - BADGES
            - BUSY_EVENTS
            - DOCUMENT_ACTIVITY
            - INVITE_INFO
            - PEOPLE_DISTANCE
            - PERMISSIONS
            - PEOPLE_DETAILS
            - MANAGEMENT_DETAILS
            - PEOPLE_PROFILE_SETTINGS
            - PEOPLE_WITHOUT_MANAGER
            type: string
          type: array
        source:
          description: A string denoting the search surface from which the endpoint
            is called.
          type: string
      type: object
    PeopleResponse:
      example:
        relatedDocuments:
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        results:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        errors:
        - errors
        - errors
      properties:
        results:
          description: "A Person for each ID in the request, each with PersonMetadata\
            \ populated."
          items:
            $ref: '#/components/schemas/Person'
          type: array
        relatedDocuments:
          description: A list of documents related to this people response. This is
            only included if DOCUMENT_ACTIVITY is requested and only 1 person is included
            in the request.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        errors:
          description: A list of IDs that could not be found.
          items:
            type: string
          type: array
    PinRequest:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/PinRequest_allOf'
    Unpin:
      example:
        pinId: 0
        id: id
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be unpinned.
          type: string
    UpdateAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/UpdateAnnouncementRequest_allOf'
    GetPinRequest:
      example:
        pinId: 0
        id: id
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be fetched
          type: string
    GetPinResponse:
      example:
        pin: null
      properties:
        pin:
          $ref: '#/components/schemas/PinDocument'
    ListPinsResponse:
      example:
        pins:
        - null
        - null
      properties:
        pins:
          description: List of pinned documents.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
      required:
      - pins
    EditPinRequest:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/EditPinRequest_allOf'
    SortOptions:
      example:
        orderBy: ASC
        sortBy: sortBy
      properties:
        orderBy:
          enum:
          - ASC
          - DESC
          type: string
        sortBy:
          type: string
      type: object
    ListEntitiesRequest:
      example:
        filter:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        sc: "db.enable_debug=true, db.log_elastic_caller=ENTITY"
        cursor: cursor
        entityType: PEOPLE
        datasource: datasource
        query: query
        pageSize: 100
        includeFields:
        - PEOPLE
        - PEOPLE
        sort:
        - orderBy: ASC
          sortBy: sortBy
        - orderBy: ASC
          sortBy: sortBy
        source: source
      properties:
        filter:
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        sort:
          description: Use EntitiesSortOrder enum for SortOptions.sortBy
          items:
            $ref: '#/components/schemas/SortOptions'
          type: array
        entityType:
          default: PEOPLE
          enum:
          - PEOPLE
          - TEAMS
          - CUSTOM_ENTITIES
          type: string
        datasource:
          description: "The datasource associated with the entity type, most commonly\
            \ used with CUSTOM_ENTITIES"
          type: string
        query:
          description: A query string to search for entities that each entity in the
            response must conform to. An empty query does not filter any entities.
          type: string
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit.\
            \ Requires sufficient permissions."
          example: "db.enable_debug=true, db.log_elastic_caller=ENTITY"
          type: string
        includeFields:
          description: List of entity fields to return (that aren't returned by default)
          items:
            enum:
            - PEOPLE
            - TEAMS
            - PEOPLE_DISTANCE
            - PERMISSIONS
            - FACETS
            - INVITE_INFO
            - LAST_EXTENSION_USE
            - MANAGEMENT_DETAILS
            - UNPROCESSED_TEAMS
            type: string
          type: array
        pageSize:
          description: Hint to the server about how many results to send back. Server
            may return less.
          example: 100
          type: integer
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        source:
          description: A string denoting the search surface from which the endpoint
            is called.
          type: string
      type: object
    EntitiesSortOrder:
      description: Different ways of sorting entities
      enum:
      - ENTITY_NAME
      - FIRST_NAME
      - LAST_NAME
      - ORG_SIZE_COUNT
      - START_DATE
      - TEAM_SIZE
      - RELEVANCE
      type: string
    ListEntitiesResponse:
      example:
        cursor: cursor
        customEntityResults:
        - null
        - null
        teamResults:
        - null
        - null
        hasMoreResults: true
        sortOptions:
        - null
        - null
        totalCount: 0
        results:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        facetResults:
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        customFacetNames:
        - customFacetNames
        - customFacetNames
      properties:
        results:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        teamResults:
          items:
            $ref: '#/components/schemas/Team'
          type: array
        customEntityResults:
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        totalCount:
          description: The total number of entities available
          type: integer
        hasMoreResults:
          description: Whether or not more entities can be fetched.
          type: boolean
        sortOptions:
          description: Sort options from EntitiesSortOrder supported for this response.
            Default is empty list.
          items:
            $ref: '#/components/schemas/EntitiesSortOrder'
          type: array
        customFacetNames:
          description: list of Person attributes that are custom setup by deployment
          items:
            type: string
          type: array
      type: object
    RelatedObject_metadata:
      description: "Additional metadata to help FE show a loading state, while not\
        \ having the actual object"
      properties:
        name:
          description: "placeholder name of the object, not the relationship"
          type: string
      type: object
    Team_allOf:
      properties:
        id:
          description: Unique identifier
          type: string
        name:
          description: Team name
          type: string
        description:
          description: A description of the team
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally
            applies to bigger companies with multiple distinct businesses.
          type: string
        department:
          description: "An organizational unit where everyone has a similar task,\
            \ e.g. `Engineering`."
          type: string
        photoUrl:
          description: A link to the team's photo
          type: string
        bannerUrl:
          description: A link to the team's banner photo
          type: string
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        members:
          description: The members on this team
          items:
            $ref: '#/components/schemas/PersonToTeamRelationship'
          type: array
        memberCount:
          description: "Number of members on this team (recursive; includes all individuals\
            \ that belong to this team, and all individuals that belong to a subteam\
            \ within this team)"
          type: integer
        emails:
          description: The emails for this team
          items:
            $ref: '#/components/schemas/TeamEmail'
          type: array
        datasourceProfiles:
          description: The datasource profiles of the team
          items:
            $ref: '#/components/schemas/DatasourceProfile'
          type: array
        datasource:
          description: "the data source of the team, e.g. GDRIVE"
          type: string
        createdFrom:
          description: "For teams created from docs, the doc title. Otherwise empty."
          type: string
        lastUpdatedAt:
          description: when this team was last updated.
          format: date-time
          type: string
        status:
          default: PROCESSED
          description: whether this team is fully processed or there are still unprocessed
            operations that'll affect it
          enum:
          - PROCESSED
          - QUEUED_FOR_CREATION
          - QUEUED_FOR_DELETION
          type: string
        canBeDeleted:
          default: true
          description: can this team be deleted. Some manually ingested teams like
            GCS_CSV or PUSH_API cannot
          type: boolean
        loggingId:
          description: "The logging id of the team used in scrubbed logs, client analytics,\
            \ and metrics."
          type: string
      required:
      - id
      - name
      type: object
      example: null
    DocumentSpec_oneOf:
      properties:
        url:
          description: The url for document.
          type: string
      required:
      - url
      type: object
    DocumentSpec_oneOf_1:
      properties:
        id:
          description: The id for document.
          type: string
      required:
      - id
      type: object
    DocumentSpec_oneOf_2:
      properties:
        ugcType:
          description: The type of the user generated content (UGC datasource).
          enum:
          - ANNOUNCEMENTS
          - ANSWERS
          - COLLECTIONS
          - SHORTCUTS
          type: string
        contentId:
          description: The id for user generated content.
          type: integer
        docType:
          description: The specific type of the user generated content type.
          type: string
      required:
      - contentId
      - ugcType
      type: object
    CustomEntity_allOf:
      properties:
        id:
          description: Unique identifier.
          type: string
        title:
          description: Title or name of the custom entity.
          type: string
        datasource:
          description: The datasource the custom entity is from.
          type: string
        objectType:
          description: The type of the entity. Interpretation is specific to each
            datasource
          type: string
        metadata:
          $ref: '#/components/schemas/CustomEntityMetadata'
        roles:
          description: A list of user roles for the custom entity explicitly granted
            by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      type: object
      example: null
    StructuredText_allOf:
      properties:
        structuredList:
          description: An array of objects each of which contains either a string
            or a link which optionally corresponds to a document.
          items:
            $ref: '#/components/schemas/StructuredTextItem'
          type: array
      type: object
      example: null
    AnswerBoard_allOf:
      properties:
        id:
          description: The unique ID of the Answer Board.
          type: integer
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        creator:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        itemCount:
          description: The number of items currently in the Answer Board. Separated
            from the actual items so we can grab the count without items.
          type: integer
        roles:
          description: A list of user roles for the Answer Board.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - description
      - id
      type: object
      example: null
    CollectionMutableProperties_allOf:
      properties:
        icon:
          description: The emoji icon of this Collection.
          type: string
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        parentId:
          description: "The parent of this Collection, or 0 if it's a top-level Collection."
          type: integer
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        allowedDatasource:
          description: The datasource type this collection can hold.
          type: string
      required:
      - name
      type: object
      example: null
    Shortcut_allOf:
      properties:
        alias:
          description: canonical link text following go/ prefix where hyphen/underscore
            is removed.
          type: string
        title:
          description: Title for the Go Link
          type: string
        roles:
          description: A list of user roles for the Go Link.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - inputAlias
      type: object
      example: null
    Collection_allOf:
      properties:
        id:
          description: The unique ID of the collection.
          type: integer
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        creator:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        itemCount:
          description: The number of items currently in the Collection. Separated
            from the actual items so we can grab the count without items.
          type: integer
        childCount:
          description: The number of children Collections. Separated from the actual
            children so we can grab the count without children.
          type: integer
        items:
          description: The items in this Collection.
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
        pinMetadata:
          $ref: '#/components/schemas/CollectionPinnedMetadata'
        shortcuts:
          description: The names of the shortcuts (Go Links) that point to this Collection.
          items:
            type: string
          type: array
        children:
          description: The children Collections of this Collection.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        roles:
          description: A list of user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - description
      - id
      type: object
      example: null
    CollectionItem_allOf:
      properties:
        collectionId:
          description: The Collection ID of the Collection that this CollectionItem
            belongs in.
          type: integer
        documentId:
          description: "If this CollectionItem is a Glean-indexed document, the document\
            \ ID of that document."
          type: string
        url:
          description: The URL of this CollectionItem.
          type: string
        itemId:
          description: Unique identifier for the item within the collection it belongs
            to.
          type: string
        createdBy:
          $ref: '#/components/schemas/Person'
        createdAt:
          description: Unix timestamp for when the item was first added (in seconds
            since epoch UTC).
          format: date-time
          type: string
        document:
          $ref: '#/components/schemas/Document'
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        collection:
          $ref: '#/components/schemas/Collection'
        itemType:
          enum:
          - DOCUMENT
          - TEXT
          - URL
          - COLLECTION
          type: string
      required:
      - collectionId
      - itemType
      type: object
      example: null
    Answer_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredText'
        likes:
          $ref: '#/components/schemas/AnswerLikes'
        userRole:
          deprecated: true
          description: DEPRECATED - use roles instead. User's role on the specific
            answer.
          enum:
          - OWNER
          - VIEWER
          - ANSWER_MODERATOR
          type: string
        author:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the answer was created in ISO format (ISO 8601).
          format: date-time
          type: string
        updateTime:
          description: The time the answer was last updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/Person'
        verification:
          $ref: '#/components/schemas/Verification'
        board:
          $ref: '#/components/schemas/AnswerBoard'
        collections:
          description: The collections to which the answer belongs.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        sourceDocument:
          $ref: '#/components/schemas/Document'
      required:
      - id
      type: object
      example: null
    PinDocument_allOf:
      properties:
        id:
          description: The opaque id of the pin.
          type: string
        pinId:
          description: DEPRECATED - Prefer use of `id` string field instead
          type: integer
        documentId:
          description: The document which should be a pinned result.
          type: string
        query:
          description: DEPRECATED - The query string for which the result was generated.
          type: string
        audienceFilters:
          description: Filters which restrict who should see the pinned document.
            Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        attribution:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - documentId
      type: object
      example: null
    SearchRequest_allOf:
      properties:
        query:
          description: The search terms.
          example: vacation policy
          type: string
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        resultTabIds:
          description: The unique IDs of the result tabs for which to fetch results.
            This will have precedence over datasource filters if both are specified
            and in conflict.
          items:
            type: string
          type: array
        inputDetails:
          $ref: '#/components/schemas/SearchRequestInputDetails'
        requestOptions:
          $ref: '#/components/schemas/SearchRequestOptions'
        timeoutMillis:
          description: Timeout in milliseconds for the request. Backend should throw
            a 408 if request takes longer than this.
          example: 5000
          type: integer
        people:
          description: "People associated with the search request. Hints to the server\
            \ to fetch additional information for these people. Note that in this\
            \ request, an email may be used as a person's obfuscatedId value."
          items:
            $ref: '#/components/schemas/Person'
          type: array
        disableSpellcheck:
          description: Whether or not to disable spellcheck.
          type: boolean
      type: object
      example: null
    SearchResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/SearchResponseMetadata'
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
        resultTabs:
          description: All result tabs available for the current query. Populated
            if QUERY_METADATA is specified in the request.
          items:
            $ref: '#/components/schemas/ResultTab'
          type: array
        resultTabIds:
          description: The unique IDs of the result tabs to which this response belongs.
          items:
            type: string
          type: array
        resultsDescription:
          $ref: '#/components/schemas/ResultsDescription'
        rewrittenFacetFilters:
          description: The actual applied facet filters based on the operators and
            facetFilters in the query. Useful for mapping typed operators to visual
            facets.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        cursor:
          description: Cursor that indicates the start of the next page of results.
            To be passed in "more" requests for this query.
          type: string
        hasMoreResults:
          description: Whether more results are available. Use cursor to retrieve
            them.
          type: boolean
      type: object
      example: null
    AutocompleteResponse_allOf:
      example: "{\"trackingToken\":\"trackingToken\"}"
      properties:
        trackingToken:
          description: An opaque token that represents this particular set of autocomplete
            results. To be used for /feedback reporting.
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        results:
          items:
            $ref: '#/components/schemas/AutocompleteResult'
          type: array
        groups:
          description: Subsections of the results list from which distinct sections
            should be created.
          items:
            $ref: '#/components/schemas/AutocompleteResultGroup'
          type: array
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
        backendTimeMillis:
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
          format: int64
          type: integer
      type: object
    CreateAnnouncementRequest_allOf:
      properties:
        data:
          $ref: '#/components/schemas/AnnouncementCreateOrUpdateData'
      required:
      - endTime
      - startTime
      - title
      type: object
      example: null
    Announcement_allOf_viewerInfo:
      properties:
        isDismissed:
          description: Whether the viewer has dismissed the announcement.
          type: boolean
        isRead:
          description: Whether the viewer has read the announcement.
          type: boolean
        userActivity:
          deprecated: true
          description: "A list of actions the viewer has taken on the announcement\
            \ (e.g. view, dismiss)."
          items:
            $ref: '#/components/schemas/UserActivity'
          type: array
      type: object
      example: null
    Announcement_allOf:
      properties:
        id:
          description: The opaque id of the announcement.
          type: integer
        author:
          $ref: '#/components/schemas/Person'
        createTimestamp:
          description: Server Unix timestamp of the creation time (in seconds since
            epoch UTC).
          type: integer
        lastUpdateTimestamp:
          description: Server Unix timestamp of the last update time (in seconds since
            epoch UTC).
          type: integer
        updatedBy:
          $ref: '#/components/schemas/Person'
        viewerInfo:
          $ref: '#/components/schemas/Announcement_allOf_viewerInfo'
        sourceDocument:
          $ref: '#/components/schemas/Document'
        isPublished:
          description: Whether or not the announcement is published.
          type: boolean
      type: object
      example: null
    AnswerCreationData_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredTextMutableProperties'
      type: object
      example: null
    EditAnswerRequest_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredTextMutableProperties'
      required:
      - id
      type: object
      example: null
    CreateCollectionRequest_allOf:
      properties:
        newNextItemId:
          description: "The (optional) ItemId of the next CollectionItem in sequence.\
            \ If omitted, will be added to the end of the Collection. Only used if\
            \ parentId is specified."
          type: string
      type: object
      example: null
    CreateCollectionResponse_allOf:
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        error:
          $ref: '#/components/schemas/CollectionError'
      type: object
      example: null
    PinRequest_allOf:
      properties:
        documentId:
          description: The document to be pinned.
          type: string
      type: object
      example: null
    UpdateAnnouncementRequest_allOf:
      properties:
        id:
          description: The opaque id of the announcement.
          type: integer
        data:
          $ref: '#/components/schemas/AnnouncementCreateOrUpdateData'
      required:
      - endTime
      - id
      - startTime
      - title
      type: object
      example: null
    EditPinRequest_allOf:
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be edited
          type: string
      type: object
      example: null
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
