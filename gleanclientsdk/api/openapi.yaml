openapi: 3.0.0
info:
  contact:
    email: support@glean.com
  description: |
    # Introduction
    These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for
    implementing a custom client to the Glean system.

    # Usage guidelines
    A subset of these endpoints are also in the developer ready section, which is available for public use.
    The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com
    if you would like to use an API that is not currently available in the developer ready section.
  title: Glean Client API - Platform Preview
  version: 0.9.0
servers:
- url: "https://{domain}-be.glean.com/api/v1"
  variables:
    domain:
      default: domain
      description: Email domain (without extension) that determines the deployment
        backend.
security:
- actAsBearerToken: []
- cookieAuth: []
tags:
- description: Report user activity to improve search quality.
  name: Activity
- description: "Create, read, update, and delete announcements."
  name: Announcements
- description: "Create, read, update, and delete answers."
  name: Answers
- description: Group answers into answer boards.
  name: Answer Boards
- description: Authenticating users and token management.
  name: Authentication
- description: Group documents into collections.
  name: Collections
- description: Displayable List card platform.
  name: Displayable Lists
- description: Proxy for requesting documents from a customer's server.
  name: External Document Proxy
- description: "Upload, get images."
  name: Images
- description: Usage insights for privileged users.
  name: Insights
- description: Manage user permissions for specific features
  name: Permissions
- description: Pin and star search results.
  name: Pins
- description: "Search, autocomplete and metadata retrieval."
  name: Search
- description: "Create, read, update, and delete shortcuts."
  name: Shortcuts
- description: "User settings, configuration, invitation, etc."
  name: User
- description: Document verification status and update.
  name: Verification
paths:
  /activity:
    post:
      description: "Reporting for any events that happen outside of the client UI,\
        \ such as enterprise app usage."
      operationId: activity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
        x-exportParamName: Activity
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Report activity of enterprise app usage
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /ca:
    post:
      description: "Reporting for events that happen within the client UI, such as\
        \ result views and clicks and impressions for product usage."
      operationId: ca
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAnalyticsRequest'
        x-exportParamName: CA
      responses:
        "200":
          description: OK
        "202":
          description: Accepted.
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: "Report client events such as clicks, views, impressions or any other\
        \ product interactions."
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /custom_feedback:
    post:
      description: "Reporting from customers, usually for bugs or search quality"
      operationId: customfeedback
      requestBody:
        content:
          application/json:
            example:
              arbitrary: jsonData
              for: myCompany
              comment: Glean is awesome!
            schema: {}
        description: Arbitrary customer-defined JSON
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request. Handler for custom feedback may not have been
            implemented.
        "401":
          description: Not Authorized
      summary: Reports arbitrary customer-defined feedback
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /feedback:
    post:
      description: "Reporting for events that happen within the client UI, such as\
        \ result views and clicks."
      operationId: feedback
      parameters:
      - description: A URL encoded versions of Feedback. This is useful for requests.
        explode: true
        in: query
        name: feedback
        required: false
        schema:
          type: string
        style: form
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
        x-exportParamName: Feedback
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Report user events such as clicks or views
      tags:
      - Activity
      x-codegen-request-body-name: payload
  /createannouncement:
    post:
      description: Creates a textual announcement visible to some set of users based
        on department and location.
      operationId: createannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnnouncementRequest'
        description: Announcement content
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /createdraftannouncement:
    post:
      description: Creates a draft of a textual announcement visible to some set of
        users based on department and location.
      operationId: createdraftannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftAnnouncementRequest'
        description: Draft announcement content
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create a draft announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /deleteannouncement:
    post:
      description: Deletes an existing user-generated announcement.
      operationId: deleteannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnnouncementRequest'
        description: Delete announcement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /deletedraftannouncement:
    post:
      description: Deletes an existing user-generated draft announcement.
      operationId: deletedraftannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnnouncementRequest'
        description: Delete draft announcement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete draft announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /getannouncement:
    post:
      description: Gets a announcement given its ID.
      operationId: getannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnnouncementRequest'
        description: GetAnnouncement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnnouncementResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read announcement details.
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /getdraftannouncement:
    post:
      description: Gets an existing user-generated draft announcement.
      operationId: getdraftannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnnouncementRequest'
        description: Get draft announcement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDraftAnnouncementResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Get draft announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /listannouncements:
    post:
      description: Returns the information to be rendered in announcements dashboard.
        Includes information for each annoucement asked.
      operationId: listannouncements
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnnouncementsRequest'
        description: Includes request params for querying announcements.
        required: true
        x-exportParamName: ListAnnouncementsRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnnouncementsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List announcements
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /previewannouncement:
    post:
      description: Generates a preview for a user-generated announcement from structured
        text.
      operationId: previewannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewStructuredTextRequest'
        description: preview structured text request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewStructuredTextResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Preview announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /previewannouncementdraft:
    post:
      description: Generates a preview for a user-generated announcement from a draft.
      operationId: previewannouncementdraft
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewUgcRequest'
        description: preview announcement request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewUgcResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Preview announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /publishdraftannouncement:
    post:
      description: Promotes a draft announcement to be visible to others.
      operationId: publishdraftannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishDraftAnnouncementRequest'
        description: Publish draft announcement content.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Publish a draft announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /unpublishannouncement:
    post:
      description: Unpublishes an announcement and hides it from users
      operationId: unpublishannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnpublishAnnouncementRequest'
        description: Unpublish announcement content.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Unpublishes an announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /updateannouncement:
    post:
      description: Updates a textual announcement visible to some set of users based
        on department and location.
      operationId: updateannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnnouncementRequest'
        description: Announcement content. Id need to be specified for the announcement.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /updatedraftannouncement:
    post:
      description: Updates a textual announcement visible to some set of users based
        on department and location.
      operationId: updatedraftannouncement
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDraftAnnouncementRequest'
        description: Draft announcement content. DraftId needs to be specified.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update draft announcement
      tags:
      - Announcements
      x-codegen-request-body-name: payload
  /createanswer:
    post:
      description: Creates a user-generated answer that contains a question and answer.
      operationId: createanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnswerRequest'
        description: CreateAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /deleteanswer:
    post:
      description: Deletes an existing user-generated answer.
      operationId: deleteanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnswerRequest'
        description: DeleteAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /editanswer:
    post:
      description: Edits an existing user-generated answer.
      operationId: editanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswerRequest'
        description: EditAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /getanswer:
    post:
      description: Gets a particular answer given its ID.
      operationId: getanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnswerRequest'
        description: GetAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnswerResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read answer details
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /listanswers:
    post:
      description: Lists answers created by the authed user.
      operationId: listanswers
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnswersRequest'
        description: ListAnswers request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnswersResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List answers created by the authed user
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /previewanswer:
    post:
      description: Creates a user-generated answer that contains a question and answer.
      operationId: previewanswer
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewStructuredTextRequest'
        description: PreviewAnswer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewStructuredTextResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Preview answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /previewanswerdraft:
    post:
      description: Generates a preview for a user-generated answer from a draft.
      operationId: previewanswerdraft
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewUgcRequest'
        description: preview answer request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewUgcResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Preview Answer
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /updateanswerlikes:
    post:
      description: Updates the likes for an existing user-generated answer. Examples
        are liking or unliking the answer.
      operationId: updateanswerlikes
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnswerLikesRequest'
        description: UpdateAnswerLikes request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAnswerLikesResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update answer likes
      tags:
      - Answers
      x-codegen-request-body-name: payload
  /createanswerboard:
    post:
      description: Creates a board of answers.
      operationId: createanswerboard
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnswerBoardRequest'
        description: Answer Board content plus any additional metadata for the request.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAnswerBoardResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create an Answer Board
      tags:
      - Answer Boards
      x-codegen-request-body-name: payload
  /deleteanswerboards:
    post:
      description: Deletes an Answer Board given the Answer Board's ID. Multi-delete
        is not currently supported.
      operationId: deleteanswerboards
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAnswerBoardsRequest'
        description: DeleteAnswerBoards request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAnswerBoardsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete an Answer Board
      tags:
      - Answer Boards
      x-codegen-request-body-name: payload
  /editanswerboard:
    post:
      description: Modifies the properties of an existing Answer Board.
      operationId: editanswerboard
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAnswerBoardRequest'
        description: Answer Board content plus any additional metadata for the request.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditAnswerBoardResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit an Answer Board
      tags:
      - Answer Boards
      x-codegen-request-body-name: payload
  /getanswerboard:
    post:
      description: "Gets an Answer Board given its ID. Does not fetch items in this\
        \ Answer Board, use /listanswers instead."
      operationId: getanswerboard
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAnswerBoardRequest'
        description: GetAnswerBoard request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAnswerBoardResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: "Read Answer Board details, except the Answers in this Answer Board."
      tags:
      - Answer Boards
      x-codegen-request-body-name: payload
  /listanswerboards:
    post:
      description: Lists all existing Answer Boards
      operationId: listanswerboards
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAnswerBoardsRequest'
        description: ListAnswerBoards request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnswerBoardsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List Answer Boards
      tags:
      - Answer Boards
      x-codegen-request-body-name: payload
  /checkactasauth:
    post:
      description: Check if the client's actas auth token is valid
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckActasAuthResponse'
          description: OK
      summary: Check authentication status
      tags:
      - Authentication
  /checkauth:
    post:
      description: Check if the client's auth cookie is valid
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAuthResponse'
          description: OK
      summary: Check authentication status
      tags:
      - Authentication
  /createanonymoustoken:
    post:
      description: Creates an authentication token for an anonymous user of external
        search
      operationId: createanonymoustoken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthTokenResponse'
          description: OK
        "400":
          description: Invalid Request
        "403":
          description: Forbidden. This can be returned if external search for anonymous
            users is not enabled.
      summary: Creates an authentication token for an anonymous user of external search
      tags:
      - Authentication
  /createauthtoken:
    post:
      description: Creates an authentication token for the authenticated user
      operationId: createauthtoken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthTokenResponse'
          description: OK
        "400":
          description: Invalid Request
        "401":
          description: Not Authorized
      summary: Creates an authentication token for authenticated user
      tags:
      - Authentication
  /addcollectionitems:
    post:
      description: Add items to a Collection.
      operationId: addcollectionitems
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollectionItemsRequest'
        description: Data describing the add operation.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCollectionItemsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Add items to a Collection.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /createcollection:
    post:
      description: Creates a publicly visible (empty) collection of documents.
      operationId: createcollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
        description: Collection content plus any additional metadata for the request.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCollectionResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionError'
          description: Semantic error
      summary: Create a collection
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /deletecollection:
    post:
      description: Deletes a collection given the collection's ID.
      operationId: deletecollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCollectionRequest'
        description: DeleteCollection request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionError'
          description: Semantic error
      summary: Delete a collection
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /deletecollectionitem:
    post:
      description: Delete a single item from a Collection.
      operationId: deletecollectionitem
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCollectionItemRequest'
        description: Data describing the delete operation.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCollectionItemResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          description: Failed to save deletion
      summary: Delete a single item from a Collection.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /editcollection:
    post:
      description: Modifies the properties of an existing collection.
      operationId: editcollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCollectionRequest'
        description: Collection content plus any additional metadata for the request.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditCollectionResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionError'
          description: Semantic error
      summary: Edit a collection
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /editcollectionitem:
    post:
      description: "Edit the url, documentId, description of an item within a Collection\
        \ given its ID."
      operationId: editcollectionitem
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCollectionItemRequest'
        description: Edit Collection Items request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditCollectionItemResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit an item in a Collection.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /editdocumentcollections:
    post:
      description: Edit the collections that a document belongs to.
      operationId: editdocumentcollections
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDocumentCollectionsRequest'
        description: Data describing the edit operation.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditDocumentCollectionsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit document collections.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /getcollection:
    post:
      description: Gets a collection given its ID. Does not fetch items in this Collection.
      operationId: getcollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCollectionRequest'
        description: GetCollection request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollectionResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: "Read collection details, except the items in this Collection."
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /listcollections:
    post:
      description: Lists all existing collections
      operationId: listcollections
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCollectionsRequest'
        description: ListCollections request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List collections
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /movecollectionitem:
    post:
      description: Move a CollectionItem below another CollectionItem.
      operationId: movecollectionitem
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveCollectionItemRequest'
        description: MoveCollectionItems request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveCollectionItemResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "422":
          description: Failed to save modifications
      summary: Change the order of CollecitonItems in a Collection.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /pincollection:
    post:
      description: "Given the collection id and category, pins the collection for\
        \ all company users in NTP."
      operationId: pincollection
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinCollectionRequest'
        description: PinCollection request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCollectionResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Pins collection to NTP for the given category.
      tags:
      - Collections
      x-codegen-request-body-name: payload
  /createdisplayablelists:
    post:
      description: Create displayable list configurations by provided ids
      operationId: createdisplayablelists
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDisplayableListsRequest'
        description: Create new displayable lists
        required: true
        x-exportParamName: Update
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDisplayableListsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from creating displayable list configs
      summary: Create new displayable lists
      tags:
      - Displayable Lists
      x-codegen-request-body-name: payload
  /deletedisplayablelists:
    post:
      description: Delete displayable list configurations by provided ids
      operationId: deletedisplayablelists
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDisplayableListsRequest'
        description: Updated version of the displayable list configs.
        required: true
        x-exportParamName: Update
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from deleting displayable list configs
      summary: Delete displayable lists
      tags:
      - Displayable Lists
      x-codegen-request-body-name: payload
  /getdisplayablelists:
    post:
      description: Get displayable lists configurations by provided ids
      operationId: getdisplayablelists
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDisplayableListsRequest'
        required: true
        x-exportParamName: Get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDisplayableListsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from seeing configs
      summary: Get displayable lists
      tags:
      - Displayable Lists
      x-codegen-request-body-name: payload
  /updatedisplayablelists:
    post:
      description: Update displayable list configurations with all fields from request
        fields
      operationId: updatedisplayablelists
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDisplayableListsRequest'
        description: Updated version of the displayable list configs.
        required: true
        x-exportParamName: Update
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDisplayableListsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from updating displayable list configs
      summary: Update displayable lists
      tags:
      - Displayable Lists
      x-codegen-request-body-name: payload
  /images:
    get:
      description: "Serves images of various types (profile pic, background, UGC thumnail/content,\
        \ etc)."
      operationId: images
      parameters:
      - description: "Primary key for the image being asked. The key is returned by\
          \ the API when an image is uploaded. If key is used, other parameters should\
          \ not be used."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: The type of image requested. Supported values are listed in ImageMetadata.type
          enum.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ImageType'
        style: form
      - description: "ID, if a specific entity/type is requested. The id may have\
          \ different meaning for each type. for user, it is user id, for UGC, it\
          \ is the id of the content, and so on."
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: A specific datasource for which an image is requested for. The
          ds may have different meaning for each type and can also be empty for some.
        explode: true
        in: query
        name: ds
        required: false
        schema:
          type: string
        style: form
      - description: Content id to differentitate multiple images that can have the
          same type and datasource e.g. thumnail or image from content of UGC. It
          can also be empty.
        explode: true
        in: query
        name: cid
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            image/*:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Get images
      tags:
      - Images
      x-codegen-request-body-name: payload
  /uploadimage:
    post:
      description: "Uploads images for various types (profile pic, background, UGC\
        \ thumnail/content, etc) with additional metadata."
      operationId: uploadimage
      parameters:
      - description: The type of image requested. Supported values are listed in ImageMetadata.type
          enum.
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ImageType'
        style: form
      - description: "ID, if a specific entity/type is requested. The id may have\
          \ different meaning for each type. For USER, it is user id For UGC, it is\
          \ the id of the content For ICON, the doctype."
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: "A specific datasource for which an image is requested for. The\
          \ ds may have different meaning for each type and can also be empty for\
          \ some. For USER, it is empty or datasource the icon is asked for. For UGC,\
          \ it is the UGC datasource. For ICON, it is datasource instance the icon\
          \ is asked for."
        explode: true
        in: query
        name: ds
        required: false
        schema:
          type: string
        style: form
      - description: Content id to differentitate multiple images that can have the
          same type and datasource e.g. thumnail or image from content of UGC. It
          can also be empty.
        explode: true
        in: query
        name: cid
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          image/*:
            schema:
              format: binary
              type: string
        description: "Content and metadata for the image. Content is in post body,\
          \ metada is in url."
        required: true
        x-exportParamName: UploadImage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadImageResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: upload images
      tags:
      - Images
      x-codegen-request-body-name: payload
  /insights:
    post:
      description: "Returns the information to be rendered in insights dashboards.\
        \ Includes information for each user, query, content in aggregations."
      operationId: insights
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsightsRequest'
        description: Includes request params for insights dashboard data.
        required: true
        x-exportParamName: InsightsRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read insights
      tags:
      - Insights
      x-codegen-request-body-name: payload
  /editpermissions:
    post:
      description: Modifies the permissions for a given user
      operationId: editpermissions
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPermissionsRequest'
        description: Permissions
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditPermissionsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not authorized
      summary: Edit permissions
      tags:
      - Permissions
      x-codegen-request-body-name: payload
  /editpin:
    post:
      description: Edit an existing user-generated pin.
      operationId: editpin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditPinRequest'
        description: Edit pins request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinDocument'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit a pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /getpin:
    post:
      description: Gets a pin given its ID.
      operationId: getpin
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPinRequest'
        description: Get pin request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPinResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read pin details.
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /listpins:
    post:
      description: Lists all pins.
      operationId: listpins
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: List pins request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPinsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List all pins.
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /pin:
    post:
      description: Pin a document as a result for a given search query.Pin results
        that are known to be a good match.
      operationId: pin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
        description: Details about the document and query for the pin.
        required: true
        x-exportParamName: PinDocument
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinDocument'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /unpin:
    post:
      description: Unpin a previously pinned result.
      operationId: unpin
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unpin'
        description: Details about the pin being unpinned.
        required: true
        x-exportParamName: Unpin
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden from unpinning someone else's pin
      summary: Delete pin
      tags:
      - Pins
      x-codegen-request-body-name: payload
  /adminsearch:
    post:
      description: Retrieves results for search query without respect for permissions.
        This is available only to privileged users.
      operationId: adminsearch
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Admin search request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Invalid Query
      summary: Search the index (admin)
      tags:
      - Search
      x-codegen-request-body-name: payload
  /ask:
    post:
      description: Classify as information-seeking and return high-confidence results.
      operationId: ask
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AskRequest'
        description: Ask request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AskResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Invalid Query
      summary: Detect and answer question
      tags:
      - Search
      x-codegen-request-body-name: payload
  /autocomplete:
    post:
      description: "Retrieves query suggestions, operators and documents for the given\
        \ partially typed query."
      operationId: autocomplete
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutocompleteRequest'
        description: Autocomplete request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutocompleteResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Autocomplete a query
      tags:
      - Search
      x-codegen-request-body-name: payload
  /createcustomentity:
    post:
      description: Creates new custom entity and store into UserGeneratedEntityStore.
      operationId: createcustomentity
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomEntityRequest'
        description: New custom entity to be created with user permissions.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntity'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create custom entity
      tags:
      - Search
      x-codegen-request-body-name: payload
  /createteams:
    post:
      description: Creates the given teams
      operationId: createteams
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamsRequest'
        description: Teams to be created
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create team
      tags:
      - Search
      x-codegen-request-body-name: payload
  /customentities:
    post:
      description: Retrieves custom entity details for given ids
      operationId: customentities
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEntitiesRequest'
        description: Custom entities request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntitiesResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read details for one or more custom entities
      tags:
      - Search
      x-codegen-request-body-name: payload
  /deletecustomentity:
    post:
      description: Deletes an existing user generated custom entity.
      operationId: deletecustomentity
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomEntityRequest'
        description: DeleteCustomEntity request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete custom entity
      tags:
      - Search
      x-codegen-request-body-name: payload
  /deletequeryhistory:
    post:
      description: Remove one or more queries from a user's query history.
      operationId: deletequeryhistory
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteQueryHistoryRequest'
        description: Delete query history request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteQueryHistoryResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Remove queries from query history.
      tags:
      - Search
      x-codegen-request-body-name: payload
  /deleteteams:
    post:
      description: Deletes the given teams
      operationId: deleteteams
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTeamsRequest'
        description: Teams to be deleted
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete team
      tags:
      - Search
      x-codegen-request-body-name: payload
  /documentmetadata:
    post:
      description: Returns the document metadata (with specified fields populated)
        for the ids specified in the request
      operationId: documentmetadata
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadataRequest'
        description: Document metadata request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentMetadataResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Forbidden
      summary: Read document details
      tags:
      - Search
      x-codegen-request-body-name: payload
  /editcustomentity:
    post:
      description: Edit custom entity and store into UserGeneratedEntityStore.
      operationId: editcustomentity
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCustomEntityRequest'
        description: Custom entity to be edited with user permissions.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEntity'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Edit custom entity
      tags:
      - Search
      x-codegen-request-body-name: payload
  /feed:
    post:
      description: "The personalized feed/home includes different types of contents\
        \ including suggestions, recents, calendar events and many more."
      operationId: feed
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedRequest'
        description: "Includes request params, client data and more for making user's\
          \ feed."
        required: true
        x-exportParamName: FeedRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Suggest a feed of documents and events
      tags:
      - Search
      x-codegen-request-body-name: payload
  /getdocuments:
    post:
      description: Returns the documents including metadata (does not include enhanced
        metadata via /documentmetadata) for the given list of id/url specified in
        the request
      operationId: getdocuments
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentsRequest'
        description: Information about documents requested.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: "Documents does not exist, or user cannot access documents."
      summary: Read document details for a list of document ids and/or urls.
      tags:
      - Search
      x-codegen-request-body-name: payload
  /getdocumentanalytics:
    post:
      description: Returns the document analytics information for the given list of
        id/url specified in the request
      operationId: getdocumentanalytics
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentAnalyticsRequest'
        description: Information about analytics requested.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDocumentAnalyticsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read document analytics for a list of document ids and/or urls.
      tags:
      - Search
      x-codegen-request-body-name: payload
  /getevents:
    post:
      description: Gets detailed information about events that might not be present
        in the feed request.
      operationId: getevents
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventsRequest'
        description: GetEvents request
        required: true
        x-exportParamName: GetEventsRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read event details
      tags:
      - Search
      x-codegen-request-body-name: payload
  /getgeneratedqna:
    post:
      description: "Get a generated qna result, if any, corresponding to an opaque\
        \ cursor."
      operationId: getgeneratedqna
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGeneratedQnaRequest'
        description: Includes request params such as the cursor for the generated
          qna.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGeneratedQnaResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Get generated qna.
      tags:
      - Search
      x-codegen-request-body-name: payload
  /listentities:
    post:
      description: "Retrieves some set of details for all entities that fit the given\
        \ criteria and return in the requested order. Does not support negation in\
        \ filters, assumes relation type EQUALS."
      operationId: listentities
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListEntitiesRequest'
        description: List people request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEntitiesResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List entities
      tags:
      - Search
      x-codegen-request-body-name: payload
  /messages:
    post:
      description: Retrieves list of messages from messaging/chat datasources like
        slack.
      operationId: messages
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagesRequest'
        description: Includes request params such as the id for channel/message and
          direction.
        required: true
        x-exportParamName: MessagesRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read messages
      tags:
      - Search
      x-codegen-request-body-name: payload
  /people:
    post:
      description: Retrieves people details for given ids
      operationId: people
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleRequest'
        description: People request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read people details
      tags:
      - Search
      x-codegen-request-body-name: payload
  /peoplesuggest:
    post:
      description: Retrieves a list of suggested people for given type. Includes information
        about the persons.
      operationId: peoplesuggest
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PeopleSuggestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleSuggestResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Suggest people
      tags:
      - Search
      x-codegen-request-body-name: payload
  /peoplesuggestadmin:
    post:
      description: Returns a list of suggested people for given type for admin's view.
        Includes information about the persons.
      operationId: peoplesuggestadmin
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/PeopleSuggestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleSuggestResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Suggest people (admin)
      tags:
      - Search
      x-codegen-request-body-name: payload
  /recommendations:
    post:
      description: Retrieves recommendations for the URL specified
      operationId: recommendations
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationsRequest'
        description: Recommendations request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationsResponse'
          description: OK
        "202":
          description: Accepted. The Retry-After header has a hint about when the
            response will be available
        "204":
          description: There are no recommendations for this URL
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: Document does not exist or user cannot access document
      summary: Recommend related results
      tags:
      - Search
      x-codegen-request-body-name: payload
  /savestructuredresult:
    post:
      description: "Saves structured result as entity into UserGeneratedEntityStore,\
        \ on retrieval merged with ProcessedEntity."
      operationId: savestructuredresult
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructuredResult'
        description: structured result to be converted to entity.
        required: true
        x-exportParamName: StructuredResult
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update entity
      tags:
      - Search
      x-codegen-request-body-name: payload
  /search:
    post:
      description: Retrieves results for the query
      operationId: search
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Search request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
          description: Invalid Query
      summary: Search the index
      tags:
      - Search
      x-codegen-request-body-name: payload
  /summarize:
    post:
      description: Get a summary of the requested documents.
      operationId: summary
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SummarizeRequest'
        description: Includes request params such as the query and specs of the documents
          to summarize.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummarizeResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Get AI generated summary
      tags:
      - Search
      x-codegen-request-body-name: payload
  /teams:
    post:
      description: Retrieves team details for given ids
      operationId: teams
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamsRequest'
        description: Teams request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read team details
      tags:
      - Search
      x-codegen-request-body-name: payload
  /createshortcut:
    post:
      description: Creates a user-generated shortcut that contains a alias and destination
        url.
      operationId: createshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShortcutRequest'
        description: CreateShortcut request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateShortcutResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create shortcut
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /deleteshortcut:
    post:
      description: Deletes an existing user-generated shortcut.
      operationId: deleteshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteShortcutRequest'
        description: DeleteShortcut request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete shortcut
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /getshortcut:
    post:
      description: Gets a particular shortcut given its id.
      operationId: getshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetShortcutRequest'
        description: GetShortcut request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShortcutResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Read shortcut details
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /getsimilarshortcuts:
    post:
      description: Gets shortcuts with similar aliases to a given alias.
      operationId: getsimilarshortcuts
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSimilarShortcutsRequest'
        description: GetSimilarShortcuts request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSimilarShortcutsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Gets similar alias shortcuts.
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /listshortcuts:
    post:
      description: Lists shortcuts editable/owned by the authed user.
      operationId: listshortcuts
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShortcutsResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List shortcuts editable/owned by the authed user.
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /listshortcutspaginated:
    post:
      description: Lists shortcuts with offset pagination.
      operationId: listshortcutspaginated
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListShortcutsPaginatedRequest'
        description: "Filters, sorters, paging params required for pagination"
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShortcutsPaginatedResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List shortcuts with pagination.
      tags:
      - Shortcuts
      x-internal: true
      x-codegen-request-body-name: payload
  /previewshortcut:
    post:
      description: Previews a shortcut that contains a alias and destination url.
      operationId: previewshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortcutMutableProperties'
        description: CreateShortcut request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewShortcutResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Preview shortcut
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /updateshortcut:
    post:
      description: Updates shortcut.
      operationId: updateshortcut
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShortcutRequest'
        description: Shortcut content. Id need to be specified for the shortcut.
        required: true
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateShortcutResponse'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update shortcut
      tags:
      - Shortcuts
      x-codegen-request-body-name: payload
  /addcredential:
    post:
      description: "API to save a user's credentials. Used for Confluence restricted\
        \ pages and Tableau per-user auth, for example"
      operationId: addcredential
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCredentialRequest'
        description: Credential content
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Create credentials
      tags:
      - User
      x-codegen-request-body-name: payload
  /config:
    post:
      description: "Retrieves configuration information such as the intended display\
        \ of results, settings, etc."
      operationId: config
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigRequest'
        description: Config request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: OK
        "401":
          description: Not Authorized
      summary: Read client configuration
      tags:
      - User
      x-codegen-request-body-name: payload
  /invite:
    post:
      description: Invites people to Glean via email
      operationId: invite
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
        description: Invite request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Send email invitation
      tags:
      - User
      x-codegen-request-body-name: payload
  /listusersettings:
    post:
      description: Returns the complete list of user settings for the requestor.
      operationId: listusersettings
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "501":
          description: not implemented
      summary: Read user settings
      tags:
      - User
      x-codegen-request-body-name: payload
  /publicclientconfig:
    post:
      description: "Retrieves configuration information such as the company name,\
        \ logo and etc that is public and is not considered as PII."
      operationId: publicconfig
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicConfigRequest'
        description: Public Config request
        x-exportParamName: Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientConfig'
          description: OK
        "401":
          description: Not Authorized
      summary: "Reads the client configuration that is public, no PII."
      tags:
      - User
      x-codegen-request-body-name: payload
  /removecredential:
    post:
      description: "API to remove a user's credentials. Used for Confluence restricted\
        \ pages and Tableau per-user auth, for example"
      operationId: removecredential
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCredentialRequest'
        description: Credential content
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Delete credentials
      tags:
      - User
      x-codegen-request-body-name: payload
  /saveusersettings:
    post:
      description: "Saves the user settings included in the payload, can be partial,\
        \ does not need to be all settings."
      operationId: saveusersettings
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
        description: Set of user settings.
        required: true
        x-exportParamName: UserSettings
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Update user settings
      tags:
      - User
      x-codegen-request-body-name: payload
  /support:
    post:
      description: Sends a support email based on a template to the Glean support
        team
      operationId: support_email
      parameters:
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
        description: Support request
        required: true
        x-exportParamName: Request
      responses:
        "200":
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: Send support email to Glean support team
      tags:
      - User
      x-codegen-request-body-name: payload
  /addverificationreminder:
    post:
      description: Creates a verification reminder for the document. Users can create
        verification reminders from different product surfaces.
      operationId: addverificationreminder
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReminderRequest'
        description: Details about the reminder.
        required: true
        x-exportParamName: ReminderRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: "Document does not exist, does not support verification or\
            \ user cannot access document"
      summary: Create verification reminder
      tags:
      - Verification
      x-codegen-request-body-name: payload
  /listverifications:
    post:
      description: Returns the information to be rendered in verification dashboard.
        Includes information for each document owned by user regarding their verifications.
      operationId: listverifications
      parameters:
      - description: Maximum number of documents to return
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Email of another user to act as for debugging purposes. Requires
          sufficient permissions.
        explode: true
        in: query
        name: actas
        required: false
        schema:
          type: string
        style: form
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationFeed'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
      summary: List verifications
      tags:
      - Verification
      x-codegen-request-body-name: payload
  /verify:
    post:
      description: Verify documents to keep the knowledge up to date within customer
        corpus.
      operationId: verify
      parameters:
      - description: The version of the client making the request.
        explode: true
        in: query
        name: clientVersion
        required: false
        schema:
          type: string
        style: form
      - description: "The domain of the top-level page in which the client is being\
          \ run. For embedded search and NSR, it will be the domain of the embedding\
          \ page. For sidebar, it will be the domain of the embedding page if it's\
          \ a recognized workplace app. For NTP and app.glean.com requests, it will\
          \ be empty."
        explode: true
        in: query
        name: domain
        required: false
        schema:
          type: string
        style: form
      - description: List of experiment ids to force for incoming request.
        explode: false
        in: query
        name: eids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
        description: Details about the verification request.
        required: true
        x-exportParamName: VerifyRequest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Verification'
          description: OK
        "400":
          description: Invalid request
        "401":
          description: Not Authorized
        "403":
          description: "Document does not exist, does not support verification or\
            \ user cannot access document"
      summary: Update verification
      tags:
      - Verification
      x-codegen-request-body-name: payload
components:
  parameters:
    clientVersion:
      description: The version of the client making the request.
      explode: true
      in: query
      name: clientVersion
      required: false
      schema:
        type: string
      style: form
    domain:
      description: "The domain of the top-level page in which the client is being\
        \ run. For embedded search and NSR, it will be the domain of the embedding\
        \ page. For sidebar, it will be the domain of the embedding page if it's a\
        \ recognized workplace app. For NTP and app.glean.com requests, it will be\
        \ empty."
      explode: true
      in: query
      name: domain
      required: false
      schema:
        type: string
      style: form
    eids:
      description: List of experiment ids to force for incoming request.
      explode: false
      in: query
      name: eids
      required: false
      schema:
        items:
          format: int64
          type: integer
        type: array
      style: simple
    actas:
      description: Email of another user to act as for debugging purposes. Requires
        sufficient permissions.
      explode: true
      in: query
      name: actas
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    PeopleSuggestRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleSuggestRequest'
      description: Includes request params for type of suggestions.
      required: true
      x-exportParamName: PeopleSuggestRequest
  schemas:
    ProfileSettingsKey:
      enum:
      - ENABLE_RELATED_PEOPLE_WIDGET
      - ENABLE_RECENT_ACTIVITY_WIDGET
      - ENABLE_WORKED_TOGETHER_ON_WIDGET
      - ENABLE_CALENDAR_WIDGET
      type: string
    FeatureVisibilityKey:
      enum:
      - ENABLED
      - DISABLED
      - UNLISTED
      type: string
    CelebrationBadgeKeyEnum:
      description: The set of possible keys for Glean people celebration badges
      enum:
      - new_hire
      - anniversary
      type: string
    ReadPermission:
      description: Describes the read permission level that a user has for a specific
        feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    GrantPermission:
      description: Describes the grant permission level that a user has for a specific
        feature
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    Datasource:
      description: |
        A datasource. Idea: only place fields that belong to a datasource and not any of its particular instances here.
      properties:
        id:
          description: "The required id of the datasource. Example: zendesk"
          example: zendesk
          type: string
        capabilities:
          description: "The functionality provided by the datasource, such as providing\
            \ searchable content or SSO access."
          items:
            $ref: '#/components/schemas/DatasourceCapability'
          type: array
    DeleteCollectionResponse:
      properties:
        error:
          $ref: '#/components/schemas/CollectionError'
    CustomDatasourceConfig:
      allOf:
      - $ref: '#/components/schemas/SharedDatasourceConfigNoInstance'
      - $ref: '#/components/schemas/CustomDatasourceConfig_allOf'
      description: Structure describing config properties of a custom datasource
    SharedDatasourceConfigList:
      description: List of datasource configurations.
      properties:
        datasourceConfig:
          description: Datasource configuration.
          items:
            $ref: '#/components/schemas/SharedDatasourceConfig'
          type: array
      required:
      - datasourceConfig
    PermissionedFeatureOrObject:
      description: A feature or object type with restricted access
      enum:
      - ADMIN_SEARCH
      - ANNOUNCEMENTS
      - ANSWERS
      - COLLECTIONS
      - COLLECTION_ITEMS
      - INSIGHTS_COLLECTIONS
      - INSIGHTS_CONTENT
      - INSIGHTS_INVITE
      - INSIGHTS_SEARCHES
      - INSIGHTS_TEAMMATES
      - PINS
      - SENSITIVE_CONTENT_REPORTS
      - SHORTCUTS
      - TEAMS
      - VERIFICATIONS
      - WORKSPACE_APPS
      - WORKSPACE_PERMISSIONS
      type: string
    SearchRequestGleanbotUIElementEnum:
      description: UI element within Gleanbot from which the search request was sent.
      enum:
      - DM
      - MENTION
      - COMMAND
      - LEADERBOARD
      - RETRY
      type: string
    ExternalDocumentProxy:
      allOf:
      - $ref: '#/components/schemas/DocumentDefinition'
      description: "A representation of a document that is stored in an external system,\
        \ likely a customer's server. This document is not stored in Glean's databases,\
        \ but is instead fetched from the external system when the document is requested."
    GetExternalDocumentsProxyInternalRequest:
      description: Request from QE to JQE to retrieve the external documents.
    GetExternalDocumentsProxyRequest:
      description: Request from JQE to the external system to retrieve the external
        documents.
      properties:
        query:
          $ref: '#/components/schemas/GetExternalDocumentsProxyRequest_query'
      required:
      - query
    GetExternalDocumentsProxyResponse:
      allOf:
      - $ref: '#/components/schemas/ExternalDocumentsProxyResponse'
      description: Response from JQE to QE with the external documents.
    ObjectTargetingSurfaceEnum:
      description: The set of possible surfaces that an object can be targeted on
      enum:
      - FEED_SURFACE
      - NAV_SURFACE
      - TEAM_SURFACE
      type: string
    ActivityEventParams:
      properties:
        bodyContent:
          description: The HTML content of the page body.
          type: string
        datasourceInstance:
          description: The full datasource instance name inferred from the URL of
            the event
          type: string
        datasource:
          description: The datasource without the instance inferred from the URL of
            the event
          type: string
        instanceOnlyName:
          description: "The instance only name of the datasource instance, e.g. 1\
            \ for jira_1, inferred from the URL of the event"
          type: string
        duration:
          description: "Length in seconds of the activity. For VIEWS, this represents\
            \ the amount the page was visible in the foreground."
          type: integer
        query:
          description: The user's search query associated with a SEARCH.
          type: string
        referrer:
          description: The referring URL of the VIEW or SEARCH.
          type: string
        title:
          description: The page title associated with the URL of the event
          type: string
        truncated:
          description: Indicates that the params are incomplete and more params may
            be sent with the same action+timestamp+url in the future. This is used
            for sending the duration when a VIEW is finished.
          type: boolean
    ActivityEvent:
      properties:
        action:
          description: |-
            The type of activity this represents.
            CRAWL - Represents an explicit request to index the given `url` along with associated attributes in this payload. HISTORICAL_SEARCH - Represents a search performed at the given `url` as indicated by the user's history. HISTORICAL_VIEW - Represents a visit to the given `url` as indicated by the user's history. SEARCH - Represents a search performed at the given `url`. VIEW - Represents a visit to the given `url`. EDIT - Represents an edit of the document represented by the `url`. COMMENT - Represents a comment on the document represented by the `url`.
          enum:
          - CRAWL
          - HISTORICAL_SEARCH
          - HISTORICAL_VIEW
          - SEARCH
          - VIEW
          - EDIT
          - COMMENT
          type: string
        params:
          $ref: '#/components/schemas/ActivityEventParams'
        source:
          description: Identifies the type of client that is reporting the activity.
          enum:
          - EMBEDDED_SEARCH
          - EXTENSION
          - REST_ENDPOINT
          type: string
        timestamp:
          description: The ISO 8601 timestamp when the activity began.
          format: date-time
          type: string
        url:
          description: The url of the activity.
          type: string
      required:
      - action
      - source
      - timestamp
      - url
    User:
      properties:
        userID:
          description: "An opaque user ID for the claimed authority (i.e., the actas\
            \ param, or the origid if actas is not specified)."
          type: string
        origID:
          description: An opaque user ID for the authenticated user (ignores actas).
          type: string
    Activity:
      example:
        events:
        - url: https://example.com/
          action: HISTORICAL_VIEW
          timestamp: 2000-01-23T04:56:07.000Z
        - url: https://example.com/search?q=query
          action: SEARCH
          timestamp: 2000-01-23T04:56:07.000Z
          params:
            query: query
        - url: https://example.com/
          action: VIEW
          timestamp: 2000-01-23T04:56:07.000Z
          params:
            duration: 20
            referrer: https://example.com/document
      properties:
        events:
          items:
            $ref: '#/components/schemas/ActivityEvent'
          type: array
        user:
          $ref: '#/components/schemas/User'
      required:
      - events
    ClientAnalyticsCommonParams:
      example:
        modality: modality
        webAppVersion: webAppVersion
        extensionVersion: extensionVersion
        theme: theme
        pageReferrer: pageReferrer
        debugMode: true
      properties:
        debugMode:
          type: boolean
        extensionVersion:
          type: string
        pageReferrer:
          type: string
        theme:
          type: string
        webAppVersion:
          type: string
        modality:
          type: string
    ClientAnalyticsEventTrackingParams:
      example:
        utmSource: utmSource
        stt: stt
        uiElement: uiElement
        rate: 6.027456183070403
        datasource: datasource
        docType: docType
        attribution: attribution
        eventName: eventName
        label: label
        category: category
        pagePath: pagePath
        timestamp: 0
      properties:
        timestamp:
          description: Unix timestamp in millis for the client event.
          format: int64
          type: integer
        eventName:
          type: string
        attribution:
          type: string
        category:
          type: string
        datasource:
          type: string
        docType:
          type: string
        label:
          type: string
        pagePath:
          type: string
        uiElement:
          type: string
        utmSource:
          type: string
        rate:
          description: Sample rate applicable for this event.
          type: number
        stt:
          description: Session identifier.
          type: string
    ClientAnalyticsEvent:
      example:
        stringParams:
          key: stringParams
        numberParams:
          key: 1.4658129805029452
        trackingParams:
          utmSource: utmSource
          stt: stt
          uiElement: uiElement
          rate: 6.027456183070403
          datasource: datasource
          docType: docType
          attribution: attribution
          eventName: eventName
          label: label
          category: category
          pagePath: pagePath
          timestamp: 0
        boolParams:
          key: true
      properties:
        trackingParams:
          $ref: '#/components/schemas/ClientAnalyticsEventTrackingParams'
        stringParams:
          additionalProperties:
            type: string
          description: "Additional string parameters associated with the analytics\
            \ event, contents will depend on event category and type."
          type: object
        numberParams:
          additionalProperties:
            type: number
          description: "Additional numerical parameters associated with the analytics\
            \ event, contents will depend on event category and type."
          type: object
        boolParams:
          additionalProperties:
            type: boolean
          description: "Additional boolean parameters associated with the analytics\
            \ event, contents will depend on event category and type."
          type: object
    ClientAnalyticsRequest:
      example:
        commonParams:
          modality: modality
          webAppVersion: webAppVersion
          extensionVersion: extensionVersion
          theme: theme
          pageReferrer: pageReferrer
          debugMode: true
        events:
        - stringParams:
            key: stringParams
          numberParams:
            key: 1.4658129805029452
          trackingParams:
            utmSource: utmSource
            stt: stt
            uiElement: uiElement
            rate: 6.027456183070403
            datasource: datasource
            docType: docType
            attribution: attribution
            eventName: eventName
            label: label
            category: category
            pagePath: pagePath
            timestamp: 0
          boolParams:
            key: true
        - stringParams:
            key: stringParams
          numberParams:
            key: 1.4658129805029452
          trackingParams:
            utmSource: utmSource
            stt: stt
            uiElement: uiElement
            rate: 6.027456183070403
            datasource: datasource
            docType: docType
            attribution: attribution
            eventName: eventName
            label: label
            category: category
            pagePath: pagePath
            timestamp: 0
          boolParams:
            key: true
      properties:
        commonParams:
          $ref: '#/components/schemas/ClientAnalyticsCommonParams'
        events:
          items:
            $ref: '#/components/schemas/ClientAnalyticsEvent'
          type: array
    SessionInfo:
      example:
        tabId: tabId
        lastSeen: 2000-01-23T04:56:07.000+00:00
        sessionTrackingToken: sessionTrackingToken
        lastQuery: lastQuery
      properties:
        sessionTrackingToken:
          description: A unique token for this session. A new session (and token)
            is created when the user issues a request from a new tab or when our server
            hasn't seen activity for more than 10 minutes from a tab.
          type: string
        tabId:
          description: "A unique id for all requests a user makes from a given tab,\
            \ no matter how far apart. A new tab id is only generated when a user\
            \ issues a request from a new tab."
          type: string
        lastSeen:
          description: The last time the server saw this token.
          format: date-time
          type: string
        lastQuery:
          description: The last query seen by the server.
          type: string
    ManualFeedbackInfo:
      properties:
        email:
          description: The email address of the user who submitted the Feedback.event.MANUAL_FEEDBACK
            event.
          type: string
        source:
          description: The source associated with the Feedback.event.MANUAL_FEEDBACK
            event.
          enum:
          - SEARCH
          - FEED
          - Q_AND_A
          - GENERATED_Q_AND_A
          - SUMMARY
          - EXPERT_DETECTION
          type: string
        issue:
          description: The issue the user indicated in the feedback.
          type: string
        query:
          description: The query associated with the Feedback.event.MANUAL_FEEDBACK
            event.
          type: string
        obscuredQuery:
          description: "The query associated with the Feedback.event.MANUAL_FEEDBACK\
            \ event, but obscured such that the vowels are replaced with special characters.\
            \ For search feedback events only."
          type: string
        activeTab:
          description: Which tabs the user had chosen at the time of the Feedback.event.MANUAL_FEEDBACK
            event. For search feedback events only.
          type: string
        comments:
          description: The comments users can optionally add to the Feedback.event.MANUAL_FEEDBACK
            events.
          type: string
        searchResults:
          description: "The array of search result docIds, ordered by top to bottom\
            \ result."
          items:
            type: string
          type: array
        numQueriesFromFirstRun:
          description: How many times this query has been run in the past.
          type: integer
    SeenFeedbackInfo:
      properties:
        isExplicit:
          description: The confidence of the user seeing the object is high because
            they explicitly interacted with it e.g. answer impression in SERP with
            additional user interaction.
          type: boolean
    UserViewInfo:
      properties:
        docId:
          description: Unique identifier of associated document
          type: string
        docTitle:
          description: Title of associated document
          type: string
        docUrl:
          description: URL of associated document
          type: string
    Feedback:
      example:
        trackingTokens:
        - trackingTokens
        event: VIEW
      properties:
        category:
          description: "The feature category to which the feedback applies. These\
            \ should be broad product areas such as Announcements, Answers, Search,\
            \ etc. rather than specific components or UI treatments within those areas."
          enum:
          - ANNOUNCEMENT
          - AUTOCOMPLETE
          - COLLECTIONS
          - FEED
          - SEARCH
          - CHAT
          type: string
        trackingTokens:
          description: A list of server-generated trackingTokens to which this event
            applies.
          items:
            type: string
          type: array
        event:
          description: |-
            The action the user took within a Glean client with respect to the object referred to by the given `trackingToken``.
            CLICK - The object's primary link was clicked with the intent to view its full representation. Depending on the object type, this may imply an external navigation or navigating to a new page or view within the Glean app. CONTAINER_CLICK - A link to the object's parent container (e.g. the folder in which it's located) was clicked. COPY_LINK - The user copied a link to the primary link. CREATE - The user creates a document. DISMISS - The user dismissed the object such that it was hidden from view. DOWNVOTE - The user gave feedback that the object was not useful. EMAIL - The user attempted to send an email. FOCUS_IN - The user clicked into an interactive element, e.g. the search box. MANUAL_FEEDBACK - The user submitted textual manual feedback regarding the object. MESSAGE - The user attempted to send a message using their default messaing app. MIDDLE_CLICK - The user middle clicked the object's primary link with the intent to open its full representation in a new tab. PREVIEW - The user clicked the object's inline preview affordance. RIGHT_CLICK - The user right clicked the object's primary link. This may indicate an intent to open it in a new tab or copy it. SECTION_CLICK - The user clicked a link to a subsection of the primary object. SEEN - The user has likely seen the object (e.g. took action to make the object visible within the user's viewport). SHARE - The user shared the object with another user. SHOW_MORE - The user clicked the object's show more affordance. UPVOTE - The user gave feedback that the object was useful. VIEW - The object was visible within the user's viewport. VISIBLE - The object was visible within the user's viewport.
          enum:
          - CLICK
          - CONTAINER_CLICK
          - COPY_LINK
          - CREATE
          - DISMISS
          - DOWNVOTE
          - EMAIL
          - FOCUS_IN
          - MANUAL_FEEDBACK
          - MESSAGE
          - MIDDLE_CLICK
          - PREVIEW
          - RELATED_CLICK
          - RIGHT_CLICK
          - SECTION_CLICK
          - SEEN
          - SHARE
          - SHOW_MORE
          - UPVOTE
          - VIEW
          - VISIBLE
          type: string
        position:
          description: Position of the element in the case that the client controls
            order (such as feed and autocomplete).
          type: integer
        payload:
          description: "For type MANUAL_FEEDBACK, contains string of user feedback.\
            \ For autocomplete, partial query string. For feed, string of user feedback\
            \ in addition to manual feedback signals extracted from all suggested\
            \ content."
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        timestamp:
          description: The ISO 8601 timestamp when the event occured.
          format: date-time
          type: string
        user:
          $ref: '#/components/schemas/User'
        pathname:
          description: The path the client was at when the feedback event triggered.
          type: string
        channels:
          description: "Where the feedback will be sent, e.g. to Glean, the user's\
            \ company, or both. If no channels are specified, feedback will go only\
            \ to Glean."
          items:
            enum:
            - COMPANY
            - GLEAN
            type: string
          type: array
        url:
          description: The url the client was at when the feedback event triggered.
          type: string
        uiElement:
          description: "The UI element associated with the event, if any."
          type: string
        manualFeedbackInfo:
          $ref: '#/components/schemas/ManualFeedbackInfo'
        seenFeedbackInfo:
          $ref: '#/components/schemas/SeenFeedbackInfo'
        userViewInfo:
          $ref: '#/components/schemas/UserViewInfo'
      required:
      - event
      - trackingTokens
    StructuredTextMutableProperties:
      properties:
        text:
          example: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
            \ sky is blue because blue light is more strongly scattered than longer-wavelength\
            \ light."
          type: string
      required:
      - text
    ConnectorType:
      description: "The source from which document content was pulled, e.g. an API\
        \ crawl or browser history"
      enum:
      - API_CRAWL
      - BROWSER_CRAWL
      - BROWSER_HISTORY
      - BUILTIN
      - FEDERATED_SEARCH
      - PUSH_API
      - WEB_CRAWL
      - NATIVE_HISTORY
      type: string
    DocumentContent:
      example:
        fullTextList:
        - fullTextList
        - fullTextList
      properties:
        fullTextList:
          description: The plaintext content of the document.
          items:
            type: string
          type: array
    Document:
      example:
        connectorType: null
        metadata:
          container: container
          parentId: JIRA_EN-1337
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: Feature Request
          components:
          - Backend
          - Networking
          status:
          - Done
          customData:
            someCustomField: someCustomValue
        containerDocument: null
        datasource: datasource
        docType: docType
        id: id
        title: title
        content:
          fullTextList:
          - fullTextList
          - fullTextList
        parentDocument: null
        url: url
        sections:
        - title: title
          url: url
        - title: title
          url: url
      properties:
        id:
          description: The document id.
          type: string
        datasource:
          description: The app or other repository type from which the document was
            extracted
          type: string
        connectorType:
          $ref: '#/components/schemas/ConnectorType'
        docType:
          description: "The datasource-specific type of the document (e.g. for Jira\
            \ issues, this is the issue type such as Bug or Feature Request)."
          type: string
        content:
          $ref: '#/components/schemas/DocumentContent'
        containerDocument:
          $ref: '#/components/schemas/Document'
        parentDocument:
          $ref: '#/components/schemas/Document'
        title:
          description: The title of the document.
          type: string
        url:
          description: A permalink for the document.
          type: string
        metadata:
          $ref: '#/components/schemas/DocumentMetadata'
        sections:
          description: "A list of content sub-sections in the document, e.g. text\
            \ blocks with different headings in a Drive doc or Confluence page."
          items:
            $ref: '#/components/schemas/DocumentSection'
          type: array
    SearchDebugOptions:
      properties:
        forceParseQuery:
          description: "Debug only. When present, uses this parsed query JSON string\
            \ instead of the query in the request. Requires elevated permission."
          type: string
    FacetFilterValue:
      properties:
        value:
          example: Spreadsheet
          type: string
        relationType:
          enum:
          - EQUALS
          - LT
          - GT
          example: EQUALS
          type: string
        isNegated:
          example: false
          type: boolean
    FacetFilter:
      example:
        fieldName: doc_type
        values:
        - value: Spreadsheet
          relationType: EQUALS
          isNegated: false
        - value: Presentation
          relationType: EQUALS
          isNegated: false
      properties:
        fieldName:
          example: owner
          type: string
        values:
          description: "Within a single FacetFilter, the values are to be treated\
            \ like an OR. For example, fieldName doc_type with values [EQUALS Presentation,\
            \ EQUALS Spreadsheet] means we want to show a document if it's a Presentation\
            \ OR a Spreadsheet."
          items:
            $ref: '#/components/schemas/FacetFilterValue'
          type: array
        groupName:
          description: "Indicates the value of a facet, if any, that the given facet\
            \ is grouped under. This is only used for nested facets, for example,\
            \ fieldName could be owner and groupName would be Spreadsheet if showing\
            \ all owners for spreadsheets as a nested facet."
          example: Spreadsheet
          type: string
    FacetBucketFilter:
      properties:
        facet:
          description: The facet whose buckets should be filtered.
          type: string
        prefix:
          description: The per-term prefix that facet buckets should be filtered on.
          type: string
    AuthToken:
      example:
        accessToken: 123abc
        datasource: gmail
        scope: email profile https://www.googleapis.com/auth/gmail.readonly
        tokenType: Bearer
        authUser: "1"
      properties:
        accessToken:
          type: string
        datasource:
          type: string
        scope:
          type: string
        tokenType:
          type: string
        authUser:
          description: Used by Google to indicate the index of the logged in user.
            Useful for generating hyperlinks that support multilogin.
          type: string
        expiration:
          description: Unix timestamp when this token expires (in seconds since epoch
            UTC).
          format: int64
          type: integer
      required:
      - accessToken
      - datasource
    SearchRequestOptions:
      example:
        debugOptions:
          enableDebugging: true
        datasourceFilter: JIRA
        datasourcesFilter:
        - JIRA
        queryOverridesFacetFilters: true
        facetFilters:
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
      properties:
        debugOptions:
          $ref: '#/components/schemas/SearchDebugOptions'
        datasourceFilter:
          description: "Filter results to a single datasource name (e.g. gmail, slack).\
            \ All results are returned if missing."
          type: string
        datasourcesFilter:
          description: "Filter results to one or more datasources (e.g. gmail, slack).\
            \ All results are returned if missing."
          items:
            type: string
          type: array
        queryOverridesFacetFilters:
          description: "If true, the operators in the query are taken to override\
            \ any operators in facetFilters in the case of conflict. This is used\
            \ to correctly set rewrittenFacetFilters and rewrittenQuery."
          type: boolean
        facetFilters:
          description: "A list of filters for the query. An AND is assumed between\
            \ different facetFilters. For example, owner Sumeet and doc_type Spreadsheet\
            \ shows documents that are by Sumeet AND are Spreadsheets."
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        facetBucketFilter:
          $ref: '#/components/schemas/FacetBucketFilter'
        facetBucketSize:
          description: The maximum number of FacetBuckets to return in each FacetResult.
          type: integer
        authTokens:
          description: "Auth tokens which may be used for non-indexed, federated results\
            \ (e.g. Gmail)."
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
        fetchAllDatasourceCounts:
          description: "Hints that the QE should return result counts (via the datasource\
            \ facet result) for all supported datasources, rather than just those\
            \ specified in the datasource[s]Filter"
          type: boolean
        responseHints:
          description: Array of hints containing what QE should return back to FE.
          items:
            enum:
            - RESULTS
            - QUERY_METADATA
            type: string
          type: array
        timezoneOffset:
          description: The offset of the client's timezone in minutes from UTC. e.g.
            PDT is -420 because it's 7 hours behind UTC.
          type: integer
        forceNegation:
          description: "Whether or not to force not ignoring of negation, i.e. force\
            \ negated terms to be negated."
          type: boolean
        disableSpellcheck:
          description: Whether or not to disable spellcheck.
          type: boolean
        disableQueryAutocorrect:
          description: Disables automatic adjustment of the input query for spelling
            corrections or other reasons.
          type: boolean
        expandedSnippetSize:
          description: The number of characters to include in the expanded snippet.
          type: integer
      required:
      - facetBucketSize
    TextRange:
      description: A subsection of a given string to which some special formatting
        should be applied.
      example:
        startIndex: 0
        endIndex: 6
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        type: BOLD
      properties:
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        type:
          enum:
          - BOLD
          - CITATION
          - LINK
          type: string
        document:
          $ref: '#/components/schemas/Document'
      required:
      - startIndex
    QuerySuggestion:
      example:
        query: app:github type:pull author:mortimer
        label: Mortimer's PRs
        datasource: github
      properties:
        missingTerm:
          description: A query term missing from the original query on which this
            suggestion is based
          type: string
        query:
          description: The query being suggested (e.g. enforcing the missing term
            from the original query)
          type: string
        label:
          description: A user-facing description to display for the suggestion
          type: string
        datasource:
          description: The datasource associated with the suggestion
          type: string
        requestOptions:
          $ref: '#/components/schemas/SearchRequestOptions'
        ranges:
          description: The bolded ranges within the query of the QuerySuggestion.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - query
    SearchResultSnippet:
      example:
        snippet: snippet
        mimeType: mimeType
      properties:
        snippet:
          description: A matching snippet from the document. Query term matches are
            marked by the unicode characters uE006 and uE007.
          type: string
        mimeType:
          description: "The mime type of the snippets, currently either text/plain\
            \ or text/html."
          type: string
        text:
          description: A matching snippet from the document with no highlights.
          type: string
        snippetTextOrdering:
          description: Used for sorting based off the snippet's location within all_snippetable_text
          type: integer
        ranges:
          description: The bolded ranges within text.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - snippet
    RelatedDocuments:
      example:
        associatedEntityId: associatedEntityId
        documents:
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        results:
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
        querySuggestion:
          query: app:github type:pull author:mortimer
          label: Mortimer's PRs
          datasource: github
        relation: CASE
      properties:
        relation:
          description: How this document relates to the including entity.
          enum:
          - CASE
          - CONTACT
          - CONVERSATION_MESSAGES
          - FROM
          - OPPORTUNITY
          - RECENT
          - SOURCE
          - TICKET
          - WITH
          - EXPERT
          type: string
        associatedEntityId:
          description: Which entity in the response that this entity relates to. Relevant
            when there are multiple entities associated with the response (such as
            merged customers)
          type: string
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        documents:
          deprecated: true
          description: A truncated list of documents with this relation. TO BE DEPRECATED.
          items:
            $ref: '#/components/schemas/Document'
          type: array
        results:
          description: A truncated list of documents associated with this relation.
            To be used in favor of `documents` because it contains a trackingToken.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
    SearchResult:
      example:
        snippets:
        - snippet: snippet
          mimeType: mimeType
        metadata:
          container: container
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: objectType
        debugInfo:
          formattedDebugInfo: formattedDebugInfo
        title: title
        url: https://example.com/foo/bar
        nativeAppUrl: slack://foo/bar
        mustIncludeSuggestions:
        - missingTerm: container
          query: container
      properties:
        document:
          $ref: '#/components/schemas/Document'
        title:
          type: string
        url:
          type: string
        nativeAppUrl:
          description: "A deep link, if available, into the datasource's native application\
            \ for the user's platform (e.g. slack://...)."
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        snippets:
          items:
            $ref: '#/components/schemas/SearchResultSnippet'
          type: array
        expandedSnippets:
          description: The expanded snippets for this result. This is only populated
            if the query has the expand_snippets parameter set to true.
          items:
            type: string
          type: array
        fullText:
          description: The full body text of the result if not already contained in
            the snippets
          type: string
        fullTextList:
          description: The full body text of the result if not already contained in
            the snippets; each item in the array represents a separate line in the
            original text
          items:
            type: string
          type: array
        relatedResults:
          description: A list of results related to this search result. Eg. for conversation
            results it contains individual messages from the conversation document
            which will be shown on SERP.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        clusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        allClusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/ClusterGroup'
          type: array
        attachmentCount:
          description: The total number of attachments.
          type: integer
        attachments:
          description: A (potentially partial) list of results representing documents
            attached to the main result document.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        backlinkResults:
          description: A list of results that should be displayed as backlinks of
            this result in reverse chronological order.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        clusterType:
          $ref: '#/components/schemas/ClusterTypeEnum'
        mustIncludeSuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        debugInfo:
          $ref: '#/components/schemas/SearchResultDebugInfo'
        structuredResults:
          description: "When present, this list of `StructuredResult`s will supercede\
            \ a `Document` in this `SearchResult`."
          items:
            $ref: '#/components/schemas/StructuredResult'
          type: array
        prominence:
          $ref: '#/components/schemas/SearchResultProminenceEnum'
        attachmentContext:
          description: Additional context for the relationship between the result
            and the document it's attached to.
          type: string
        pins:
          description: A list of pins associated with this search result.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
      required:
      - snippets
      - url
    ClusterTypeEnum:
      description: The reason for inclusion of clusteredResults.
      enum:
      - SIMILAR
      - FRESHNESS
      - TITLE
      - CONTENT
      - NONE
      - THREAD_REPLY
      - THREAD_ROOT
      type: string
    ClusterGroup:
      properties:
        clusteredResults:
          description: A list of results that should be displayed as associated with
            this result.
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        clusterType:
          $ref: '#/components/schemas/ClusterTypeEnum'
        visibleCountHint:
          description: The default number of results to display before truncating
            and showing a "see more" link
          type: integer
      required:
      - visibleCountHint
    Person:
      example:
        name: George Clooney
        obfuscatedId: abc123
      properties:
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for
            a Person.
          type: string
        relatedDocuments:
          description: A list of documents related to this person.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        metadata:
          $ref: '#/components/schemas/PersonMetadata'
      required:
      - name
      - obfuscatedId
    QuerySuggestionList:
      example:
        person:
          name: George Clooney
          obfuscatedId: abc123
        suggestions:
        - query: app:github type:pull author:mortimer
          label: Mortimer's PRs
          datasource: github
        - query: app:github type:pull author:mortimer
          label: Mortimer's PRs
          datasource: github
      properties:
        suggestions:
          items:
            $ref: '#/components/schemas/QuerySuggestion'
          type: array
        person:
          $ref: '#/components/schemas/Person'
      required:
      - suggestions
    SearchResultDebugInfo:
      properties:
        finalScore:
          format: double
          type: number
        scholasticScore:
          format: double
          type: number
        scholasticContent:
          type: string
        scholasticRetrievalOnly:
          type: boolean
        explanation:
          type: string
        snippetScore:
          format: double
          type: number
        position:
          format: int64
          type: integer
        evalDocumentDescriptorEncoded:
          description: "Information about boundaries / endpoints of documents, e.g.,\
            \ messages in a conversation - only used for evals and always scrubbed\
            \ + without PII."
          type: string
        id_hash:
          description: The document id hash.
          type: string
    Company:
      example:
        profileUrl: profileUrl
        websiteUrls:
        - websiteUrls
        - websiteUrls
        foundedDate: 2000-01-23
        about: "Financial, software, data, and media company headquartered in Midtown\
          \ Manhattan, New York City"
        industry: Finances
        logoUrl: logoUrl
        numberOfEmployees: 6
        stockSymbol: stockSymbol
        phone: phone
        name: name
        location: New York City
        fax: fax
        annualRevenue: 0.8008281904610115
      properties:
        name:
          description: User-friendly display name.
          type: string
        profileUrl:
          description: Link to internal company company profile.
          type: string
        websiteUrls:
          description: Link to company's associated websites.
          items:
            type: string
          type: array
        logoUrl:
          description: "The URL of the company's logo. Public, glean-authenticated\
            \ and Base64 encoded data URLs are all valid (but not third-party-authenticated\
            \ URLs)."
          type: string
        location:
          description: User facing string representing the company's location.
          example: New York City
          type: string
        phone:
          description: Phone number as a number string.
          type: string
        fax:
          description: Fax number as a number string.
          type: string
        industry:
          description: User facing string representing the company's industry.
          example: Finances
          type: string
        annualRevenue:
          description: Average company's annual revenue for reference.
          format: double
          type: number
        numberOfEmployees:
          description: Average company's number of employees for reference.
          format: int64
          type: integer
        stockSymbol:
          description: Company's stock symbol if company is public.
          type: string
        foundedDate:
          description: The date when the company was founded.
          format: date
          type: string
        about:
          description: User facing description of company.
          example: "Financial, software, data, and media company headquartered in\
            \ Midtown Manhattan, New York City"
          type: string
      required:
      - name
    DocumentCounts:
      additionalProperties:
        type: integer
      description: "A map of {string, int} pairs representing counts of each document\
        \ type associated with this customer."
      type: object
    CustomerMetadata:
      example:
        datasourceId: datasourceId
      properties:
        datasourceId:
          description: The user visible id of the salesforce customer account.
          type: string
    Customer:
      example:
        metadata:
          datasourceId: datasourceId
        contractAnnualRevenue: 5.962133916683182
        documentCounts:
          key: 1
        mergedCustomers:
        - null
        - null
        notes: CIO is interested in trying out the product.
        poc:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        domains:
        - domains
        - domains
        company:
          profileUrl: profileUrl
          websiteUrls:
          - websiteUrls
          - websiteUrls
          foundedDate: 2000-01-23
          about: "Financial, software, data, and media company headquartered in Midtown\
            \ Manhattan, New York City"
          industry: Finances
          logoUrl: logoUrl
          numberOfEmployees: 6
          stockSymbol: stockSymbol
          phone: phone
          name: name
          location: New York City
          fax: fax
          annualRevenue: 0.8008281904610115
        id: id
        startDate: 2000-01-23
      properties:
        id:
          description: Unique identifier.
          type: string
        domains:
          description: Link to company's associated website domains.
          items:
            type: string
          type: array
        company:
          $ref: '#/components/schemas/Company'
        documentCounts:
          additionalProperties:
            type: integer
          description: "A map of {string, int} pairs representing counts of each document\
            \ type associated with this customer."
          type: object
        poc:
          description: A list of POC for company.
          items:
            $ref: '#/components/schemas/Person'
          type: array
        metadata:
          $ref: '#/components/schemas/CustomerMetadata'
        mergedCustomers:
          description: A list of Customers.
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        startDate:
          description: The date when the interaction with customer started.
          format: date
          type: string
        contractAnnualRevenue:
          description: Average contract annual revenue with that customer.
          format: double
          type: number
        notes:
          description: User facing (potentially generated) notes about company.
          example: CIO is interested in trying out the product.
          type: string
      required:
      - company
      - id
    RelatedObject:
      properties:
        id:
          description: The ID of the related object
          type: string
        metadata:
          $ref: '#/components/schemas/RelatedObject_metadata'
      required:
      - id
    RelatedObjectEdge:
      properties:
        objects:
          items:
            $ref: '#/components/schemas/RelatedObject'
          type: array
    RelatedObjects:
      properties:
        relatedObjects:
          additionalProperties:
            $ref: '#/components/schemas/RelatedObjectEdge'
          description: A list of objects related to a source object.
          type: object
    PersonToTeamRelationship:
      description: Metadata about the relationship of a person to a team.
      properties:
        person:
          $ref: '#/components/schemas/Person'
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to
            MEMBER if not set.
          enum:
          - MEMBER
          - MANAGER
          - LEAD
          - POINT_OF_CONTACT
          - OTHER
          type: string
        customRelationshipStr:
          description: Displayed name for the relationship if relationship is set
            to `OTHER`.
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
      required:
      - person
      type: object
    TeamEmail:
      properties:
        email:
          description: An email address
          format: email
          type: string
        type:
          default: OTHER
          enum:
          - PRIMARY
          - SECONDARY
          - ONCALL
          - OTHER
          type: string
        isUserGenerated:
          description: true iff the email was manually added by a user from within
            Glean (aka not from the original data source)
          type: boolean
    DatasourceProfile:
      properties:
        datasource:
          description: The datasource the profile is of.
          example: github
          type: string
        handle:
          description: The display name of the person in the given datasource.
          type: string
        url:
          description: URL to view the user's profile.
          type: string
        nativeAppUrl:
          description: "A deep link, if available, into the datasource's native application\
            \ for the user's platform (i.e. slack://...)."
          type: string
        isUserGenerated:
          description: For internal use only. True iff the data source profile was
            manually added by a user from within Glean (aka not from the original
            data source)
          type: boolean
      required:
      - datasource
      - handle
    Team:
      allOf:
      - $ref: '#/components/schemas/RelatedObjects'
      - $ref: '#/components/schemas/Team_allOf'
    ScopeType:
      description: "Describes the scope for a ReadPermission, WritePermission, or\
        \ GrantPermission object"
      enum:
      - GLOBAL
      - OWN
      type: string
    WritePermission:
      description: Describes the write permissions levels that a user has for a specific
        feature
      example:
        scopeType: null
        create: true
        update: true
        delete: true
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
        create:
          description: True if user has create permission for this feature and scope
          type: boolean
        update:
          description: True if user has update permission for this feature and scope
          type: boolean
        delete:
          description: True if user has delete permission for this feature and scope
          type: boolean
    ObjectPermissions:
      properties:
        write:
          $ref: '#/components/schemas/WritePermission'
    PermissionedObject:
      properties:
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
    CustomDataValue:
      properties:
        displayLabel:
          type: string
        stringValue:
          type: string
        stringListValue:
          description: list of strings for multi-value properties
          items:
            type: string
          type: array
        numberValue:
          type: number
    CustomData:
      additionalProperties:
        $ref: '#/components/schemas/CustomDataValue'
      description: Custom fields specific to individual datasources
      type: object
    CustomEntityMetadata:
      properties:
        customData:
          additionalProperties:
            $ref: '#/components/schemas/CustomDataValue'
          description: Custom fields specific to individual datasources
          type: object
    DocumentSpec:
      oneOf:
      - $ref: '#/components/schemas/DocumentSpec_oneOf'
      - $ref: '#/components/schemas/DocumentSpec_oneOf_1'
      - $ref: '#/components/schemas/DocumentSpec_oneOf_2'
    GroupType:
      description: The type of user group
      enum:
      - DEPARTMENT
      - ALL
      - TEAM
      - JOB_TITLE
      - ROLE_TYPE
      - LOCATION
      - REGION
      - EXTERNAL_GROUP
      type: string
    Group:
      example:
        name: name
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/GroupType'
        id:
          description: A unique identifier for the group. May be the same as name.
          type: string
        name:
          description: Name of the group.
          type: string
      required:
      - id
      - type
    UserRole:
      description: A user's role with respect to a specific document.
      enum:
      - OWNER
      - VIEWER
      - ANSWER_MODERATOR
      - EDITOR
      - VERIFIER
      type: string
    UserRoleSpecification:
      example:
        sourceDocumentSpec: null
        role: null
        person:
          name: George Clooney
          obfuscatedId: abc123
        group:
          name: name
          id: id
          type: null
      properties:
        sourceDocumentSpec:
          $ref: '#/components/schemas/DocumentSpec'
        person:
          $ref: '#/components/schemas/Person'
        group:
          $ref: '#/components/schemas/Group'
        role:
          $ref: '#/components/schemas/UserRole'
      required:
      - role
    CustomEntity:
      allOf:
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/CustomEntity_allOf'
    AnswerId:
      properties:
        id:
          description: The opaque id of the answer.
          example: 3
          type: integer
    AnswerDocId:
      properties:
        docId:
          description: "Internal document id of the answer. We support using the document\
            \ id for cases where the client doesn't have the integer id available.\
            \ If both are available, using the integer id is preferred."
          example: ANSWERS_answer_3
          type: string
    AnswerMutableProperties:
      example:
        sourceDocumentSpec: null
        questionVariations:
        - questionVariations
        - questionVariations
        bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky\
          \ is blue because blue light is more strongly scattered than longer-wavelength\
          \ light."
        question: Why is the sky blue?
        roles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        boardId: 0
        addedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        audienceFilters:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        removedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
      properties:
        question:
          example: Why is the sky blue?
          type: string
        questionVariations:
          description: Additional ways of phrasing this question.
          items:
            type: string
          type: array
        bodyText:
          description: The plain text answer to the question.
          example: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
            \ sky is blue because blue light is more strongly scattered than longer-wavelength\
            \ light."
          type: string
        boardId:
          description: "The parent board ID of this Answer, or 0 if it's a floating\
            \ Answer."
          type: integer
        audienceFilters:
          description: Filters which restrict who should see the answer. Values are
            taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        addedRoles:
          description: A list of user roles for the answer added by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of user roles for the answer removed by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        roles:
          description: "A list of roles for this answer explicitly granted by an owner,\
            \ editor, or admin."
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        sourceDocumentSpec:
          $ref: '#/components/schemas/DocumentSpec'
    StructuredText:
      allOf:
      - $ref: '#/components/schemas/StructuredTextMutableProperties'
      - $ref: '#/components/schemas/StructuredText_allOf'
    AnswerLike:
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        user:
          name: George Clooney
          obfuscatedId: abc123
      properties:
        user:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the user liked the answer in ISO format (ISO 8601).
          format: date-time
          type: string
    AnswerLikes:
      example:
        likedByUser: true
        likedBy:
        - createTime: 2000-01-23T04:56:07.000+00:00
          user:
            name: George Clooney
            obfuscatedId: abc123
        - createTime: 2000-01-23T04:56:07.000+00:00
          user:
            name: George Clooney
            obfuscatedId: abc123
        numLikes: 0
      properties:
        likedBy:
          items:
            $ref: '#/components/schemas/AnswerLike'
          type: array
        likedByUser:
          description: Whether the user in context liked the answer.
          type: boolean
        numLikes:
          description: The total number of likes for the answer.
          type: integer
      required:
      - likedBy
      - likedByUser
      - numLikes
    Reminder:
      example:
        createdAt: 5
        reason: reason
        assignee:
          name: George Clooney
          obfuscatedId: abc123
        requestor:
          name: George Clooney
          obfuscatedId: abc123
        remindAt: 1
      properties:
        assignee:
          $ref: '#/components/schemas/Person'
        requestor:
          $ref: '#/components/schemas/Person'
        remindAt:
          description: Unix timestamp for when the reminder should trigger (in seconds
            since epoch UTC).
          type: integer
        createdAt:
          description: Unix timestamp for when the reminder was first created (in
            seconds since epoch UTC).
          type: integer
        reason:
          description: "An optional free-text reason for the reminder. This is particularly\
            \ useful when a reminder is used to ask for verification from another\
            \ user (for example, \"Duplicate\", \"Incomplete\", \"Incorrect\")."
          type: string
      required:
      - assignee
      - remindAt
    TimePoint:
      example:
        daysFromNow: 5
        epochSeconds: 5
      properties:
        epochSeconds:
          description: Epoch seconds. Has precedence over daysFromNow.
          type: integer
        daysFromNow:
          description: The number of days from now. Specification relative to current
            time. Can be negative.
          type: integer
    Period:
      example:
        minDaysFromNow: 6
        start:
          daysFromNow: 5
          epochSeconds: 5
        maxDaysFromNow: 1
        end:
          daysFromNow: 5
          epochSeconds: 5
      properties:
        minDaysFromNow:
          deprecated: true
          description: DEPRECATED - The number of days from now in the past to define
            upper boundary of time period.
          type: integer
        maxDaysFromNow:
          deprecated: true
          description: DEPRECATED - The number of days from now in the past to define
            lower boundary of time period.
          type: integer
        start:
          $ref: '#/components/schemas/TimePoint'
        end:
          $ref: '#/components/schemas/TimePoint'
    CountInfo:
      example:
        period:
          minDaysFromNow: 6
          start:
            daysFromNow: 5
            epochSeconds: 5
          maxDaysFromNow: 1
          end:
            daysFromNow: 5
            epochSeconds: 5
        org: org
        count: 0
      properties:
        count:
          description: The counter value
          type: integer
        period:
          $ref: '#/components/schemas/Period'
        org:
          description: "The unit of organization over which we did the count aggregation,\
            \ e.g. org (department) or company"
          type: string
      required:
      - count
    VerificationMetadata:
      example:
        reminders:
        - createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        - createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        lastReminder:
          createdAt: 5
          reason: reason
          assignee:
            name: George Clooney
            obfuscatedId: abc123
          requestor:
            name: George Clooney
            obfuscatedId: abc123
          remindAt: 1
        expirationTs: 6
        visitorCount:
        - period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        - period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        lastVerifier:
          name: George Clooney
          obfuscatedId: abc123
        lastVerificationTs: 0
        candidateVerifiers:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
      properties:
        lastVerifier:
          $ref: '#/components/schemas/Person'
        lastVerificationTs:
          description: The unix timestamp of the verification (in seconds since epoch
            UTC).
          type: integer
        expirationTs:
          description: The unix timestamp of the verification expiration if applicable
            (in seconds since epoch UTC).
          type: integer
        document:
          $ref: '#/components/schemas/Document'
        reminders:
          description: Info about all outstanding verification reminders for the document
            if exists.
          items:
            $ref: '#/components/schemas/Reminder'
          type: array
        lastReminder:
          $ref: '#/components/schemas/Reminder'
        visitorCount:
          description: Number of visitors to the document during included time periods.
          items:
            $ref: '#/components/schemas/CountInfo'
          type: array
        candidateVerifiers:
          description: List of potential verifiers for the document e.g. old verifiers
            and/or users with view/edit permissions.
          items:
            $ref: '#/components/schemas/Person'
          type: array
      required:
      - documentId
    Verification:
      example:
        metadata:
          reminders:
          - createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          - createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          lastReminder:
            createdAt: 5
            reason: reason
            assignee:
              name: George Clooney
              obfuscatedId: abc123
            requestor:
              name: George Clooney
              obfuscatedId: abc123
            remindAt: 1
          expirationTs: 6
          visitorCount:
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          lastVerifier:
            name: George Clooney
            obfuscatedId: abc123
          lastVerificationTs: 0
          candidateVerifiers:
          - name: George Clooney
            obfuscatedId: abc123
          - name: George Clooney
            obfuscatedId: abc123
        state: UNVERIFIED
      properties:
        state:
          description: The verification state for the document.
          enum:
          - UNVERIFIED
          - VERIFIED
          - DEPRECATED
          type: string
        metadata:
          $ref: '#/components/schemas/VerificationMetadata'
      required:
      - state
    CollectionBaseMutableProperties:
      properties:
        name:
          description: The unique name of the Collection.
          type: string
        description:
          description: A brief summary of the Collection's contents.
          type: string
        addedRoles:
          description: A list of added user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of removed user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        audienceFilters:
          description: Filters which restrict who should see this collection. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
      required:
      - name
    AnswerBoardMutableProperties:
      allOf:
      - $ref: '#/components/schemas/CollectionBaseMutableProperties'
    AnswerBoard:
      allOf:
      - $ref: '#/components/schemas/AnswerBoardMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/AnswerBoard_allOf'
    Thumbnail:
      example:
        photoId: photoId
        url: url
      properties:
        photoId:
          description: Photo id if the thumbnail is from splash.
          type: string
        url:
          description: Thumbnail url. This can be user provided image and/or from
            downloaded images hosted by glean.
          type: string
    CollectionMutableProperties:
      allOf:
      - $ref: '#/components/schemas/CollectionBaseMutableProperties'
      - $ref: '#/components/schemas/CollectionMutableProperties_allOf'
    CollectionItemMutableProperties:
      properties:
        name:
          description: The optional name of the collection item.
          type: string
        description:
          description: A helpful description of why this CollectionItem is in the
            Collection that it's in.
          type: string
        icon:
          description: The emoji icon for this CollectionItem. Only used for Text
            type items.
          type: string
    UserGeneratedContentId:
      properties:
        id:
          description: The opaque id of the user generated content.
          type: integer
    ShortcutMutableProperties:
      example:
        destinationDocumentId: destinationDocumentId
        unlisted: true
        urlTemplate: urlTemplate
        description: description
        inputAlias: inputAlias
        destinationUrl: destinationUrl
        addedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        removedRoles:
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
        - sourceDocumentSpec: null
          role: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          group:
            name: name
            id: id
            type: null
      properties:
        inputAlias:
          description: link text following go/ prefix as entered by the user.
          type: string
        destinationUrl:
          description: destination URL for the shortcut.
          type: string
        destinationDocumentId:
          description: "document id for the url, if known."
          type: string
        description:
          description: "A short, plain text blurb to help people understand the intent\
            \ of the shortcut."
          type: string
        unlisted:
          description: Whether this shortcut is unlisted or not. Unlisted shortcuts
            are visible to author + admins only.
          type: boolean
        urlTemplate:
          description: "For variable shortcuts, contains the url template; note, destinationUrl\
            \ contains default url"
          type: string
        addedRoles:
          description: A list of user roles added for the Shortcut.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of user roles removed for the Shortcut.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
    ShortcutMetadata:
      properties:
        createdBy:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the shortcut was created in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/Person'
        updateTime:
          description: The time the shortcut was updated in ISO format (ISO 8601).
          format: date-time
          type: string
        destinationDocument:
          $ref: '#/components/schemas/Document'
        intermediateUrl:
          description: The URL from which the user is then redirected to the destination
            URL. Full replacement for https://go/<inputAlias>.
          type: string
        viewPrefix:
          description: The part of the shortcut preceding the input alias when used
            for showing shortcuts to users. Should end with "/". e.g. "go/" for native
            shortcuts.
          type: string
        isExternal:
          description: Indicates whether a shortcut is native or external.
          type: boolean
        editUrl:
          description: The URL using which the user can access the edit page of the
            shortcut.
          type: string
    Shortcut:
      allOf:
      - $ref: '#/components/schemas/UserGeneratedContentId'
      - $ref: '#/components/schemas/ShortcutMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/ShortcutMetadata'
      - $ref: '#/components/schemas/Shortcut_allOf'
    Collection:
      allOf:
      - $ref: '#/components/schemas/CollectionMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Collection_allOf'
    CollectionItem:
      allOf:
      - $ref: '#/components/schemas/CollectionItemMutableProperties'
      - $ref: '#/components/schemas/CollectionItem_allOf'
    CollectionPinnableCategories:
      description: Categories a collection can be pinned to
      enum:
      - COMPANY_RESOURCE
      - DEPARTMENT_RESOURCE
      - TEAM_RESOURCE
      type: string
    CollectionPinnableTargets:
      description: What targets can a collection be pinned to
      enum:
      - RESOURCE_CARD
      - TEAM_PROFILE_PAGE
      type: string
    CollectionPinTarget:
      example:
        category: null
        value: value
        target: null
      properties:
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
        value:
          description: "Optional. If category supports values, then the additional\
            \ value for the category e.g. department name for DEPARTMENT_RESOURCE,\
            \ team name/id for TEAM_RESOURCE and so on."
          type: string
        target:
          $ref: '#/components/schemas/CollectionPinnableTargets'
      required:
      - category
    CollectionPinMetadata:
      example:
        id: 0
        target:
          category: null
          value: value
          target: null
      properties:
        id:
          description: The id of the collection.
          type: integer
        target:
          $ref: '#/components/schemas/CollectionPinTarget'
      required:
      - id
      - target
    CollectionPinnedMetadata:
      properties:
        existingPins:
          description: List of targets this collection is pinned to
          items:
            $ref: '#/components/schemas/CollectionPinTarget'
          type: array
        eligiblePins:
          description: "List of targets this collection can be pinned to, excluding\
            \ the targets this collection is already pinned to. We also include collection\
            \ id already is pinned to each eligible target, which will be 0 if the\
            \ target has no pinned collection."
          items:
            $ref: '#/components/schemas/CollectionPinMetadata'
          type: array
        pinnedCategories:
          deprecated: true
          description: DEPRECATED - List of categories this collection is pinned to.
            Use existingPins instead.
          items:
            $ref: '#/components/schemas/CollectionPinnableCategories'
          type: array
        eligibleCategoriesForPinning:
          additionalProperties:
            type: integer
          deprecated: true
          description: "DEPRECATED - A map of {category, collectionId to bump out}\
            \ pairs of eligible categories to pin. We exclude categories the collection\
            \ is already pinned to. CollectionId will be 0 if the the cateogry has\
            \ no pinned collection. Use eligiblePins instead."
          type: object
      required:
      - eligibleCategoriesForPinning
      - pinnedCategories
    Answer:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Answer_allOf'
    ExtractedQnA:
      example:
        question: question
        heading: heading
        questionResult:
          snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
      properties:
        heading:
          description: Heading text that was matched to produce this result.
          type: string
        question:
          description: Question text that was matched to produce this result.
          type: string
        questionResult:
          $ref: '#/components/schemas/SearchResult'
    AppResult:
      example:
        datasource: datasource
        docType: docType
        mimeType: mimeType
        iconUrl: iconUrl
      properties:
        datasource:
          description: The app or other repository type this represents
          type: string
        docType:
          description: "The datasource-specific type of the document (e.g. for Jira\
            \ issues, this is the issue type such as Bug or Feature Request)."
          type: string
        mimeType:
          description: "Mimetype is used to differentiate between sub applications\
            \ from a datasource (e.g. Sheets, Docs from Gdrive)"
          type: string
        iconUrl:
          description: If there is available icon url.
          type: string
      required:
      - datasource
    CodeLine:
      properties:
        lineNumber:
          type: integer
        content:
          type: string
        ranges:
          description: Index ranges depicting matched sections of the line
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
    Code:
      example:
        repoName: scio
        fileName: README.md
        matches:
        - lineNumber: 1
          content: Welcome to the beginning
          ranges: []
        - lineNumber: 2
          content: Second line of the file
          ranges: []
        - lineNumber: 3
          content: hello world hello world
          ranges:
          - startindex: 0
            endIndex: 5
          - startIndex: 12
            endIndex: 17
      properties:
        repoName:
          type: string
        fileName:
          type: string
        fileUrl:
          type: string
        lines:
          items:
            $ref: '#/components/schemas/CodeLine'
          type: array
        isLastMatch:
          description: Last file match for a repo
          type: boolean
    StructuredResult:
      example:
        app:
          datasource: datasource
          docType: docType
          mimeType: mimeType
          iconUrl: iconUrl
        trackingToken: trackingToken
        code:
          repoName: scio
          fileName: README.md
          matches:
          - lineNumber: 1
            content: Welcome to the beginning
            ranges: []
          - lineNumber: 2
            content: Second line of the file
            ranges: []
          - lineNumber: 3
            content: hello world hello world
            ranges:
            - startindex: 0
              endIndex: 5
            - startIndex: 12
              endIndex: 17
        team: null
        collection: null
        debugInfo: debugInfo
        source: EXPERT_DETECTION
        customEntity: null
        extractedQnA:
          question: question
          heading: heading
          questionResult:
            snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
        shortcut: null
        answer: null
        snippets:
        - snippet: snippet
          mimeType: mimeType
        - snippet: snippet
          mimeType: mimeType
        person:
          name: George Clooney
          obfuscatedId: abc123
        relatedDocuments:
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        answerBoard: null
        querySuggestions:
          person:
            name: George Clooney
            obfuscatedId: abc123
          suggestions:
          - query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          - query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
        customer:
          metadata:
            datasourceId: datasourceId
          contractAnnualRevenue: 5.962133916683182
          documentCounts:
            key: 1
          mergedCustomers:
          - null
          - null
          notes: CIO is interested in trying out the product.
          poc:
          - name: George Clooney
            obfuscatedId: abc123
          - name: George Clooney
            obfuscatedId: abc123
          domains:
          - domains
          - domains
          company:
            profileUrl: profileUrl
            websiteUrls:
            - websiteUrls
            - websiteUrls
            foundedDate: 2000-01-23
            about: "Financial, software, data, and media company headquartered in\
              \ Midtown Manhattan, New York City"
            industry: Finances
            logoUrl: logoUrl
            numberOfEmployees: 6
            stockSymbol: stockSymbol
            phone: phone
            name: name
            location: New York City
            fax: fax
            annualRevenue: 0.8008281904610115
          id: id
          startDate: 2000-01-23
        prominence: HERO
      properties:
        snippets:
          items:
            $ref: '#/components/schemas/SearchResultSnippet'
          type: array
        person:
          $ref: '#/components/schemas/Person'
        customer:
          $ref: '#/components/schemas/Customer'
        team:
          $ref: '#/components/schemas/Team'
        customEntity:
          $ref: '#/components/schemas/CustomEntity'
        answer:
          $ref: '#/components/schemas/Answer'
        extractedQnA:
          $ref: '#/components/schemas/ExtractedQnA'
        app:
          $ref: '#/components/schemas/AppResult'
        collection:
          $ref: '#/components/schemas/Collection'
        answerBoard:
          $ref: '#/components/schemas/AnswerBoard'
        code:
          $ref: '#/components/schemas/Code'
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        querySuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        relatedDocuments:
          description: A list of documents related to this structured result.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        debugInfo:
          description: Debug details for this result if debug is enabled.
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        prominence:
          description: |
            The level of visual distinction that should be given to a result.
            HERO - A high-confidence result that should feature prominently on the page.
            PROMOTED - May not be the best result but should be given additional visual distinction.
            STANDARD - Should not be distinct from any other results.
            TODO: Deprecate and use prominence field only in SearchResult.
          enum:
          - HERO
          - PROMOTED
          - STANDARD
          type: string
        source:
          description: Source context for this result. Possible values depend on the
            result type.
          enum:
          - EXPERT_DETECTION
          type: string
    SearchResultProminenceEnum:
      description: |
        The level of visual distinction that should be given to a result.
        HERO - A high-confidence result that should feature prominently on the page.
        PROMOTED - May not be the best result but should be given additional visual distinction.
        STANDARD - Should not be distinct from any other results.
      enum:
      - HERO
      - PROMOTED
      - STANDARD
      type: string
    PinDocumentMutableProperties:
      properties:
        query:
          description: DEPRECATED - The query string to be set for the pin
          type: string
        queries:
          description: The query strings for which the pinned result will show.
          items:
            type: string
          type: array
        audienceFilters:
          description: Filters which restrict who should see the pinned document.
            Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
    PinDocument:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/PinDocument_allOf'
    PersonTeam:
      description: "Use `id` if you index teams via Glean, and use `name` and `externalLink`\
        \ if you want to use your own team pages"
      properties:
        id:
          description: Unique identifier
          type: string
        name:
          description: Team name
          type: string
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        relationship:
          default: MEMBER
          description: The team member's relationship to the team. This defaults to
            MEMBER if not set.
          enum:
          - MEMBER
          - MANAGER
          - LEAD
          - POINT_OF_CONTACT
          - OTHER
          type: string
        joinDate:
          description: The team member's start date
          format: date-time
          type: string
    StructuredLocation:
      description: "Detailed location with information about country, state, city\
        \ etc."
      properties:
        deskLocation:
          description: Desk number.
          type: string
        timezone:
          description: "Location's timezone, e.g. UTC, PST."
          type: string
        address:
          description: Office address or name.
          type: string
        city:
          description: Name of the city.
          type: string
        state:
          description: State code.
          type: string
        region:
          description: "Region information, e.g. NORAM, APAC."
          type: string
        zipCode:
          description: ZIP Code for the address.
          type: string
        country:
          description: Country name.
          type: string
        countryCode:
          description: "Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA."
          type: string
      type: object
    SocialNetwork:
      properties:
        name:
          description: "Possible values are \"twitter\", \"linkedin\"."
          type: string
        profileName:
          description: Human-readable profile name.
          type: string
        profileUrl:
          description: Link to profile.
          type: string
      required:
      - name
      - profileUrl
    PersonDistance:
      properties:
        name:
          description: The display name.
          type: string
        obfuscatedId:
          description: An opaque identifier that can be used to request metadata for
            a Person.
          type: string
        distance:
          description: "Distance to person, refer to PeopleDistance pipeline on interpretation\
            \ of the value."
          format: float
          type: number
      required:
      - distance
      - name
      - obfuscatedId
    InviteInfo:
      description: Information regarding the invite status of a person.
      properties:
        inviter:
          $ref: '#/components/schemas/Person'
        inviteTime:
          description: The time this person was invited in ISO format (ISO 8601).
          format: date-time
          type: string
        signUpTime:
          description: The time this person signed up in ISO format (ISO 8601).
          format: date-time
          type: string
        reminderTime:
          description: The time this person was reminded in ISO format (ISO 8601)
            if a reminder was sent.
          format: date-time
          type: string
    schemas-ReadPermission:
      description: Describes the read permission level that a user has for a specific
        feature
      example:
        scopeType: null
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    ReadPermissions:
      additionalProperties:
        description: List of read permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/schemas-ReadPermission'
        type: array
      description: Describes the read permission levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    WritePermissions:
      additionalProperties:
        description: List of write permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/WritePermission'
        type: array
      description: Describes the write permissions levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    schemas-GrantPermission:
      description: Describes the grant permission level that a user has for a specific
        feature
      example:
        scopeType: null
      properties:
        scopeType:
          $ref: '#/components/schemas/ScopeType'
    GrantPermissions:
      additionalProperties:
        description: List of grant permissions (for different scopes but same feature)
        items:
          $ref: '#/components/schemas/schemas-GrantPermission'
        type: array
      description: Describes the grant permission levels that a user has for permissioned
        features. Key must be PermissionedFeatureOrObject
      type: object
    Permissions:
      description: "Describes the permissions levels that a user has for permissioned\
        \ features. When the client sends this, Permissions.read and Permissions.write\
        \ are the additional permissions granted to a user on top of what they have\
        \ via their roles. When the server sends this, Permissions.read and Permissions.write\
        \ are the complete (merged) set of permissions the user has, and Permissions.roles\
        \ is just for display purposes (along with Permisisons.isModified)"
      example:
        canCreateAnnoucements: true
        canDlp: true
        read:
          key:
          - scopeType: null
          - scopeType: null
        role: role
        roles:
        - roles
        - roles
        editDocumentTags: true
        canAdminSearch: true
        canAdminClientApiGlobalTokens: true
        canAccessGeneratedQna: true
        createUgcTags: true
        canInsightsDashboard: true
        isModified: true
        grant:
          key:
          - scopeType: null
          - scopeType: null
        write:
          key:
          - scopeType: null
            create: true
            update: true
            delete: true
          - scopeType: null
            create: true
            update: true
            delete: true
      properties:
        canInsightsDashboard:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to the insights dashboard
          type: boolean
        canAdminSearch:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to /adminsearch
          type: boolean
        canAdminClientApiGlobalTokens:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user can administrate client API tokens with global scope
          type: boolean
        canDlp:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to data loss prevention (DLP) features
          type: boolean
        createUgcTags:
          description: TODO--deprecate in favor of the read and write properties.
            Define new UGC tags.
          type: boolean
        editDocumentTags:
          description: TODO--deprecate in favor of the read and write properties.
            Add and remove existing UGC tags on any document.
          type: boolean
        canCreateAnnoucements:
          description: TODO--deprecate in favor of the read and write properties.
            True is the user can create/update/delete announcements.
          type: boolean
        canAccessGeneratedQna:
          description: TODO--deprecate in favor of the read and write properties.
            True if the user has access to the Generated Qna feature on SERP
          type: boolean
        read:
          additionalProperties:
            description: List of read permissions (for different scopes but same feature)
            items:
              $ref: '#/components/schemas/schemas-ReadPermission'
            type: array
          description: Describes the read permission levels that a user has for permissioned
            features. Key must be PermissionedFeatureOrObject
          type: object
        write:
          additionalProperties:
            description: List of write permissions (for different scopes but same
              feature)
            items:
              $ref: '#/components/schemas/WritePermission'
            type: array
          description: Describes the write permissions levels that a user has for
            permissioned features. Key must be PermissionedFeatureOrObject
          type: object
        grant:
          additionalProperties:
            description: List of grant permissions (for different scopes but same
              feature)
            items:
              $ref: '#/components/schemas/schemas-GrantPermission'
            type: array
          description: Describes the grant permission levels that a user has for permissioned
            features. Key must be PermissionedFeatureOrObject
          type: object
        role:
          deprecated: true
          description: DEPRECATED - The role for the user
          type: string
        roles:
          description: The roles a user has.
          items:
            type: string
          type: array
        isModified:
          description: True if this user was given additional permissions beyond what
            they're granted via their permission role
          type: boolean
      required:
      - canAdminClientAPIGlobalTokens
      - canAdminSearch
      - canCreateAnnoucements
      - canInsightsDashboard
      - createUgcTags
      - editDocumentTags
    CustomFieldValueStr:
      properties:
        strText:
          description: Text field for string value.
          type: string
      required:
      - strText
    CustomFieldValueHyperlink:
      properties:
        urlAnchor:
          description: Anchor text for hyperlink.
          type: string
        urlLink:
          description: Link for this URL.
          type: string
      required:
      - urlAnchor
      - urlLink
    CustomFieldValuePerson:
      properties:
        person:
          $ref: '#/components/schemas/Person'
    CustomFieldValue:
      oneOf:
      - $ref: '#/components/schemas/CustomFieldValueStr'
      - $ref: '#/components/schemas/CustomFieldValueHyperlink'
      - $ref: '#/components/schemas/CustomFieldValuePerson'
    CustomFieldData:
      properties:
        label:
          description: A user-facing label for this field.
          type: string
        values:
          items:
            $ref: '#/components/schemas/CustomFieldValue'
          type: array
        displayable:
          default: true
          description: Determines whether the client should display this custom field
          type: boolean
      required:
      - displayable
      - label
      - values
    TimeInterval:
      properties:
        start:
          description: The RFC3339 timestamp formatted start time of this event.
          type: string
        end:
          description: The RFC3339 timestamp formatted end time of this event.
          type: string
      required:
      - end
      - start
    AnonymousEvent:
      description: "A generic, light-weight calendar event."
      properties:
        time:
          $ref: '#/components/schemas/TimeInterval'
        eventType:
          description: "The nature of the event, for example \"out of office\"."
          enum:
          - DEFAULT
          - OUT_OF_OFFICE
          type: string
      type: object
    IconConfig:
      description: Defines how to render an icon
      example:
        color: '#343CED'
        key: person_icon
        iconType: GLYPH
        name: user
      properties:
        generatedBackgroundColorKey:
          type: string
        color:
          type: string
        key:
          type: string
        iconType:
          enum:
          - COLLECTION
          - CUSTOM
          - DATASOURCE
          - DATASOURCE_INSTANCE
          - FAVICON
          - FILE_TYPE
          - GENERATED_BACKGROUND
          - GLYPH
          - MIME_TYPE
          - NO_ICON
          - PERSON
          - REACTIONS
          - URL
          type: string
        name:
          description: "The name of the icon if applicable, e.g. the glyph name for\
            \ IconType.GLYPH icons"
          type: string
        url:
          description: "The URL to an image to be displayed if applicable, e.g. the\
            \ url for iconType.URL icons"
          type: string
    Badge:
      description: Displays a user's accomplishment or milestone
      example:
        key: deployment_name_new_hire
        displayName: New hire
        iconConfig:
        - $ref: ../../shared/common.yaml#/components/schemas/IconConfig/example
      properties:
        key:
          description: An auto generated unique identifier.
          type: string
        displayName:
          description: The badge name displayed to users
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        pinned:
          description: The badge should be shown on the PersonAttribution
          type: boolean
      type: object
    PersonMetadata:
      example:
        department: Movies
        email: george@example.com
        location: "Hollywood, CA"
        phone: 6505551234
        photoUrl: https://example.com/george.jpg
        startDate: 2000-01-23
        title: Actor
      properties:
        type:
          enum:
          - FULL_TIME
          - CONTRACTOR
          - NON_EMPLOYEE
          example: FULL_TIME
          type: string
        firstName:
          description: The first name of the person
          type: string
        lastName:
          description: The last name of the person
          type: string
        title:
          description: Job title.
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally
            applies to bigger companies with multiple distinct businesses.
          type: string
        department:
          description: "An organizational unit where everyone has a similar task,\
            \ e.g. `Engineering`."
          type: string
        teams:
          description: Info about the employee's team(s).
          items:
            $ref: '#/components/schemas/PersonTeam'
          type: array
        departmentCount:
          description: The number of people in this person's department.
          type: integer
        email:
          description: The user's primary email address
          type: string
        aliasEmails:
          description: "Additional email addresses of this user beyond the primary,\
            \ if any."
          items:
            type: string
          type: array
        location:
          description: User facing string representing the person's location.
          type: string
        structuredLocation:
          $ref: '#/components/schemas/StructuredLocation'
        externalProfileLink:
          description: Link to a customer's internal profile page. This is set to
            '#' when no link is desired.
          type: string
        manager:
          $ref: '#/components/schemas/Person'
        managementChain:
          description: The chain of reporting in the company as far up as it goes.
            The last entry is this person's direct manager.
          items:
            $ref: '#/components/schemas/Person'
          type: array
        phone:
          description: Phone number as a number string.
          type: string
        photoUrl:
          description: "The URL of the person's avatar. Public, glean-authenticated\
            \ and Base64 encoded data URLs are all valid (but not third-party-authenticated\
            \ URLs)."
          type: string
        uneditedPhotoUrl:
          description: The original photo URL of the person's avatar before any edits
            they made are applied
          type: string
        bannerUrl:
          description: The URL of the person's banner photo.
          type: string
        reports:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        startDate:
          description: The date when the employee started.
          format: date
          type: string
        endDate:
          description: "If a former employee, the last date of employment."
          format: date
          type: string
        bio:
          description: Short biography or mission statement of the employee.
          type: string
        pronoun:
          description: "She/her, He/his or other pronoun."
          type: string
        orgSizeCount:
          description: "The total recursive size of the people reporting to this person,\
            \ or 1"
          type: integer
        directReportsCount:
          description: "The total number of people who directly report to this person,\
            \ or 0"
          type: integer
        preferredName:
          description: "The preferred name of the person, or a nickname."
          type: string
        socialNetwork:
          description: List of social network profiles.
          items:
            $ref: '#/components/schemas/SocialNetwork'
          type: array
        datasourceProfile:
          description: List of profiles this user has in different datasources / tools
            that they use.
          items:
            $ref: '#/components/schemas/DatasourceProfile'
          type: array
        querySuggestions:
          $ref: '#/components/schemas/QuerySuggestionList'
        peopleDistance:
          description: List of people and distances to those people from this person.
            Optionally with metadata.
          items:
            $ref: '#/components/schemas/PersonDistance'
          type: array
        inviteInfo:
          $ref: '#/components/schemas/InviteInfo'
        isSignedUp:
          description: Whether the user has signed into Glean at least once.
          type: boolean
        lastExtensionUse:
          description: The last time the user has used the Glean extension in ISO
            8601 format.
          format: date-time
          type: string
        permissions:
          $ref: '#/components/schemas/Permissions'
        customFields:
          description: User customizable fields for additional people information.
          items:
            $ref: '#/components/schemas/CustomFieldData'
          type: array
        loggingId:
          description: "The logging id of the person used in scrubbed logs, tracking\
            \ GA metrics."
          type: string
        startDatePercentile:
          description: "Percentage of the company that started strictly after this\
            \ person. Between [0,100)."
          format: float
          type: number
        busyEvents:
          description: "Intervals of busy time for this person, along with the type\
            \ of event they're busy with."
          items:
            $ref: '#/components/schemas/AnonymousEvent'
          type: array
        profileBoolSettings:
          additionalProperties:
            type: boolean
          description: flag settings to indicate user profile settings for certain
            items
          type: object
        badges:
          description: The badges that a user has earned over their lifetime.
          items:
            $ref: '#/components/schemas/Badge'
          type: array
    DocumentVisibility:
      description: The level of visibility of the document as understood by our system.
        PRIVATE - Only one person is able to see the document SPECIFIC_PEOPLE_AND_GROUPS
        - Only specific people and/or groups can see the document DOMAIN_LINK - Anyone
        in the domain with the link can see the document DOMAIN_VISIBLE - Anyone in
        the domain can search for the document PUBLIC_LINK - Anyone with the link
        can see the document PUBLIC_VISIBLE - Anyone on the internet can search for
        the document
      enum:
      - PRIVATE
      - SPECIFIC_PEOPLE_AND_GROUPS
      - DOMAIN_LINK
      - DOMAIN_VISIBLE
      - PUBLIC_LINK
      - PUBLIC_VISIBLE
      type: string
    Reaction:
      properties:
        type:
          type: string
        count:
          description: The count of the reaction type on the document.
          type: integer
        reactors:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        reactedByViewer:
          description: Whether the user in context reacted with this type to the document.
          type: boolean
    Share:
      description: Search endpoint will only fill out numDays ago since that's all
        we need to display shared badge; docmetadata endpoint will fill out all the
        fields so that we can display shared badge tooltip
      properties:
        numDaysAgo:
          description: The number of days that has passed since the share happened
          type: integer
        sharer:
          $ref: '#/components/schemas/Person'
        sharingDocument:
          $ref: '#/components/schemas/Document'
      required:
      - numDaysAgo
    DocumentInteractions:
      properties:
        numComments:
          description: The count of comments (thread replies in the case of slack).
          type: integer
        numReactions:
          description: The count of reactions on the document.
          type: integer
        reactions:
          deprecated: true
          description: To be deprecated in favor of reacts. A (potentially non-exhaustive)
            list of reactions for the document.
          items:
            type: string
          type: array
        reacts:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
        shares:
          description: Describes instances of someone posting a link to this document
            in one of our indexed datasources.
          items:
            $ref: '#/components/schemas/Share'
          type: array
        visitorCount:
          $ref: '#/components/schemas/CountInfo'
    ViewerInfo:
      properties:
        role:
          deprecated: true
          description: DEPRECATED - use permissions instead. Viewer's role on the
            specific document.
          enum:
          - ANSWER_MODERATOR
          - OWNER
          - VIEWER
          type: string
        lastViewedTime:
          format: date-time
          type: string
    IndexStatus:
      properties:
        lastCrawledTime:
          description: When the document was last crawled
          format: date-time
          type: string
        lastIndexedTime:
          description: When the document was last indexed
          format: date-time
          type: string
    DocumentMetadata:
      example:
        container: container
        parentId: JIRA_EN-1337
        createTime: 2000-01-23T04:56:07.000Z
        datasource: datasource
        author:
          name: name
        documentId: documentId
        updateTime: 2000-01-23T04:56:07.000Z
        mimeType: mimeType
        objectType: Feature Request
        components:
        - Backend
        - Networking
        status:
        - Done
        customData:
          someCustomField: someCustomValue
      properties:
        datasource:
          type: string
        datasourceInstance:
          description: The datasource instance from which the document was extracted.
          type: string
        objectType:
          description: "The type of the result. Interpretation is specific to each\
            \ datasource. (e.g. for Jira issues, this is the issue type such as Bug\
            \ or Feature Request)."
          type: string
        container:
          description: "The name of the container (higher level parent, not direct\
            \ parent) of the result. Interpretation is specific to each datasource\
            \ (e.g. Channels for Slack, Project for Jira). cf. parentId"
          type: string
        parentId:
          description: The id of the direct parent of the result. Interpretation is
            specific to each datasource (e.g. parent issue for Jira). cf. container
          type: string
        mimeType:
          type: string
        documentId:
          description: The index-wide unique identifier.
          type: string
        documentIdHash:
          description: Hash of documentId.
          type: string
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        author:
          $ref: '#/components/schemas/Person'
        owner:
          $ref: '#/components/schemas/Person'
        visibility:
          $ref: '#/components/schemas/DocumentVisibility'
        components:
          description: "A list of components this result is associated with. Interpretation\
            \ is specific to each datasource. (e.g. for Jira issues, these are [components](https://confluence.atlassian.com/jirasoftwarecloud/organizing-work-with-components-764478279.html).)"
          items:
            type: string
          type: array
        status:
          description: "The status or disposition of the result. Interpretation is\
            \ specific to each datasource. (e.g. for Jira issues, this is the issue\
            \ status such as Done, In Progress or Will Not Fix)."
          type: string
        statusCategory:
          description: The status category of the result. Meant to be more general
            than status. Interpretation is specific to each datasource.
          type: string
        pins:
          description: A list of stars associated with this result.  "Pin" is an older
            name.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
        priority:
          description: The document priority. Interpretation is datasource specific.
          type: string
        assignedTo:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        labels:
          description: A list of tags for the document. Interpretation is datasource
            specific.
          items:
            type: string
          type: array
        collections:
          description: A list of collections that the document belongs to.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        datasourceId:
          description: "The user-visible datasource specific id (e.g. Salesforce case\
            \ number for example, GitHub PR number)."
          type: string
        interactions:
          $ref: '#/components/schemas/DocumentInteractions'
        verification:
          $ref: '#/components/schemas/Verification'
        viewerInfo:
          $ref: '#/components/schemas/ViewerInfo'
        permissions:
          $ref: '#/components/schemas/ObjectPermissions'
        visitCount:
          $ref: '#/components/schemas/CountInfo'
        shortcuts:
          description: A list of shortcuts of which destination url is for the document.
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
        path:
          description: For file datasources like onedrive/github etc this has the
            path to the file
          type: string
        customData:
          additionalProperties:
            $ref: '#/components/schemas/CustomDataValue'
          description: Custom fields specific to individual datasources
          type: object
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        contactPerson:
          $ref: '#/components/schemas/Person'
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        indexStatus:
          $ref: '#/components/schemas/IndexStatus'
    DocumentSection:
      example:
        title: title
        url: url
      properties:
        title:
          description: The title of the document section (e.g. the section header).
          type: string
        url:
          description: The permalink of the document section.
          type: string
      type: object
    StructuredTextItem:
      properties:
        link:
          example: https://en.wikipedia.org/wiki/Diffuse_sky_radiation
          type: string
        document:
          $ref: '#/components/schemas/Document'
        text:
          example: "Because its wavelengths are shorter, blue light is more strongly\
            \ scattered than the longer-wavelength lights, red or green. Hence the\
            \ result that when looking at the sky away from the direct incident sunlight,\
            \ the human eye perceives the sky to be blue."
          type: string
    AnnouncementMutableProperties:
      example:
        thumbnail:
          photoId: photoId
          url: url
        emoji: emoji
        channel: MAIN
        banner:
          photoId: photoId
          url: url
        isPrioritized: true
        title: title
        body: null
        hideAttribution: true
        viewUrl: viewUrl
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        audienceFilters:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        sourceDocumentId: sourceDocumentId
      properties:
        startTime:
          description: The date and time at which the announcement becomes active.
          format: date-time
          type: string
        endTime:
          description: The date and time at which the announcement expires.
          format: date-time
          type: string
        title:
          description: The headline of the announcement.
          type: string
        body:
          $ref: '#/components/schemas/StructuredText'
        emoji:
          description: An emoji used to indicate the nature of the announcement.
          type: string
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        banner:
          $ref: '#/components/schemas/Thumbnail'
        audienceFilters:
          description: Filters which restrict who should see the announcement. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        sourceDocumentId:
          description: The Document ID of the Source Document this Announcement was
            created from (e.g. Slack thread).
          type: string
        hideAttribution:
          description: Whether or not to hide an author attribution.
          type: boolean
        channel:
          description: This determines whether this is a Social Feed post or a regular
            announcement.
          enum:
          - MAIN
          - SOCIAL_FEED
          type: string
        isPrioritized:
          description: Used by the Social Feed to pin posts to the front of the feed.
          type: boolean
        viewUrl:
          description: Url for viewing the announcement. It will be set to document
            url for announcements from other datasources e.g. simpplr. Can only be
            written when channel="SOCIAL_FEED".
          type: string
    AnnouncementCreateOrUpdateData:
      properties:
        id:
          description: "If editing an existing announcement, the announcement's ID."
          type: integer
        title:
          description: The headline of the announcement.
          type: string
        structuredText:
          $ref: '#/components/schemas/StructuredText'
        emoji:
          description: An emoji used to indicate the nature of the announcement.
          type: string
        startTime:
          description: "The date and time at which the announcement becomes active.\
            \ If omitted, the announement will become active immediately."
          format: date-time
          type: string
        endTime:
          description: The date and time at which the announcement expires.
          format: date-time
          type: string
        audienceFilters:
          description: Filters which restrict who should see the announcement. Values
            are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
      required:
      - endTime
      - title
    CreateAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/CreateAnnouncementRequest_allOf'
    DraftProperties:
      example:
        draftId: 342
      properties:
        draftId:
          description: The opaque id of the associated draft.
          type: integer
    UserActivity:
      example:
        actor:
          name: George Clooney
          obfuscatedId: abc123
        aggregateVisitCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        action: ADD
        timestamp: 0
      properties:
        actor:
          $ref: '#/components/schemas/Person'
        timestamp:
          description: Unix timestamp of the activity (in seconds since epoch UTC).
          type: integer
        action:
          description: The action for the activity
          enum:
          - ADD
          - ADD_REMINDER
          - CLICK
          - COMMENT
          - DELETE
          - DISMISS
          - EDIT
          - MENTION
          - MOVE
          - OTHER
          - RESTORE
          - UNKNOWN
          - VERIFY
          - VIEW
          type: string
        aggregateVisitCount:
          $ref: '#/components/schemas/CountInfo'
    Announcement:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/DraftProperties'
      - $ref: '#/components/schemas/PermissionedObject'
      - $ref: '#/components/schemas/Announcement_allOf'
    CreateDraftAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/CreateDraftAnnouncementRequest_allOf'
    DeleteAnnouncementRequest:
      example:
        id: 0
      properties:
        id:
          description: The opaque id of the announcement to be deleted.
          type: integer
      required:
      - id
    GetAnnouncementRequest:
      example:
        id: 0
      properties:
        id:
          description: The id of the announcement to be retrieved.
          type: integer
      required:
      - id
    AnnouncementError:
      example:
        errorType: INVALID_ID
      properties:
        errorType:
          enum:
          - INVALID_ID
          type: string
    GetAnnouncementResponse:
      example:
        trackingToken: trackingToken
        error:
          errorType: INVALID_ID
        announcement: null
      properties:
        announcement:
          $ref: '#/components/schemas/Announcement'
        trackingToken:
          description: An opaque token that represents this particular announcement.
            To be used for /feedback reporting.
          type: string
        error:
          $ref: '#/components/schemas/AnnouncementError'
    GetDraftAnnouncementResponse:
      example:
        error:
          errorType: INVALID_ID
        announcement: null
      properties:
        announcement:
          $ref: '#/components/schemas/Announcement'
        error:
          $ref: '#/components/schemas/AnnouncementError'
    AnnouncementChannel:
      description: This determines whether this is a Social Feed post or a regular
        announcement.
      enum:
      - MAIN
      - SOCIAL_FEED
      type: string
    ListAnnouncementsRequest:
      example:
        channel: null
      properties:
        channel:
          $ref: '#/components/schemas/AnnouncementChannel'
    ListAnnouncementsResponse:
      example:
        announcements:
        - null
        - null
      properties:
        announcements:
          description: List of announcements.
          items:
            $ref: '#/components/schemas/Announcement'
          type: array
    PreviewStructuredTextRequest:
      allOf:
      - $ref: '#/components/schemas/StructuredTextMutableProperties'
    PreviewStructuredTextResponse:
      example:
        structuredText: null
        docsInaccessibleToUser:
        - docsInaccessibleToUser
        - docsInaccessibleToUser
        combinedAnswerText: null
      properties:
        structuredText:
          $ref: '#/components/schemas/StructuredText'
        docsInaccessibleToUser:
          description: A list of links the user doesn't have access to.
          items:
            type: string
          type: array
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredText'
      required:
      - combinedAnswerText
      - structuredText
    UgcDraft:
      example:
        answer:
          sourceDocumentSpec: null
          questionVariations:
          - questionVariations
          - questionVariations
          bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
            \ sky is blue because blue light is more strongly scattered than longer-wavelength\
            \ light."
          question: Why is the sky blue?
          roles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          boardId: 0
          addedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          audienceFilters:
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          removedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
        announcement:
          thumbnail:
            photoId: photoId
            url: url
          emoji: emoji
          channel: MAIN
          banner:
            photoId: photoId
            url: url
          isPrioritized: true
          title: title
          body: null
          hideAttribution: true
          viewUrl: viewUrl
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          audienceFilters:
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          sourceDocumentId: sourceDocumentId
      properties:
        announcement:
          $ref: '#/components/schemas/AnnouncementMutableProperties'
        answer:
          $ref: '#/components/schemas/AnswerMutableProperties'
      type: object
    UgcType:
      enum:
      - ANNOUNCEMENTS_TYPE
      - ANSWERS_TYPE
      - COLLECTIONS_TYPE
      - SHORTCUTS_TYPE
      type: string
    PreviewUgcRequest:
      example:
        draft:
          answer:
            sourceDocumentSpec: null
            questionVariations:
            - questionVariations
            - questionVariations
            bodyText: "From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the\
              \ sky is blue because blue light is more strongly scattered than longer-wavelength\
              \ light."
            question: Why is the sky blue?
            roles:
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
            boardId: 0
            addedRoles:
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
            audienceFilters:
            - fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
            - fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
            removedRoles:
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
            - sourceDocumentSpec: null
              role: null
              person:
                name: George Clooney
                obfuscatedId: abc123
              group:
                name: name
                id: id
                type: null
          announcement:
            thumbnail:
              photoId: photoId
              url: url
            emoji: emoji
            channel: MAIN
            banner:
              photoId: photoId
              url: url
            isPrioritized: true
            title: title
            body: null
            hideAttribution: true
            viewUrl: viewUrl
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
            audienceFilters:
            - fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
            - fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
            sourceDocumentId: sourceDocumentId
        draftSpec: null
        type: null
      properties:
        draft:
          $ref: '#/components/schemas/UgcDraft'
        draftSpec:
          $ref: '#/components/schemas/DocumentSpec'
        type:
          $ref: '#/components/schemas/UgcType'
      type: object
    PreviewUgcResponse:
      example:
        answer: null
        announcement: null
      properties:
        announcement:
          $ref: '#/components/schemas/Announcement'
        answer:
          $ref: '#/components/schemas/Answer'
    PublishDraftAnnouncementRequest:
      example:
        id: 0
      properties:
        id:
          description: The opaque id of the draft announcement to be published.
          type: integer
      required:
      - id
    UnpublishAnnouncementRequest:
      example:
        id: 0
      properties:
        id:
          description: The opaque id of the announcement to be unpublished.
          type: integer
      required:
      - id
    UpdateAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/UpdateAnnouncementRequest_allOf'
    UpdateDraftAnnouncementRequest:
      allOf:
      - $ref: '#/components/schemas/AnnouncementMutableProperties'
      - $ref: '#/components/schemas/UpdateDraftAnnouncementRequest_allOf'
    AddedCollections:
      properties:
        addedCollections:
          description: IDs of collections to which a document is added.
          items:
            type: integer
          type: array
    AnswerCreationData:
      allOf:
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/AddedCollections'
      - $ref: '#/components/schemas/AnswerCreationData_allOf'
    CreateAnswerRequest:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/AnswerCreationData'
      required:
      - data
    DeleteAnswerRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - required:
        - id
        type: object
    RemovedCollections:
      properties:
        removedCollections:
          description: IDs of collections from which a document is removed.
          items:
            type: integer
          type: array
    EditAnswerRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
      - $ref: '#/components/schemas/AnswerMutableProperties'
      - $ref: '#/components/schemas/AddedCollections'
      - $ref: '#/components/schemas/RemovedCollections'
      - $ref: '#/components/schemas/EditAnswerRequest_allOf'
    GetAnswerRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerId'
      - $ref: '#/components/schemas/AnswerDocId'
    AnswerResult:
      example:
        trackingToken: trackingToken
        answer: null
      properties:
        answer:
          $ref: '#/components/schemas/Answer'
        trackingToken:
          description: An opaque token that represents this particular answer. To
            be used for /feedback reporting.
          type: string
      required:
      - answer
    GetAnswerError:
      example:
        errorType: NO_PERMISSION
        answerAuthor:
          name: George Clooney
          obfuscatedId: abc123
      properties:
        errorType:
          enum:
          - NO_PERMISSION
          - INVALID_ID
          type: string
        answerAuthor:
          $ref: '#/components/schemas/Person'
    GetAnswerResponse:
      example:
        trackingToken: trackingToken
        answer: null
        answerResult:
          trackingToken: trackingToken
          answer: null
        error:
          errorType: NO_PERMISSION
          answerAuthor:
            name: George Clooney
            obfuscatedId: abc123
      properties:
        answerResult:
          $ref: '#/components/schemas/AnswerResult'
        error:
          $ref: '#/components/schemas/GetAnswerError'
        answer:
          $ref: '#/components/schemas/Answer'
        trackingToken:
          deprecated: true
          description: DEPRECATED - use answerResult tracking token instead. An opaque
            token that represents this particular answer. To be used for /feedback
            reporting.
          type: string
    ListAnswersRequest:
      example:
        boardId: 0
      properties:
        boardId:
          description: The Answer Board Id to list answers on.
          type: integer
    ListAnswersResponse:
      example:
        answerResults:
        - trackingToken: trackingToken
          answer: null
        - trackingToken: trackingToken
          answer: null
        userRole: REGULAR
      properties:
        answerResults:
          description: List of answers with tracking tokens.
          items:
            $ref: '#/components/schemas/AnswerResult'
          type: array
        userRole:
          deprecated: true
          description: DEPRECATED - use permissions instead. User's role for Answers
            in their workplace.
          enum:
          - REGULAR
          - ANSWER_MODERATOR
          type: string
      required:
      - answerResults
      - answers
    UpdateAnswerLikesRequest:
      example:
        answerId: 3
        answerDocId: ANSWERS_answer_3
        action: LIKE
      properties:
        answerId:
          description: The opaque id of the answer to like.
          example: 3
          type: integer
        answerDocId:
          description: "Internal document id of the answer. We support using the document\
            \ id for cases where the client doesn't have the integer id available.\
            \ If both are available, using the integer id is preferred."
          example: ANSWERS_answer_3
          type: string
        action:
          enum:
          - LIKE
          - UNLIKE
          type: string
      required:
      - action
      - answerId
    UpdateAnswerLikesResponse:
      example:
        likes:
          likedByUser: true
          likedBy:
          - createTime: 2000-01-23T04:56:07.000+00:00
            user:
              name: George Clooney
              obfuscatedId: abc123
          - createTime: 2000-01-23T04:56:07.000+00:00
            user:
              name: George Clooney
              obfuscatedId: abc123
          numLikes: 0
      properties:
        likes:
          $ref: '#/components/schemas/AnswerLikes'
      required:
      - likes
    CreateAnswerBoardRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerBoardMutableProperties'
    AnswerBoardResult:
      example:
        trackingToken: trackingToken
        board: null
      properties:
        board:
          $ref: '#/components/schemas/AnswerBoard'
        trackingToken:
          description: An opaque token that represents this particular Answer Board.
            To be used for /feedback reporting.
          type: string
      required:
      - board
    AnswerBoardError:
      example:
        errorCode: NAME_EXISTS
      properties:
        errorCode:
          enum:
          - NAME_EXISTS
          - NOT_FOUND
          - NO_PERMISSIONS
          type: string
      required:
      - errorCode
    CreateAnswerBoardResponse:
      example:
        boardResult:
          trackingToken: trackingToken
          board: null
        error:
          errorCode: NAME_EXISTS
      properties:
        boardResult:
          $ref: '#/components/schemas/AnswerBoardResult'
        error:
          $ref: '#/components/schemas/AnswerBoardError'
    DeleteAnswerBoardsRequest:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          description: The IDs of the Answer Boards to delete.
          items:
            type: integer
          type: array
      required:
      - ids
    DeleteAnswerBoardsResponse:
      example:
        error:
          errorCode: NAME_EXISTS
      properties:
        error:
          $ref: '#/components/schemas/AnswerBoardError'
    EditAnswerBoardRequest:
      allOf:
      - $ref: '#/components/schemas/AnswerBoardMutableProperties'
      - $ref: '#/components/schemas/EditAnswerBoardRequest_allOf'
    EditAnswerBoardResponse:
      example:
        boardResult:
          trackingToken: trackingToken
          board: null
        error:
          errorCode: NAME_EXISTS
      properties:
        boardResult:
          $ref: '#/components/schemas/AnswerBoardResult'
        error:
          $ref: '#/components/schemas/AnswerBoardError'
    GetAnswerBoardRequest:
      example:
        id: 0
      properties:
        id:
          description: The id of the Answer Board to be retrieved.
          type: integer
      required:
      - id
    GetAnswerBoardResponse:
      example:
        boardResult:
          trackingToken: trackingToken
          board: null
        error:
          errorCode: NAME_EXISTS
      properties:
        boardResult:
          $ref: '#/components/schemas/AnswerBoardResult'
        error:
          $ref: '#/components/schemas/AnswerBoardError'
    ListAnswerBoardsRequest:
      example:
        withRoles: true
        withAudience: true
      properties:
        withAudience:
          description: Whether to include the audience filters with the listed Answer
            Boards.
          type: boolean
        withRoles:
          description: Whether to include the editor roles with the listed Answer
            Boards.
          type: boolean
    ListAnswerBoardsResponse:
      example:
        boardResults:
        - trackingToken: trackingToken
          board: null
        - trackingToken: trackingToken
          board: null
      properties:
        boardResults:
          description: "List of all Answer Boards, no Answers are included."
          items:
            $ref: '#/components/schemas/AnswerBoardResult'
          type: array
      required:
      - boardResults
    CheckActasAuthResponse:
      example:
        isValid: true
        errMsg: errMsg
      properties:
        isValid:
          description: Whether the request supplied a valid actas auth token.
          type: boolean
        errMsg:
          description: Error message
          type: string
      required:
      - isValid
    CheckAuthResponse:
      example:
        isValid: true
      properties:
        isValid:
          description: Whether the request supplied a valid auth cookie
          type: boolean
      required:
      - isValid
    CreateAuthTokenResponse:
      example:
        expirationTime: 0
        token: token
      properties:
        token:
          description: An authentication token that can be passed to any endpoint
            via Bearer Authentication
          type: string
        expirationTime:
          description: Unix timestamp for when this token expires (in seconds since
            epoch UTC).
          format: int64
          type: integer
      required:
      - expirationTime
      - token
    CollectionItemDescriptor:
      allOf:
      - $ref: '#/components/schemas/CollectionItemMutableProperties'
      example:
        itemType: DOCUMENT
        newNextItemId: newNextItemId
        documentId: documentId
        url: url
      properties:
        url:
          description: The URL of the item being added.
          type: string
        documentId:
          description: The document ID of the item being added if it's a Glean-indexed
            document.
          type: string
        newNextItemId:
          description: "The (optional) ItemId of the next CollectionItem in sequence.\
            \ If omitted, will be added to the end of the Collection"
          type: string
        itemType:
          enum:
          - DOCUMENT
          - TEXT
          - URL
          type: string
    AddCollectionItemsRequest:
      example:
        addedCollectionItemDescriptors:
        - itemType: DOCUMENT
          newNextItemId: newNextItemId
          documentId: documentId
          url: url
        - itemType: DOCUMENT
          newNextItemId: newNextItemId
          documentId: documentId
          url: url
        collectionId: 0.8008281904610115
      properties:
        collectionId:
          description: The ID of the Collection to add items to.
          type: number
        addedCollectionItemDescriptors:
          description: The CollectionItemDescriptors of the items being added.
          items:
            $ref: '#/components/schemas/CollectionItemDescriptor'
          type: array
      required:
      - collectionId
    AddCollectionItemsError:
      example:
        errorType: EXISTING_ITEM
      properties:
        errorType:
          enum:
          - EXISTING_ITEM
          type: string
    AddCollectionItemsResponse:
      example:
        collection: null
        error:
          errorType: EXISTING_ITEM
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        error:
          $ref: '#/components/schemas/AddCollectionItemsError'
    CreateCollectionRequest:
      allOf:
      - $ref: '#/components/schemas/CollectionMutableProperties'
      - $ref: '#/components/schemas/CreateCollectionRequest_allOf'
    CollectionError:
      example:
        errorCode: NAME_EXISTS
      properties:
        errorCode:
          enum:
          - NAME_EXISTS
          - NOT_FOUND
          - COLLECTION_PINNED
          - CONCURRENT_HIERARCHY_EDIT
          - HEIGHT_VIOLATION
          - WIDTH_VIOLATION
          - NO_PERMISSIONS
          type: string
      required:
      - errorCode
    CreateCollectionResponse:
      allOf:
      - $ref: '#/components/schemas/Collection'
      - $ref: '#/components/schemas/CollectionError'
      - $ref: '#/components/schemas/CreateCollectionResponse_allOf'
    DeleteCollectionRequest:
      example:
        allowedDatasource: allowedDatasource
        ids:
        - 0
        - 0
      properties:
        ids:
          description: The IDs of the collections to delete.
          items:
            type: integer
          type: array
        allowedDatasource:
          description: The datasource allowed in the collection to be deleted.
          type: string
      required:
      - ids
    DeleteCollectionItemRequest:
      example:
        itemId: itemId
        documentId: documentId
        collectionId: 0.8008281904610115
      properties:
        collectionId:
          description: The ID of the Collection to remove an item in.
          type: number
        itemId:
          description: The item ID of the CollectionItem to remove from this Collection.
          type: string
        documentId:
          description: The (optional) document ID of the CollectionItem to remove
            from this Collection if this is a Glean-indexed document.
          type: string
      required:
      - collectionId
      - itemId
    DeleteCollectionItemResponse:
      example:
        collection: null
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
    EditCollectionRequest:
      allOf:
      - $ref: '#/components/schemas/CollectionMutableProperties'
      - $ref: '#/components/schemas/EditCollectionRequest_allOf'
    EditCollectionResponse:
      allOf:
      - $ref: '#/components/schemas/Collection'
      - $ref: '#/components/schemas/CollectionError'
      - $ref: '#/components/schemas/CreateCollectionResponse_allOf'
    EditCollectionItemRequest:
      allOf:
      - $ref: '#/components/schemas/CollectionItemMutableProperties'
      - type: object
      example:
        itemId: itemId
        collectionId: 0
      properties:
        collectionId:
          description: The ID of the Collection to edit CollectionItems in.
          type: integer
        itemId:
          description: The ID of the CollectionItem to edit.
          type: string
      required:
      - collectionId
      - itemId
    EditCollectionItemResponse:
      example:
        collection: null
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
    EditDocumentCollectionsRequest:
      allOf:
      - $ref: '#/components/schemas/AddedCollections'
      - $ref: '#/components/schemas/RemovedCollections'
      - $ref: '#/components/schemas/EditDocumentCollectionsRequest_allOf'
    EditDocumentCollectionsResponse:
      example:
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
      properties:
        document:
          $ref: '#/components/schemas/Document'
    GetCollectionRequest:
      example:
        allowedDatasource: allowedDatasource
        withItems: true
        id: 0
        withHierarchy: true
      properties:
        id:
          description: The id of the collection to be retrieved.
          type: integer
        withItems:
          description: "Whether or not to include the Collection Items in this Collection.\
            \ Only request if absolutely required, as this is expensive."
          type: boolean
        withHierarchy:
          description: Whether or not to include the top level Collection in this
            Collection's hierarchy.
          type: boolean
        allowedDatasource:
          description: The datasource allowed in the collection returned.
          type: string
      required:
      - id
    GetCollectionResponse:
      example:
        trackingToken: trackingToken
        rootCollection: null
        collection: null
        error:
          errorCode: NAME_EXISTS
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        rootCollection:
          $ref: '#/components/schemas/Collection'
        trackingToken:
          description: An opaque token that represents this particular collection.
            To be used for /feedback reporting.
          type: string
        error:
          $ref: '#/components/schemas/CollectionError'
    ListCollectionsRequest:
      example:
        includeAudience: true
        includeRoles: true
        allowedDatasource: allowedDatasource
      properties:
        includeAudience:
          description: Whether to include the audience filters with the listed collections.
          type: boolean
        includeRoles:
          description: Whether to include the editor roles with the listed collections.
          type: boolean
        allowedDatasource:
          description: |-
            The datasource type this collection can hold.
            ANSWERS - for collections representing answer boards
          type: string
    ListCollectionsResponse:
      example:
        collections:
        - null
        - null
      properties:
        collections:
          description: "List of all collections, no collection items are fetched."
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - collections
    MoveCollectionItemRequest:
      example:
        itemId: itemId
        newNextItemId: newNextItemId
        collectionId: 0
      properties:
        collectionId:
          description: The ID of the Collection to move items in.
          type: integer
        itemId:
          description: The item ID of the item being moved.
          type: string
        newNextItemId:
          description: "The (optional) item ID of the item that is the new next of\
            \ itemId, or empty if this is now the last item. This item does not move,\
            \ it's used as a reference position to put the itemId in the right position."
          type: string
      required:
      - collectionId
      - itemId
    MoveCollectionItemResponse:
      example:
        collection: null
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
    PinCollectionRequest:
      example:
        data:
          id: 0
          target:
            category: null
            value: value
            target: null
        action: PIN
        id: 6
        category: null
      properties:
        action:
          default: PIN
          description: Whether to pin or unpin
          enum:
          - PIN
          - UNPIN
          type: string
        data:
          $ref: '#/components/schemas/CollectionPinMetadata'
        id:
          description: DEPRECTED - The id of the collection to be pinned. Insted use
            data.id.
          type: integer
        category:
          $ref: '#/components/schemas/CollectionPinnableCategories'
      required:
      - action
      - category
      - id
    DisplayableListSource:
      properties:
        source:
          description: The type of data that backs this displayable list
          enum:
          - SAVED_SEARCH
          - COLLECTION
          type: string
    DisplayableListFormat:
      properties:
        format:
          description: defines how to render this particular displayable list card
          enum:
          - LIST
          type: string
    DisplayableListItemUIConfig:
      description: UI configurations for each item of the list
      properties:
        showNewIndicator:
          description: show a "New" pill next to the item
          type: boolean
      type: object
    DisplayableListConfig:
      allOf:
      - $ref: '#/components/schemas/DisplayableListFormat'
      - $ref: '#/components/schemas/DisplayableListConfig_allOf'
      description: UI specific configurations for a displayable list
      type: object
    DisplayableList:
      allOf:
      - $ref: '#/components/schemas/DisplayableListSource'
      - $ref: '#/components/schemas/DisplayableList_allOf'
    CreateDisplayableListsRequest:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DisplayableList'
          type: array
      required:
      - items
    CreateDisplayableListsResponse:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DisplayableList'
          type: array
      required:
      - items
    DeleteDisplayableListsRequest:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
      required:
      - ids
    GetDisplayableListsRequest:
      example:
        ids:
        - 0
        - 0
      properties:
        ids:
          items:
            format: int32
            type: integer
          type: array
      required:
      - ids
    GetDisplayableListsResponse:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DisplayableList'
          type: array
      required:
      - items
    UpdateDisplayableListsRequest:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DisplayableList'
          type: array
      required:
      - items
    UpdateDisplayableListsResponse:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/DisplayableList'
          type: array
      required:
      - items
    ImageType:
      description: The type of the image
      enum:
      - USER
      - BACKGROUND
      - UGC
      - LOGO
      - HEADER
      - ICON
      type: string
    ImageMetadata:
      example:
        ext: ext
        id: id
        type: null
        ds: ds
        cid: cid
      properties:
        type:
          $ref: '#/components/schemas/ImageType'
        id:
          description: "ID, if a specific entity/type is requested. The id may have\
            \ different meaning for each type. For USER, it is user id For UGC, it\
            \ is the id of the content For ICON, the doctype."
          type: string
        ds:
          description: "A specific datasource for which an image is requested for.\
            \ The ds may have different meaning for each type and can also be empty\
            \ for some. For USER, it is empty or datasource the icon is asked for.\
            \ For UGC, it is the UGC datasource. For ICON, it is datasource instance\
            \ the icon is asked for."
          type: string
        cid:
          description: Content id to differentitate multiple images that can have
            the same type and datasource e.g. thumnail or image from content of UGC.
            It can also be empty.
          type: string
        ext:
          description: Extension the image is saved with. The extension data is deduced
            from content type for image uploads.
          type: string
      required:
      - type
    UploadImageResponse:
      example:
        metadata:
          ext: ext
          id: id
          type: null
          ds: ds
          cid: cid
        url: url
      properties:
        url:
          description: Url of the uploaded image.
          type: string
        metadata:
          $ref: '#/components/schemas/ImageMetadata'
      required:
      - url
    InsightsRequest:
      example:
        categories:
        - ANNOUNCEMENTS
        - ANNOUNCEMENTS
        departments:
        - departments
        - departments
        dayRange:
          minDaysFromNow: 6
          start:
            daysFromNow: 5
            epochSeconds: 5
          maxDaysFromNow: 1
          end:
            daysFromNow: 5
            epochSeconds: 5
      properties:
        categories:
          description: Categories of data requested. Request can include single or
            multiple types.
          items:
            enum:
            - ANNOUNCEMENTS
            - ANSWERS
            - COLLECTIONS
            - CONTENT
            - QUERIES
            - SHORTCUTS
            - USERS
            type: string
          type: array
        departments:
          description: "Departments that the data is requested for. If the empty,\
            \ corresponds to whole company."
          items:
            type: string
          type: array
        dayRange:
          $ref: '#/components/schemas/Period'
      required:
      - categories
    LabeledCountInfo:
      example:
        countInfo:
        - period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        - period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        label: label
      properties:
        label:
          description: Label for the included count information.
          type: string
        countInfo:
          description: List of data points for counts for a given date period.
          items:
            $ref: '#/components/schemas/CountInfo'
          type: array
      required:
      - label
    UserActivityInsight:
      example:
        activityCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        lastActivityTimestamp: 7
        activity: ALL
        user:
          name: George Clooney
          obfuscatedId: abc123
        activeDayCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
      properties:
        user:
          $ref: '#/components/schemas/Person'
        activity:
          description: "Activity e.g. search, home page visit or all."
          enum:
          - ALL
          - SEARCH
          type: string
        lastActivityTimestamp:
          description: Unix timestamp of the last activity (in seconds since epoch
            UTC).
          type: integer
        activityCount:
          $ref: '#/components/schemas/CountInfo'
        activeDayCount:
          $ref: '#/components/schemas/CountInfo'
      required:
      - activity
      - user
    UserInsightsResponse:
      example:
        lastLogTimestamp: 2
        inactiveInsights:
        - activityCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          lastActivityTimestamp: 7
          activity: ALL
          user:
            name: George Clooney
            obfuscatedId: abc123
          activeDayCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        - activityCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          lastActivityTimestamp: 7
          activity: ALL
          user:
            name: George Clooney
            obfuscatedId: abc123
          activeDayCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        departments:
        - departments
        - departments
        activityInsights:
        - activityCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          lastActivityTimestamp: 7
          activity: ALL
          user:
            name: George Clooney
            obfuscatedId: abc123
          activeDayCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        - activityCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          lastActivityTimestamp: 7
          activity: ALL
          user:
            name: George Clooney
            obfuscatedId: abc123
          activeDayCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
      properties:
        lastLogTimestamp:
          description: Unix timestamp of the last activity processed to make the response
            (in seconds since epoch UTC).
          type: integer
        activityInsights:
          description: Insights for all active users with respect to set of actions.
          items:
            $ref: '#/components/schemas/UserActivityInsight'
          type: array
        inactiveInsights:
          description: Insights for all in inactive users with respect to set of actions
            and time period. Activity count will be set to 0.
          items:
            $ref: '#/components/schemas/UserActivityInsight'
          type: array
        departments:
          description: list of departments applicable for users tab.
          items:
            type: string
          type: array
    DocumentInsight:
      example:
        visitorCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        viewCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
      properties:
        document:
          $ref: '#/components/schemas/Document'
        viewCount:
          $ref: '#/components/schemas/CountInfo'
        visitorCount:
          $ref: '#/components/schemas/CountInfo'
      required:
      - document
    ContentInsightsResponse:
      example:
        minDepartmentSizeThreshold: 3
        minVisitorThreshold: 2
        lastLogTimestamp: 9
        documentInsights:
        - visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          viewCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        - visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          viewCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        departments:
        - departments
        - departments
      properties:
        lastLogTimestamp:
          description: Unix timestamp of the last activity processed to make the response
            (in seconds since epoch UTC).
          type: integer
        documentInsights:
          description: Insights for documents.
          items:
            $ref: '#/components/schemas/DocumentInsight'
          type: array
        departments:
          description: list of departments applicable for contents tab.
          items:
            type: string
          type: array
        minDepartmentSizeThreshold:
          description: "Min threshold in size of departments while populating results,\
            \ otherwise 0."
          type: integer
        minVisitorThreshold:
          description: Minimum number of visitors to a document required to be included
            in insights.
          type: integer
    QueryInsight:
      example:
        clickCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        query: query
        searchCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        searchorCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        searchWithClickCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        similarQueries:
        - null
        - null
      properties:
        query:
          description: The query string the information is about.
          type: string
        searchCount:
          $ref: '#/components/schemas/CountInfo'
        searchorCount:
          $ref: '#/components/schemas/CountInfo'
        searchWithClickCount:
          $ref: '#/components/schemas/CountInfo'
        clickCount:
          $ref: '#/components/schemas/CountInfo'
        similarQueries:
          description: list of similar queries to current one.
          items:
            $ref: '#/components/schemas/QueryInsight'
          type: array
      required:
      - query
    QueryInsightsResponse:
      example:
        minVisitorThreshold: 7
        lastLogTimestamp: 4
        lowPerformingQueryInsights:
        - clickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          query: query
          searchCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchWithClickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          similarQueries:
          - null
          - null
        - clickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          query: query
          searchCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchWithClickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          similarQueries:
          - null
          - null
        queryInsights:
        - clickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          query: query
          searchCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchWithClickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          similarQueries:
          - null
          - null
        - clickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          query: query
          searchCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          searchWithClickCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          similarQueries:
          - null
          - null
        departments:
        - departments
        - departments
      properties:
        lastLogTimestamp:
          description: Unix timestamp of the last activity processed to make the response
            (in seconds since epoch UTC).
          type: integer
        queryInsights:
          description: Insights for queries.
          items:
            $ref: '#/components/schemas/QueryInsight'
          type: array
        lowPerformingQueryInsights:
          description: Insights for low performing queries without good results.
          items:
            $ref: '#/components/schemas/QueryInsight'
          type: array
        departments:
          description: list of departments applicable for queries tab.
          items:
            type: string
          type: array
        minVisitorThreshold:
          description: "Min threshold in number of visitors while populating results,\
            \ otherwise 0."
          type: integer
    ShortcutInsight:
      example:
        shortcut: null
        visitCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        visitorCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        visitCount:
          $ref: '#/components/schemas/CountInfo'
        visitorCount:
          $ref: '#/components/schemas/CountInfo'
      required:
      - shortcut
    ShortcutInsightsResponse:
      example:
        minVisitorThreshold: 1
        lastLogTimestamp: 1
        shortcutInsights:
        - shortcut: null
          visitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        - shortcut: null
          visitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
        departments:
        - departments
        - departments
      properties:
        lastLogTimestamp:
          description: Unix timestamp of the last activity processed to make the response
            (in seconds since epoch UTC).
          type: integer
        shortcutInsights:
          description: Insights for shortcuts.
          items:
            $ref: '#/components/schemas/ShortcutInsight'
          type: array
        departments:
          description: list of departments applicable for shortcuts tab.
          items:
            type: string
          type: array
        minVisitorThreshold:
          description: "Min threshold in number of visitors while populating results,\
            \ otherwise 0."
          type: integer
    InsightsResponse:
      example:
        timeseries:
        - countInfo:
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          label: label
        - countInfo:
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          - period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          label: label
        collections:
          minDepartmentSizeThreshold: 3
          minVisitorThreshold: 2
          lastLogTimestamp: 9
          documentInsights:
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
        shortcuts:
          minVisitorThreshold: 1
          lastLogTimestamp: 1
          shortcutInsights:
          - shortcut: null
            visitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - shortcut: null
            visitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
        answers:
          minDepartmentSizeThreshold: 3
          minVisitorThreshold: 2
          lastLogTimestamp: 9
          documentInsights:
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
        departments:
        - departments
        - departments
        collectionsV2:
          minDepartmentSizeThreshold: 3
          minVisitorThreshold: 2
          lastLogTimestamp: 9
          documentInsights:
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
        queries:
          minVisitorThreshold: 7
          lastLogTimestamp: 4
          lowPerformingQueryInsights:
          - clickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            query: query
            searchCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchWithClickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            similarQueries:
            - null
            - null
          - clickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            query: query
            searchCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchWithClickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            similarQueries:
            - null
            - null
          queryInsights:
          - clickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            query: query
            searchCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchWithClickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            similarQueries:
            - null
            - null
          - clickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            query: query
            searchCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            searchWithClickCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            similarQueries:
            - null
            - null
          departments:
          - departments
          - departments
        announcements:
          minDepartmentSizeThreshold: 3
          minVisitorThreshold: 2
          lastLogTimestamp: 9
          documentInsights:
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
        users:
          lastLogTimestamp: 2
          inactiveInsights:
          - activityCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            lastActivityTimestamp: 7
            activity: ALL
            user:
              name: George Clooney
              obfuscatedId: abc123
            activeDayCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - activityCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            lastActivityTimestamp: 7
            activity: ALL
            user:
              name: George Clooney
              obfuscatedId: abc123
            activeDayCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
          activityInsights:
          - activityCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            lastActivityTimestamp: 7
            activity: ALL
            user:
              name: George Clooney
              obfuscatedId: abc123
            activeDayCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - activityCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            lastActivityTimestamp: 7
            activity: ALL
            user:
              name: George Clooney
              obfuscatedId: abc123
            activeDayCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
        content:
          minDepartmentSizeThreshold: 3
          minVisitorThreshold: 2
          lastLogTimestamp: 9
          documentInsights:
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          - visitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            viewCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
          departments:
          - departments
          - departments
      properties:
        timeseries:
          description: List of timeseries to make charts (if applicable).
          items:
            $ref: '#/components/schemas/LabeledCountInfo'
          type: array
        users:
          $ref: '#/components/schemas/UserInsightsResponse'
        content:
          $ref: '#/components/schemas/ContentInsightsResponse'
        queries:
          $ref: '#/components/schemas/QueryInsightsResponse'
        collections:
          $ref: '#/components/schemas/ContentInsightsResponse'
        collectionsV2:
          $ref: '#/components/schemas/ContentInsightsResponse'
        shortcuts:
          $ref: '#/components/schemas/ShortcutInsightsResponse'
        announcements:
          $ref: '#/components/schemas/ContentInsightsResponse'
        answers:
          $ref: '#/components/schemas/ContentInsightsResponse'
        departments:
          description: list of all departments.
          items:
            type: string
          type: array
    EditPermissionsRequest:
      example:
        permissions:
          canCreateAnnoucements: true
          canDlp: true
          read:
            key:
            - scopeType: null
            - scopeType: null
          role: role
          roles:
          - roles
          - roles
          editDocumentTags: true
          canAdminSearch: true
          canAdminClientApiGlobalTokens: true
          canAccessGeneratedQna: true
          createUgcTags: true
          canInsightsDashboard: true
          isModified: true
          grant:
            key:
            - scopeType: null
            - scopeType: null
          write:
            key:
            - scopeType: null
              create: true
              update: true
              delete: true
            - scopeType: null
              create: true
              update: true
              delete: true
        userIds:
        - userIds
        - userIds
      properties:
        userIds:
          description: The ids of the users whose permissions will be edited
          items:
            type: string
          type: array
        permissions:
          $ref: '#/components/schemas/Permissions'
      required:
      - permissions
    EditPermissionsResponse:
      example:
        permissions:
          canCreateAnnoucements: true
          canDlp: true
          read:
            key:
            - scopeType: null
            - scopeType: null
          role: role
          roles:
          - roles
          - roles
          editDocumentTags: true
          canAdminSearch: true
          canAdminClientApiGlobalTokens: true
          canAccessGeneratedQna: true
          createUgcTags: true
          canInsightsDashboard: true
          isModified: true
          grant:
            key:
            - scopeType: null
            - scopeType: null
          write:
            key:
            - scopeType: null
              create: true
              update: true
              delete: true
            - scopeType: null
              create: true
              update: true
              delete: true
      properties:
        permissions:
          $ref: '#/components/schemas/Permissions'
      required:
      - permissions
    EditPinRequest:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/EditPinRequest_allOf'
    GetPinRequest:
      example:
        pinId: 0
        id: id
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be fetched
          type: string
    GetPinResponse:
      example:
        pin: null
      properties:
        pin:
          $ref: '#/components/schemas/PinDocument'
    ListPinsResponse:
      example:
        pins:
        - null
        - null
      properties:
        pins:
          description: List of pinned documents.
          items:
            $ref: '#/components/schemas/PinDocument'
          type: array
      required:
      - pins
    PinRequest:
      allOf:
      - $ref: '#/components/schemas/PinDocumentMutableProperties'
      - $ref: '#/components/schemas/PinRequest_allOf'
    Unpin:
      example:
        pinId: 0
        id: id
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be unpinned.
          type: string
    SearchRequestSourceInfo:
      properties:
        initiator:
          description: "The means by which the search request was initiated. EVAL\
            \ - Internal usage for automated evaluation FACETS - A background request\
            \ to get bucket counts for facets following a user search request MORE\
            \ - The infinite scroll requested more results for an existing search\
            \ ONBOARDING - A demo query was issued as part of the onboarding flow\
            \ ONBOARDING_CHECKLIST - The user performed a search from the search step\
            \ of the new user onboarding checklist PAGE_LOAD - A SERP was visited\
            \ without going through regular product UI, e.g. from a bookmark, page\
            \ refresh, or hitting the browser back button DISCARDED_PAGE_LOAD - as\
            \ PAGE_LOAD but the page was previously discarded by the browser PREFETCH\
            \ - Results for a non-active tab were requested, e.g. gmail USER - The\
            \ user initiated a search by manually typing a query, clicking a suggestion,\
            \ etc. RECOMMENDATION - A query intent is detected from the user's activity\
            \ and a search request is issued proactively AUTOMATION - Initiated from\
            \ an API used for automation by an external developer or integration."
          enum:
          - EVAL
          - FACETS
          - MORE
          - ONBOARDING
          - ONBOARDING_CHECKLIST
          - PAGE_LOAD
          - DISCARDED_PAGE_LOAD
          - PREFETCH
          - USER
          - RECOMMENDATION
          - AUTOMATION
          type: string
        modality:
          description: "The UI paradigm from which the search request was sent. FULLPAGE\
            \ - The standard web app (including mobile) OVERLAY - An iframe that's\
            \ not Embedded Search / NSR (No such frame type as of now) OMNIBOX - The\
            \ browser omnibox CONTEXT_MENU - The browser right-click context menu\
            \ (powered by the browser extension) EMBEDDED_SEARCH - The embedded search\
            \ added as an iframe NSR - Native search replacement provided by extension\
            \ injected iframe SIDEBAR - The extension sidebar GLEANBOT - Gleanbot\
            \ in Slack, MS Teams, Discord, etc."
          enum:
          - FULLPAGE
          - OVERLAY
          - OMNIBOX
          - CONTEXT_MENU
          - EMBEDDED_SEARCH
          - NSR
          - SIDEBAR
          - GLEANBOT
          type: string
        domain:
          description: The domain from/on behalf of which the request is being issued.
            Currently only being used for tracking / logging purposes.
          type: string
        platform:
          description: Platform from which the search request was sent. Optional field.
          enum:
          - SLACK
          - DISCORD
          - MS_TEAMS
          type: string
        uiElement:
          description: "The (optional) UI element within the paradigm from which the\
            \ search request was sent. Each modality will have a dedicated uiElement\
            \ enum (e.g., SearchRequestGleanbotUIElementEnum)"
          type: string
        isDebug:
          description: "Whether the query is for debugging purposes and, as such,\
            \ should not be included in usage metrics and quality pipelines."
          type: boolean
        clientVersion:
          description: An opaque version identifier for the client. This is meant
            to be used for logging and debugging purposes only.
          type: string
      required:
      - modality
    ResultsRequest:
      properties:
        timestamp:
          description: The ISO 8601 timestamp associated with the client request.
          format: date-time
          type: string
        trackingToken:
          description: A previously received trackingToken for a search associated
            with the same query. Useful for more requests and requests for other tabs.
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        sourceInfo:
          $ref: '#/components/schemas/SearchRequestSourceInfo'
        sourceDocument:
          $ref: '#/components/schemas/Document'
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit.\
            \ Requires sufficient permissions."
          example: "db.enable_debug=true,qp.idf_threshold=0.3"
          type: string
        pageSize:
          description: Hint to the server about how many results to send back. Server
            may return less or more. Structured results and clustered results don't
            count towards pageSize.
          example: 100
          type: integer
        maxSnippetSize:
          description: Hint to the server about how many characters long a snippet
            may be. Server may return less or more.
          example: 400
          type: integer
      required:
      - sourceInfo
    SearchRequestInputDetails:
      example:
        hasCopyPaste: true
      properties:
        hasCopyPaste:
          description: "Whether the associated query was at least partially copy-pasted.\
            \  If subsequent requests are issued after a copy-pasted query is constructed\
            \ (e.g. with facet modifications), this bit should continue to be set\
            \ for those requests."
          type: boolean
    SearchRequest:
      allOf:
      - $ref: '#/components/schemas/ResultsRequest'
      - $ref: '#/components/schemas/SearchRequest_allOf'
      example:
        trackingToken: trackingToken
        query: vacation policy
        pageSize: 10
        requestOptions:
          debugOptions:
            enableDebugging: true
          facetFilters:
          - fieldName: doctype
            fieldValues:
            - article
            - document
          - fieldName: container
            fieldValues:
            - engineering
    GeneratedQna:
      example:
        cursor: cursor
        trackingToken: trackingToken
        question: question
        answer: answer
        ranges:
        - startIndex: 0
          endIndex: 6
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          type: BOLD
        - startIndex: 0
          endIndex: 6
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          type: BOLD
        debugInfo: debugInfo
        status: COMPUTING
      properties:
        question:
          description: Search query rephrased into a question.
          type: string
        answer:
          description: Answer generated for the given query or the generated question.
          type: string
        ranges:
          description: "Answer subsections to mark with special formatting (citations,\
            \ bolding etc)"
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
        status:
          description: Status of backend generating the answer
          enum:
          - COMPUTING
          - DISABLED
          - FAILED
          - NO_ANSWER
          - SKIPPED
          - SUCCEEDED
          - TIMEOUT
          type: string
        cursor:
          description: An opaque cursor representing the search request
          type: string
        trackingToken:
          description: An opaque token that represents this particular result in this
            particular query. To be used for /feedback reporting.
          type: string
        debugInfo:
          description: Debug details for this result if debug is enabled.
          type: string
    SearchDebugInfo:
      example:
        formattedDebugInfo: formattedDebugInfo
      properties:
        formattedDebugQuery:
          description: A formatted string that represents the parsed query.
          type: string
        searchConfigurationJson:
          description: JSON of the search config
          type: string
        extraArgsJson:
          description: JSON of the extra args
          type: string
        parsedQueryJson:
          description: "JSON for the parsed query, to be used as an override."
          type: string
        debugParsedQueryJson:
          description: JSON for the parsed query with debugging signals (e.g. syns
            and spellchecks)
          type: string
        debugScholasticJson:
          description: "JSON containing Scholastic data (query embeddings, doc similarities)."
          type: string
        debugQPMetadataJson:
          description: JSON containing QP metadata
          type: string
        debugScholasticMetadataJson:
          description: JSON containing Scholastic metadata
          type: string
        debugMinedSamplesJson:
          description: JSON containing mined Intelligence samples
          type: string
        debugRetrievalElasticQuery:
          description: JSON containing Elastic retrieval query
          type: string
        debugSnippetsElasticQuery:
          description: JSON containing Elastic snippets query
          type: string
        elasticPerformanceString:
          description: A string showing performance information returned by elastic.
          type: string
        scoringLegendString:
          description: A legend of what the functions are when computing the backend
            score
          type: string
        resultsDebugString:
          description: Additional debugging details associated with the request.
          type: string
        debugKeywordGenerationJson:
          description: JSON containing Keyword Generation data for debugging purposes.
          type: string
    InvalidOperatorValueError:
      properties:
        key:
          description: The operator key that has an invalid value.
          type: string
        value:
          description: The invalid operator value.
          type: string
    ErrorMessage:
      properties:
        source:
          description: The datasource this message relates to.
          type: string
        errorMessage:
          type: string
    ErrorInfo:
      properties:
        badGmailToken:
          description: Indicates the gmail results could not be fetched due to bad
            token.
          type: boolean
        badOutlookToken:
          description: Indicates the outlook results could not be fetched due to bad
            token.
          type: boolean
        invalidOperators:
          description: Indicates results could not be fetched due to invalid operators
            in the query.
          items:
            $ref: '#/components/schemas/InvalidOperatorValueError'
          type: array
        errorMessages:
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
    ResultsResponse:
      properties:
        trackingToken:
          description: A token that should be passed for additional requests related
            to this request (such as more results requests).
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        results:
          items:
            $ref: '#/components/schemas/SearchResult'
          type: array
        structuredResults:
          items:
            $ref: '#/components/schemas/StructuredResult'
          type: array
        generatedQnaResult:
          $ref: '#/components/schemas/GeneratedQna'
        debugInfo:
          $ref: '#/components/schemas/SearchDebugInfo'
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
        requestID:
          description: A platform-generated request ID to correlate backend logs.
          type: string
        backendTimeMillis:
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
          format: int64
          type: integer
    BackendExperimentsContext:
      properties:
        experimentIds:
          description: List of experiment ids for the corresponding request.
          items:
            format: int64
            type: integer
          type: array
    SearchWarning:
      properties:
        warningType:
          description: The type of the warning.
          enum:
          - LONG_QUERY
          - QUOTED_PUNCTUATION
          - PUNCTUATION_ONLY
          - COPYPASTED_QUOTES
          type: string
        lastUsedTerm:
          description: The last term we considered in the user's long query.
          type: string
        quotesIgnoredQuery:
          description: The query after ignoring/removing quotes.
          type: string
      required:
      - warningType
    SearchResponseMetadata:
      properties:
        rewrittenQuery:
          description: A cleaned up or updated version of the query to be displayed
            in the query box. Useful for mapping visual facets to search operators.
          type: string
        searchedQuery:
          description: The actual query used to perform search and return results.
          type: string
        searchedQueryRanges:
          description: The bolded ranges within the searched query.
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
        originalQuery:
          description: The query text sent by the client in the request.
          type: string
        querySuggestion:
          $ref: '#/components/schemas/QuerySuggestion'
        negatedTerms:
          description: A list of terms that were negated when processing the query.
          items:
            type: string
          type: array
        ignoredTerms:
          deprecated: true
          description: "DEPRECATED - A list of terms that are ignored in search. Used,\
            \ for example, by negation."
          items:
            type: string
          type: array
        modifiedQueryWasUsed:
          description: A different query was performed than the one requested.
          type: boolean
        originalQueryHadNoResults:
          description: No results were found for the original query. The usage of
            this bit in conjunction with modifiedQueryWasUsed will dictate whether
            the full page replacement is 0-result or few-result based.
          type: boolean
        searchWarning:
          $ref: '#/components/schemas/SearchWarning'
        triggeredExpertDetection:
          description: Whether the query triggered expert detection results in the
            People tab.
          type: boolean
    FacetValue:
      example:
        displayLabel: engineering
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
        stringValue: engineering
        integerValue: 5
      properties:
        stringValue:
          description: The value that should be set in the FacetFilter when applying
            this filter to a search request.
          example: engineering
          type: string
        integerValue:
          example: 5
          type: integer
        displayLabel:
          description: An optional user-friendly label to display in place of the
            facet value.
          example: engineering
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    FacetBucket:
      example:
        datasource: jira
        percentage: 5
        count: 1
        value:
          displayLabel: engineering
          iconConfig:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          stringValue: engineering
          integerValue: 5
      properties:
        count:
          description: Estimated number of results in this facet.
          example: 1
          type: integer
        datasource:
          description: The datasource the value belongs to. This will be used by the
            all tab to show types across all datasources.
          example: jira
          type: string
        percentage:
          description: Estimated percentage of results in this facet.
          example: 5
          type: integer
        value:
          $ref: '#/components/schemas/FacetValue'
    FacetResult:
      example:
        groupName: Service Cloud
        buckets:
        - datasource: jira
          percentage: 5
          count: 1
          value:
            displayLabel: engineering
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            stringValue: engineering
            integerValue: 5
        - datasource: jira
          percentage: 5
          count: 1
          value:
            displayLabel: engineering
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            stringValue: engineering
            integerValue: 5
        sourceName: container_name
        hasMoreBuckets: false
        operatorName: SelectMultiple
      properties:
        sourceName:
          description: "The source of this facet (e.g. container_name, doc_type, last_updated_at)."
          example: container_name
          type: string
        operatorName:
          description: How to display this facet. Currently supportes 'SelectSingle'
            and 'SelectMultiple'.
          example: SelectMultiple
          type: string
        buckets:
          description: A list of unique buckets that exist within this result set.
          items:
            $ref: '#/components/schemas/FacetBucket'
          type: array
        hasMoreBuckets:
          description: Returns true if more buckets exist than those returned. Additional
            buckets can be retrieve by requesting again with a higher facetBucketSize.
          example: false
          type: boolean
        groupName:
          description: "For most facets this will be the empty string, meaning the\
            \ facet is high-level and applies to all documents for the datasource.\
            \ When non-empty, this is used to group facets together (i.e. group facets\
            \ for each doctype for a certain datasource)"
          example: Service Cloud
          type: string
    ResultTab:
      properties:
        id:
          description: The unique ID of the tab. Can be passed in a search request
            to get results for that tab.
          type: string
        count:
          description: The number of results in this tab for the current query.
          type: integer
        datasource:
          description: "The datasource associated with the tab, if any."
          type: string
        datasourceInstance:
          description: "The datasource instance associated with the tab, if any."
          type: string
    ResultsDescription:
      properties:
        text:
          description: "Textual description of the results. Can be shown at the top\
            \ of SERP, e.g. 'People who write about this topic' for experts in people\
            \ tab."
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
    SearchResponse:
      allOf:
      - $ref: '#/components/schemas/ResultsResponse'
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/SearchResponse_allOf'
      example:
        trackingToken: trackingToken
        suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
        hasMoreResults: true
        errorInfo:
          errorMessages:
          - source: gmail
            errorMessage: invalid token
          - source: slack
            errorMessage: expired token
        debugInfo:
          formattedDebugInfo: formattedDebugInfo
        requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
        results:
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: url
        - snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: url
        facetResults:
        - buckets:
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          sourceName: sourceName
          operatorName: operatorName
          objectType: objectType
        - buckets:
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          - percentage: 5
            count: 1
            value:
              stringValue: stringValue
              integerValue: 5
          sourceName: sourceName
          operatorName: operatorName
          objectType: objectType
        rewrittenQuery: rewrittenQuery
        rewrittenFacetFilters:
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
    AskRequest:
      example:
        searchRequest:
          trackingToken: trackingToken
          query: vacation policy
          pageSize: 10
          requestOptions:
            debugOptions:
              enableDebugging: true
            facetFilters:
            - fieldName: doctype
              fieldValues:
              - article
              - document
            - fieldName: container
              fieldValues:
              - engineering
        operators: operators
        detectOnly: true
      properties:
        detectOnly:
          description: Whether to apply apply only question detection and not answering.
          type: boolean
        searchRequest:
          $ref: '#/components/schemas/SearchRequest'
        operators:
          description: Search operators to append to the query
          type: string
      required:
      - searchRequest
    AskResponse:
      example:
        question: question
        searchResponse:
          trackingToken: trackingToken
          suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
          hasMoreResults: true
          errorInfo:
            errorMessages:
            - source: gmail
              errorMessage: invalid token
            - source: slack
              errorMessage: expired token
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: url
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: url
          facetResults:
          - buckets:
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          - buckets:
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          rewrittenQuery: rewrittenQuery
          rewrittenFacetFilters:
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
        isQuestion: true
      properties:
        isQuestion:
          description: Whether or not the query was a question.
          type: boolean
        question:
          description: The part of the query which was used as a question for search
          type: string
        searchResponse:
          $ref: '#/components/schemas/SearchResponse'
      required:
      - isQuestion
    AutocompleteRequest:
      example:
        trackingToken: trackingToken
        query: what is a que
        datasource: GDRIVE
        resultSize: 10
      properties:
        trackingToken:
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        sourceInfo:
          $ref: '#/components/schemas/SearchRequestSourceInfo'
        query:
          description: Partially typed query.
          example: San Fra
          type: string
        datasourcesFilter:
          description: "Filter results to only those relevant to one or more datasources\
            \ (e.g. jira, gdrive). Results are unfiltered if missing."
          items:
            type: string
          type: array
        datasource:
          description: Filter to only return results relevant to the given datasource.
          type: string
        resultTypes:
          description: Filter to only return results of the given type(s). All types
            may be returned if omitted.
          items:
            enum:
            - DOCUMENT
            - HISTORY
            - OPERATOR
            - SUGGESTION
            - ENTITY
            - GOLINK
            type: string
          type: array
        resultSize:
          description: |
            Maximum number of results to be returned. If no value is provided, the backend will cap at 200.
          example: 10
          type: integer
        authTokens:
          description: Auth tokens which may be used for federated results.
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details,"
          example: ro.pero.do_historical_simulation_for_visits=true
          type: string
      type: object
    OperatorScope:
      properties:
        datasource:
          type: string
        docType:
          type: string
    OperatorMetadata:
      example:
        name: Last Updated
        operatorType: DATE
        scopes:
        - datasource: GDRIVE
          docType: Document
        - datasource: ZENDESK
      properties:
        name:
          type: string
        isCustom:
          description: Whether this operator is supported by default or something
            that was created within a workplace app (e.g. custom jira field).
          type: boolean
        operatorType:
          enum:
          - TEXT
          - DOUBLE
          - DATE
          type: string
        helpText:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/OperatorScope'
          type: array
      required:
      - name
    Quicklink:
      description: "An action for a specific datasource that will show up in autocomplete\
        \ and app card, e.g. \"Create new issue\" for jira"
      example:
        iconConfig:
          color: '#343CED'
          key: person_icon
          iconType: GLYPH
          name: user
        name: name
        id: id
        scopes:
        - APP_CARD
        - APP_CARD
        shortName: shortName
        url: url
      properties:
        name:
          description: Full action name. Used in autocomplete
          type: string
        shortName:
          description: Shortened name. Used in app card
          type: string
        url:
          description: The URL for the action
          type: string
        iconConfig:
          $ref: '#/components/schemas/IconConfig'
        id:
          description: Unique identifier of this quicklink
          type: string
        scopes:
          description: The scopes for which this quicklink is applicable
          items:
            enum:
            - APP_CARD
            - AUTOCOMPLETE_EXACT_MATCH
            - AUTOCOMPLETE_FUZZY_MATCH
            - AUTOCOMPLETE_ZERO_QUERY
            - NEW_TAB_PAGE
            type: string
          type: array
    AutocompleteResult:
      example:
        result: sample result
        resultType: DOCUMENT
        score: 4.56
        url: url
        trackingToken: abcd
        metadata:
        - datasource: confluence
        - objectType: page
      properties:
        result:
          type: string
        keywords:
          description: A list of all possible keywords for given result.
          items:
            type: string
          type: array
        resultType:
          enum:
          - APP
          - DOCUMENT
          - HISTORY
          - OPERATOR
          - SUGGESTION
          - ENTITY
          - BROWSER_HISTORY
          - DATASOURCE
          - QUICKLINK
          - OPERATOR_VALUE
          - GOLINK
          - ADDITIONAL_DOCUMENT
          type: string
        score:
          description: Higher indicates a more confident match.
          type: number
        operatorMetadata:
          $ref: '#/components/schemas/OperatorMetadata'
        quicklink:
          $ref: '#/components/schemas/Quicklink'
        document:
          $ref: '#/components/schemas/Document'
        url:
          type: string
        structuredResult:
          $ref: '#/components/schemas/StructuredResult'
        trackingToken:
          description: A token to be passed in /feedback events associated with this
            autocomplete result.
          type: string
        ranges:
          description: Subsections of the result string to which some special formatting
            should be applied (eg. bold)
          items:
            $ref: '#/components/schemas/TextRange'
          type: array
      required:
      - result
      - result_type
    AutocompleteResultGroup:
      description: A subsection of the results list from which distinct sections should
        be created.
      properties:
        startIndex:
          description: The inclusive start index of the range.
          type: integer
        endIndex:
          description: The exclusive end index of the range.
          type: integer
        title:
          description: The title of the result group to be displayed by FE. Empty
            means no title.
          type: string
    AutocompleteResponse:
      allOf:
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/AutocompleteResponse_allOf'
    CustomEntityUserRoles:
      properties:
        addedRoles:
          description: A list of user roles for the custom entity added by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
        removedRoles:
          description: A list of user roles for the custom entity removed by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
    CreateCustomEntityRequest:
      allOf:
      - $ref: '#/components/schemas/CustomEntity'
      - $ref: '#/components/schemas/CustomEntityUserRoles'
    TeamCreationData:
      example:
        createdFrom: createdFrom
        peopleField: peopleField
        datasource: datasource
        id: id
      properties:
        id:
          description: "For people field teams, the field value, e.g. ENGINEERING.\
            \ Otherwise, a doc id used to identify the team"
          type: string
        peopleField:
          description: "if the data source is people fields, then this is the field\
            \ name (otherwise it's ignored)"
          type: string
        datasource:
          description: "what data source this team comes from, e.g. GDRIVE"
          type: string
        createdFrom:
          description: "If the team is from a doc (i.e. not from a people field),\
            \ this is the doc title, e.g. for Slack channels, the channel name. Otherwise,\
            \ it's ignored."
          type: string
    CreateTeamsRequest:
      example:
        teams:
        - createdFrom: createdFrom
          peopleField: peopleField
          datasource: datasource
          id: id
        - createdFrom: createdFrom
          peopleField: peopleField
          datasource: datasource
          id: id
      properties:
        teams:
          description: List of all teams from data sources to create
          items:
            $ref: '#/components/schemas/TeamCreationData'
          type: array
    CreateTeamsResponse:
      example:
        numErrors: 0
      properties:
        numErrors:
          description: Number of teams that failed to be created
          type: integer
    CustomEntitiesRequest:
      example:
        ids:
        - ce123
      properties:
        ids:
          description: The IDs of the custom entities to retrieve.
          items:
            type: string
          type: array
      type: object
    CustomEntitiesResponse:
      example:
        results:
        - null
        - null
        errors:
        - errors
        - errors
      properties:
        results:
          description: A custom entity object
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
        errors:
          description: A list of IDs that could not be found.
          items:
            type: string
          type: array
      type: object
    DeleteCustomEntityRequest:
      example:
        id: id
      properties:
        id:
          description: The ID of the custom entity to be deleted.
          type: string
      required:
      - id
    DeleteQueryHistoryRequest:
      example:
        queries:
        - queries
        - queries
      properties:
        queries:
          description: Queries to delete.
          items:
            type: string
          type: array
      type: object
    DeleteQueryHistoryError:
      example:
        errorType: DELETION_FAILED
      properties:
        errorType:
          enum:
          - DELETION_FAILED
          type: string
    DeleteQueryHistoryResponse:
      example:
        error:
          errorType: DELETION_FAILED
      properties:
        error:
          $ref: '#/components/schemas/DeleteQueryHistoryError'
    DeleteTeamsRequest:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          description: List of all team IDs to be deleted
          items:
            type: string
          type: array
    DeleteTeamsResponse:
      example:
        numErrors: 0
      properties:
        numErrors:
          description: Number of teams that failed to be deleted
          type: integer
    DocumentMetadataRequest:
      example:
        ids:
        - ids
        - ids
        documentFields:
        - documentFields
        - documentFields
      properties:
        ids:
          description: The IDs of the documents for which metadata is requested
          items:
            type: string
          type: array
        documentFields:
          description: The requested metadata fields
          items:
            type: string
          type: array
      required:
      - ids
    DocumentMetadataResponse:
      example:
        documents:
        - container: container
          parentId: JIRA_EN-1337
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: Feature Request
          components:
          - Backend
          - Networking
          status:
          - Done
          customData:
            someCustomField: someCustomValue
        - container: container
          parentId: JIRA_EN-1337
          createTime: 2000-01-23T04:56:07.000Z
          datasource: datasource
          author:
            name: name
          documentId: documentId
          updateTime: 2000-01-23T04:56:07.000Z
          mimeType: mimeType
          objectType: Feature Request
          components:
          - Backend
          - Networking
          status:
          - Done
          customData:
            someCustomField: someCustomValue
      properties:
        documents:
          description: List of document metadata requested.
          items:
            $ref: '#/components/schemas/DocumentMetadata'
          type: array
    EditCustomEntityRequest:
      allOf:
      - $ref: '#/components/schemas/CustomEntity'
      - $ref: '#/components/schemas/CustomEntityUserRoles'
    FeedRequestOptions:
      example:
        authTokens:
        - accessToken: 123abc
          datasource: gmail
          scope: email profile https://www.googleapis.com/auth/gmail.readonly
          tokenType: Bearer
          authUser: "1"
        - accessToken: 123abc
          datasource: gmail
          scope: email profile https://www.googleapis.com/auth/gmail.readonly
          tokenType: Bearer
          authUser: "1"
        timezoneOffset: 6
        datasourceFilter:
        - datasourceFilter
        - datasourceFilter
        resultSize: 0
        categoryToResultSize:
          key:
            resultSize: 1
      properties:
        resultSize:
          description: "Number of results asked in response. If a result is a collection,\
            \ counts as one."
          type: integer
        timezoneOffset:
          description: The offset of the client's timezone in minutes from UTC. e.g.
            PDT is -420 because it's 7 hours behind UTC.
          type: integer
        categoryToResultSize:
          additionalProperties:
            $ref: '#/components/schemas/FeedRequestOptions_categoryToResultSize_value'
          description: Mapping from category to number of results asked for the category.
          type: object
        datasourceFilter:
          description: Datasources for which content should be included. Empty is
            for all.
          items:
            type: string
          type: array
        authTokens:
          description: Auth tokens which may be used for federated retrieval of Feed
            entries.
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
      required:
      - resultSize
    ClientData:
      example:
        lastRefreshTimestamp: 5
      properties:
        lastRefreshTimestamp:
          description: Server unix timestamp of the last refresh/request (in seconds
            since epoch UTC).
          type: integer
    FeedRequest:
      example:
        sc: "fd.half_time_in_hours=72,fd.min_frequency_for_frequents=2"
        sessionInfo:
          tabId: tabId
          lastSeen: 2000-01-23T04:56:07.000+00:00
          sessionTrackingToken: sessionTrackingToken
          lastQuery: lastQuery
        refreshType: MANUAL
        timeoutMillis: 5
        categories:
        - DOCUMENT_SUGGESTION
        - DOCUMENT_SUGGESTION
        clientData:
          lastRefreshTimestamp: 5
        requestOptions:
          authTokens:
          - accessToken: 123abc
            datasource: gmail
            scope: email profile https://www.googleapis.com/auth/gmail.readonly
            tokenType: Bearer
            authUser: "1"
          - accessToken: 123abc
            datasource: gmail
            scope: email profile https://www.googleapis.com/auth/gmail.readonly
            tokenType: Bearer
            authUser: "1"
          timezoneOffset: 6
          datasourceFilter:
          - datasourceFilter
          - datasourceFilter
          resultSize: 0
          categoryToResultSize:
            key:
              resultSize: 1
      properties:
        refreshType:
          description: Type of refresh requested. Intended for logging and future
            optimizations.
          enum:
          - MANUAL
          - ON_OPEN
          - BACKGROUND
          type: string
        categories:
          description: Categories of content requested. An allowlist gives flexibility
            to request content separately or together.
          items:
            enum:
            - DOCUMENT_SUGGESTION
            - DOCUMENT_SUGGESTION_SCENARIO
            - TRENDING_DOCUMENT
            - VERIFICATION_REMINDER
            - EVENT
            - ANNOUNCEMENT
            - MENTION
            - DATASOURCE_AFFINITY
            - RECENT
            - COMPANY_RESOURCE
            - EXPERIMENTAL
            - PEOPLE_CELEBRATIONS
            - DISPLAYABLE_LIST
            - SOCIAL_LINK
            - TASKS
            type: string
          type: array
        requestOptions:
          $ref: '#/components/schemas/FeedRequestOptions'
        clientData:
          $ref: '#/components/schemas/ClientData'
        timeoutMillis:
          description: Timeout in milliseconds for the request. Backend should throw
            a 408 if request takes longer.
          type: integer
        sc:
          description: Debug only feed params to to change the flow of control in
            request handling.
          example: "fd.half_time_in_hours=72,fd.min_frequency_for_frequents=2"
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
      required:
      - refreshType
    CalendarAttendee:
      properties:
        isOrganizer:
          description: Whether or not this attendee is an organizer.
          type: boolean
        isInGroup:
          description: Whether or not this attendee is in a group. Needed temporarily
            at least to support both flat attendees and tree for compatibility.
          type: boolean
        person:
          $ref: '#/components/schemas/Person'
        groupAttendees:
          description: "If this attendee is a group, represents the list of individual\
            \ attendees in the group."
          items:
            $ref: '#/components/schemas/CalendarAttendee'
          type: array
        responseStatus:
          enum:
          - ACCEPTED
          - DECLINED
          - NO_RESPONSE
          - TENTATIVE
          type: string
      required:
      - person
    CalendarAttendees:
      properties:
        people:
          description: Full details of some of the attendees of this event
          items:
            $ref: '#/components/schemas/CalendarAttendee'
          type: array
        isLimit:
          description: Whether the total count of the people returned is at the retrieval
            limit.
          type: boolean
        total:
          description: Total number of attendees in this event.
          type: integer
        numAccepted:
          description: Total number of attendees who have accepted this event.
          type: integer
        numDeclined:
          description: Total number of attendees who have declined this event.
          type: integer
        numNoResponse:
          description: Total number of attendees who have not responded to this event.
          type: integer
        numTentative:
          description: Total number of attendees who have responded tentatively (i.e.
            responded maybe) to this event.
          type: integer
    ConferenceData:
      properties:
        provider:
          enum:
          - ZOOM
          - HANGOUTS
          type: string
        uri:
          description: A permalink for the conference.
          type: string
        source:
          enum:
          - NATIVE_CONFERENCE
          - LOCATION
          - DESCRIPTION
          type: string
      required:
      - provider
      - uri
    CalendarEvent:
      allOf:
      - $ref: '#/components/schemas/AnonymousEvent'
      - $ref: '#/components/schemas/CalendarEvent_allOf'
      required:
      - id
      - url
    ClientAction:
      example:
        quicklink:
          iconConfig:
            color: '#343CED'
            key: person_icon
            iconType: GLYPH
            name: user
          name: name
          id: id
          scopes:
          - APP_CARD
          - APP_CARD
          shortName: shortName
          url: url
        destinationUrl: destinationUrl
        type: GO_TO_HOME
      properties:
        type:
          description: Type of the client action.
          enum:
          - GO_TO_HOME
          - CREATE
          - EMAIL
          - MESSAGE
          - SHARE
          type: string
        quicklink:
          $ref: '#/components/schemas/Quicklink'
        destinationUrl:
          description: Specific url if action requires a destination url to complete.
            Has precedence over action context.
          type: string
      required:
      - type
    FeedManualFeedback:
      example:
        keyvals:
          key: keyvals
      properties:
        keyvals:
          additionalProperties:
            type: string
          description: "A map of {string, string} pairs regarding signals that will\
            \ be helpful in debugging."
          type: object
    FeedEntry:
      example:
        snippet: snippet
        app:
          datasource: datasource
          docType: docType
          mimeType: mimeType
          iconUrl: iconUrl
        trackingToken: trackingToken
        thumbnail:
          photoId: photoId
          url: url
        justificationType: FREQUENTLY_ACCESSED
        additionalClientActions:
        - quicklink:
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            name: name
            id: id
            scopes:
            - APP_CARD
            - APP_CARD
            shortName: shortName
            url: url
          destinationUrl: destinationUrl
          type: GO_TO_HOME
        - quicklink:
            iconConfig:
              color: '#343CED'
              key: person_icon
              iconType: GLYPH
              name: user
            name: name
            id: id
            scopes:
            - APP_CARD
            - APP_CARD
            shortName: shortName
            url: url
          destinationUrl: destinationUrl
          type: GO_TO_HOME
        document:
          connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        uiConfig: null
        collection: null
        title: title
        documentVisitorCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        entryId: entryId
        createdBy:
          name: George Clooney
          obfuscatedId: abc123
        collectionItem: null
        person:
          name: George Clooney
          obfuscatedId: abc123
        activities:
        - actor:
            name: George Clooney
            obfuscatedId: abc123
          aggregateVisitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          action: ADD
          timestamp: 0
        - actor:
            name: George Clooney
            obfuscatedId: abc123
          aggregateVisitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          action: ADD
          timestamp: 0
        manualFeedbackSignals:
          keyvals:
            key: keyvals
        viewUrl: viewUrl
        justification: justification
        event: null
        announcement: null
      properties:
        entryId:
          description: optional ID associated with a single feed entry (displayable_list_id)
          type: string
        title:
          description: "Title for the result. Can be document title, event title and\
            \ so on."
          type: string
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        createdBy:
          $ref: '#/components/schemas/Person'
        uiConfig:
          $ref: '#/components/schemas/FeedEntry_uiConfig'
        snippet:
          description: "A textual snippet representing this entry, dependent on type.\
            \ For example, for USER_MENTION, it may contain the sentence in which\
            \ the mention occurred."
          type: string
        justificationType:
          description: Type of the justification.
          enum:
          - FREQUENTLY_ACCESSED
          - RECENTLY_ACCESSED
          - TRENDING_DOCUMENT
          - VERIFICATION_REMINDER
          - SUGGESTED_DOCUMENT
          - EMPTY_STATE_SUGGESTION
          - FRECENCY_SCORED
          - SERVER_GENERATED
          - USE_CASE
          - UPDATE_SINCE_LAST_VIEW
          - RECENTLY_STARTED
          - EVENT
          - USER_MENTION
          - ANNOUNCEMENT
          - EXTERNAL_ANNOUNCEMENT
          - POPULARITY_BASED_TRENDING
          - COMPANY_RESOURCE
          - EVENT_DOCUMENT_FROM_CONTENT
          - EVENT_DOCUMENT_FROM_SEARCH
          - VISIT_AFFINITY_SCORED
          - SUGGESTED_APP
          - SUGGESTED_PERSON
          - ACTIVITY_HIGHLIGHT
          - SAVED_SEARCH
          - SUGGESTED_CHANNEL
          - PEOPLE_CELEBRATIONS
          - SOCIAL_LINK
          type: string
        justification:
          description: Server side generated justification string if server provides
            one.
          type: string
        trackingToken:
          description: An opaque token that represents this particular feed entry
            in this particular response. To be used for /feedback reporting.
          type: string
        document:
          $ref: '#/components/schemas/Document'
        event:
          $ref: '#/components/schemas/CalendarEvent'
        announcement:
          $ref: '#/components/schemas/Announcement'
        collection:
          $ref: '#/components/schemas/Collection'
        collectionItem:
          $ref: '#/components/schemas/CollectionItem'
        person:
          $ref: '#/components/schemas/Person'
        app:
          $ref: '#/components/schemas/AppResult'
        activities:
          description: "List of activity where each activity has user, action, timestamp."
          items:
            $ref: '#/components/schemas/UserActivity'
          type: array
        documentVisitorCount:
          $ref: '#/components/schemas/CountInfo'
        viewUrl:
          description: View url for the entry if based on links that are not documents
            in Glean.
          type: string
        additionalClientActions:
          description: List of client actions suggested by the backend to be included
            for entry.
          items:
            $ref: '#/components/schemas/ClientAction'
          type: array
        manualFeedbackSignals:
          $ref: '#/components/schemas/FeedManualFeedback'
      required:
      - title
    FeedResult:
      example:
        secondaryEntries:
        - snippet: snippet
          app:
            datasource: datasource
            docType: docType
            mimeType: mimeType
            iconUrl: iconUrl
          trackingToken: trackingToken
          thumbnail:
            photoId: photoId
            url: url
          justificationType: FREQUENTLY_ACCESSED
          additionalClientActions:
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          uiConfig: null
          collection: null
          title: title
          documentVisitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          entryId: entryId
          createdBy:
            name: George Clooney
            obfuscatedId: abc123
          collectionItem: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          activities:
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          manualFeedbackSignals:
            keyvals:
              key: keyvals
          viewUrl: viewUrl
          justification: justification
          event: null
          announcement: null
        - snippet: snippet
          app:
            datasource: datasource
            docType: docType
            mimeType: mimeType
            iconUrl: iconUrl
          trackingToken: trackingToken
          thumbnail:
            photoId: photoId
            url: url
          justificationType: FREQUENTLY_ACCESSED
          additionalClientActions:
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          uiConfig: null
          collection: null
          title: title
          documentVisitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          entryId: entryId
          createdBy:
            name: George Clooney
            obfuscatedId: abc123
          collectionItem: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          activities:
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          manualFeedbackSignals:
            keyvals:
              key: keyvals
          viewUrl: viewUrl
          justification: justification
          event: null
          announcement: null
        primaryEntry:
          snippet: snippet
          app:
            datasource: datasource
            docType: docType
            mimeType: mimeType
            iconUrl: iconUrl
          trackingToken: trackingToken
          thumbnail:
            photoId: photoId
            url: url
          justificationType: FREQUENTLY_ACCESSED
          additionalClientActions:
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          - quicklink:
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              name: name
              id: id
              scopes:
              - APP_CARD
              - APP_CARD
              shortName: shortName
              url: url
            destinationUrl: destinationUrl
            type: GO_TO_HOME
          document:
            connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          uiConfig: null
          collection: null
          title: title
          documentVisitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          entryId: entryId
          createdBy:
            name: George Clooney
            obfuscatedId: abc123
          collectionItem: null
          person:
            name: George Clooney
            obfuscatedId: abc123
          activities:
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          - actor:
              name: George Clooney
              obfuscatedId: abc123
            aggregateVisitCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            action: ADD
            timestamp: 0
          manualFeedbackSignals:
            keyvals:
              key: keyvals
          viewUrl: viewUrl
          justification: justification
          event: null
          announcement: null
        rank: 6
        category: DOCUMENT_SUGGESTION
        facetResults:
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
      properties:
        category:
          description: "Category of the result, one of the requested categories in\
            \ incoming request."
          enum:
          - DOCUMENT_SUGGESTION
          - DOCUMENT_SUGGESTION_SCENARIO
          - TRENDING_DOCUMENT
          - USE_CASE
          - VERIFICATION_REMINDER
          - EVENT
          - ANNOUNCEMENT
          - MENTION
          - DATASOURCE_AFFINITY
          - RECENT
          - COMPANY_RESOURCE
          - EXPERIMENTAL
          - PEOPLE_CELEBRATIONS
          - SOCIAL_LINK
          - TASKS
          - DISPLAYABLE_LIST
          type: string
        primaryEntry:
          $ref: '#/components/schemas/FeedEntry'
        secondaryEntries:
          description: "Secondary entries for the result e.g. suggested docs for the\
            \ calendar, carousel."
          items:
            $ref: '#/components/schemas/FeedEntry'
          type: array
        rank:
          description: Rank of the result. Rank is suggested by server. Client side
            rank may differ.
          type: integer
        facetResults:
          deprecated: true
          description: DEPRECATED - List of facets that can be used to filter the
            entry's content.
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
      required:
      - category
      - primaryEntry
    FeedDebugInfo:
      properties:
        debugElasticQueries:
          description: JSON containing Elastic query for suggestions
          items:
            type: string
          type: array
    FeedResponse:
      allOf:
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/FeedResponse_allOf'
      required:
      - serverTimestamp
    GetDocumentsRequest:
      example:
        includeFields:
        - DOCUMENT_CONTENT
        - DOCUMENT_CONTENT
        documentSpecs:
        - null
        - null
      properties:
        documentSpecs:
          description: The specification for the documents to be retrieved.
          items:
            $ref: '#/components/schemas/DocumentSpec'
          type: array
        includeFields:
          description: List of Document fields to return (that aren't returned by
            default)
          items:
            enum:
            - DOCUMENT_CONTENT
            - LAST_VIEWED_AT
            - VISITORS_COUNT
            - RECENT_SHARES
            type: string
          type: array
      required:
      - documentSpecs
    DocumentOrError:
      oneOf:
      - $ref: '#/components/schemas/Document'
      - $ref: '#/components/schemas/DocumentOrError_oneOf'
    GetDocumentsResponse:
      example:
        documents:
          key: null
      properties:
        documents:
          additionalProperties:
            $ref: '#/components/schemas/DocumentOrError'
          description: The document details or the error if document is not found.
          type: object
    GetDocumentAnalyticsRequest:
      example:
        withClickerCounts: true
        documentSpecs:
        - null
        - null
        dayRange:
          minDaysFromNow: 6
          start:
            daysFromNow: 5
            epochSeconds: 5
          maxDaysFromNow: 1
          end:
            daysFromNow: 5
            epochSeconds: 5
        withFacetAggregations: true
        withVisitCounts: true
      properties:
        documentSpecs:
          description: The specification for the documents for which analytics will
            be retrieved.
          items:
            $ref: '#/components/schemas/DocumentSpec'
          type: array
        dayRange:
          $ref: '#/components/schemas/Period'
        withClickerCounts:
          description: Whether response should include click information or not. Default
            is to not include click information.
          type: boolean
        withFacetAggregations:
          description: "Whether the results will include aggregate counts/info for\
            \ facets like location, department, etc."
          type: boolean
        withVisitCounts:
          description: Whether response should include visit counts or not. Default
            is to return only visitor counts.
          type: boolean
      required:
      - dayRange
      - documentSpecs
    DocumentAnalytics:
      example:
        visitCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        documentSpec: null
        visitorCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        clickerCount:
          period:
            minDaysFromNow: 6
            start:
              daysFromNow: 5
              epochSeconds: 5
            maxDaysFromNow: 1
            end:
              daysFromNow: 5
              epochSeconds: 5
          org: org
          count: 0
        facetAnalytics:
        - analytics: null
          facet:
            fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
        - analytics: null
          facet:
            fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
      properties:
        documentSpec:
          $ref: '#/components/schemas/DocumentSpec'
        visitorCount:
          $ref: '#/components/schemas/CountInfo'
        clickerCount:
          $ref: '#/components/schemas/CountInfo'
        visitCount:
          $ref: '#/components/schemas/CountInfo'
        facetAnalytics:
          items:
            $ref: '#/components/schemas/DocumentFacetAnalytics'
          type: array
    DocumentFacetAnalytics:
      example:
        analytics: null
        facet:
          fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
      properties:
        facet:
          $ref: '#/components/schemas/FacetFilter'
        analytics:
          $ref: '#/components/schemas/DocumentAnalytics'
    GetDocumentAnalyticsResponse:
      example:
        results:
        - visitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          documentSpec: null
          visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          clickerCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          facetAnalytics:
          - analytics: null
            facet:
              fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
          - analytics: null
            facet:
              fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
        - visitCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          documentSpec: null
          visitorCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          clickerCount:
            period:
              minDaysFromNow: 6
              start:
                daysFromNow: 5
                epochSeconds: 5
              maxDaysFromNow: 1
              end:
                daysFromNow: 5
                epochSeconds: 5
            org: org
            count: 0
          facetAnalytics:
          - analytics: null
            facet:
              fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
          - analytics: null
            facet:
              fieldName: doc_type
              values:
              - value: Spreadsheet
                relationType: EQUALS
                isNegated: false
              - value: Presentation
                relationType: EQUALS
                isNegated: false
      properties:
        results:
          description: Analytics for requested documents. There will be one-to-one
            mapping for documents included in the request.
          items:
            $ref: '#/components/schemas/DocumentAnalytics'
          type: array
    GetEventsRequest:
      example:
        authTokens:
        - accessToken: 123abc
          datasource: gmail
          scope: email profile https://www.googleapis.com/auth/gmail.readonly
          tokenType: Bearer
          authUser: "1"
        - accessToken: 123abc
          datasource: gmail
          scope: email profile https://www.googleapis.com/auth/gmail.readonly
          tokenType: Bearer
          authUser: "1"
        ids:
        - ids
        - ids
      properties:
        ids:
          description: The ids of the calendar events to be retrieved.
          items:
            type: string
          type: array
        authTokens:
          description: Auth tokens if client-side authentication.
          items:
            $ref: '#/components/schemas/AuthToken'
          type: array
      required:
      - ids
    GetEventsResponse:
      example:
        events:
        - secondaryEntries:
          - snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          - snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          primaryEntry:
            snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          rank: 6
          category: DOCUMENT_SUGGESTION
          facetResults:
          - groupName: Service Cloud
            buckets:
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            sourceName: container_name
            hasMoreBuckets: false
            operatorName: SelectMultiple
          - groupName: Service Cloud
            buckets:
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            sourceName: container_name
            hasMoreBuckets: false
            operatorName: SelectMultiple
        - secondaryEntries:
          - snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          - snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          primaryEntry:
            snippet: snippet
            app:
              datasource: datasource
              docType: docType
              mimeType: mimeType
              iconUrl: iconUrl
            trackingToken: trackingToken
            thumbnail:
              photoId: photoId
              url: url
            justificationType: FREQUENTLY_ACCESSED
            additionalClientActions:
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            - quicklink:
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                name: name
                id: id
                scopes:
                - APP_CARD
                - APP_CARD
                shortName: shortName
                url: url
              destinationUrl: destinationUrl
              type: GO_TO_HOME
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            uiConfig: null
            collection: null
            title: title
            documentVisitorCount:
              period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            entryId: entryId
            createdBy:
              name: George Clooney
              obfuscatedId: abc123
            collectionItem: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            activities:
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            - actor:
                name: George Clooney
                obfuscatedId: abc123
              aggregateVisitCount:
                period:
                  minDaysFromNow: 6
                  start:
                    daysFromNow: 5
                    epochSeconds: 5
                  maxDaysFromNow: 1
                  end:
                    daysFromNow: 5
                    epochSeconds: 5
                org: org
                count: 0
              action: ADD
              timestamp: 0
            manualFeedbackSignals:
              keyvals:
                key: keyvals
            viewUrl: viewUrl
            justification: justification
            event: null
            announcement: null
          rank: 6
          category: DOCUMENT_SUGGESTION
          facetResults:
          - groupName: Service Cloud
            buckets:
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            sourceName: container_name
            hasMoreBuckets: false
            operatorName: SelectMultiple
          - groupName: Service Cloud
            buckets:
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            - datasource: jira
              percentage: 5
              count: 1
              value:
                displayLabel: engineering
                iconConfig:
                  color: '#343CED'
                  key: person_icon
                  iconType: GLYPH
                  name: user
                stringValue: engineering
                integerValue: 5
            sourceName: container_name
            hasMoreBuckets: false
            operatorName: SelectMultiple
      properties:
        events:
          description: The requested events. Uses a FeedResult for now as a Calendar
            Event doesn't have all event info such as attachments.
          items:
            $ref: '#/components/schemas/FeedResult'
          type: array
    GetGeneratedQnaRequest:
      example:
        cursor: cursor
      properties:
        cursor:
          description: An opaque cursor representing the search request
          type: string
      required:
      - cursor
    GetGeneratedQnaResponse:
      example:
        generatedQnaResult:
          cursor: cursor
          trackingToken: trackingToken
          question: question
          answer: answer
          ranges:
          - startIndex: 0
            endIndex: 6
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            type: BOLD
          - startIndex: 0
            endIndex: 6
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            type: BOLD
          debugInfo: debugInfo
          status: COMPUTING
      properties:
        generatedQnaResult:
          $ref: '#/components/schemas/GeneratedQna'
    SortOptions:
      example:
        orderBy: ASC
        sortBy: sortBy
      properties:
        orderBy:
          enum:
          - ASC
          - DESC
          type: string
        sortBy:
          type: string
      type: object
    ListEntitiesRequest:
      example:
        filter:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        sc: "db.enable_debug=true, db.log_elastic_caller=ENTITY"
        cursor: cursor
        entityType: PEOPLE
        datasource: datasource
        query: query
        pageSize: 100
        includeFields:
        - PEOPLE
        - PEOPLE
        sort:
        - orderBy: ASC
          sortBy: sortBy
        - orderBy: ASC
          sortBy: sortBy
        source: source
      properties:
        filter:
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        sort:
          description: Use EntitiesSortOrder enum for SortOptions.sortBy
          items:
            $ref: '#/components/schemas/SortOptions'
          type: array
        entityType:
          default: PEOPLE
          enum:
          - PEOPLE
          - TEAMS
          - CUSTOM_ENTITIES
          type: string
        datasource:
          description: "The datasource associated with the entity type, most commonly\
            \ used with CUSTOM_ENTITIES"
          type: string
        query:
          description: A query string to search for entities that each entity in the
            response must conform to. An empty query does not filter any entities.
          type: string
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit.\
            \ Requires sufficient permissions."
          example: "db.enable_debug=true, db.log_elastic_caller=ENTITY"
          type: string
        includeFields:
          description: List of entity fields to return (that aren't returned by default)
          items:
            enum:
            - PEOPLE
            - TEAMS
            - PEOPLE_DISTANCE
            - PERMISSIONS
            - FACETS
            - INVITE_INFO
            - LAST_EXTENSION_USE
            - MANAGEMENT_DETAILS
            - UNPROCESSED_TEAMS
            type: string
          type: array
        pageSize:
          description: Hint to the server about how many results to send back. Server
            may return less.
          example: 100
          type: integer
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        source:
          description: A string denoting the search surface from which the endpoint
            is called.
          type: string
      type: object
    EntitiesSortOrder:
      description: Different ways of sorting entities
      enum:
      - ENTITY_NAME
      - FIRST_NAME
      - LAST_NAME
      - ORG_SIZE_COUNT
      - START_DATE
      - TEAM_SIZE
      - RELEVANCE
      type: string
    ListEntitiesResponse:
      example:
        cursor: cursor
        customEntityResults:
        - null
        - null
        teamResults:
        - null
        - null
        hasMoreResults: true
        sortOptions:
        - null
        - null
        totalCount: 0
        results:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        facetResults:
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        customFacetNames:
        - customFacetNames
        - customFacetNames
      properties:
        results:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        teamResults:
          items:
            $ref: '#/components/schemas/Team'
          type: array
        customEntityResults:
          items:
            $ref: '#/components/schemas/CustomEntity'
          type: array
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        totalCount:
          description: The total number of entities available
          type: integer
        hasMoreResults:
          description: Whether or not more entities can be fetched.
          type: boolean
        sortOptions:
          description: Sort options from EntitiesSortOrder supported for this response.
            Default is empty list.
          items:
            $ref: '#/components/schemas/EntitiesSortOrder'
          type: array
        customFacetNames:
          description: list of Person attributes that are custom setup by deployment
          items:
            type: string
          type: array
      type: object
    MessagesRequest:
      example:
        sc: "db.enable_debug=true,qp.idf_threshold=0.3"
        idType: CHANNEL_NAME
        timestampMillis: 0
        datasource: SLACK
        id: id
        datasourceInstanceDisplayName: datasourceInstanceDisplayName
        includeRootMessage: true
        workspaceId: workspaceId
        direction: OLDER
      properties:
        idType:
          description: Type of the id in the incoming request.
          enum:
          - CHANNEL_NAME
          - THREAD_ID
          - CONVERSATION_ID
          type: string
        id:
          description: ID corresponding to the requested idType. Note that channel
            and threads are represented by the underlying datasource's ID and conversations
            are represented by their document's ID.
          type: string
        workspaceId:
          description: Id for the for the workspace in case of multiple workspaces.
          type: string
        direction:
          description: The direction of the results asked with respect to the reference
            timestamp. Missing field defaults to OLDER.
          enum:
          - OLDER
          - NEWER
          type: string
        timestampMillis:
          description: Timestamp in millis of the reference message.
          format: int64
          type: integer
        includeRootMessage:
          description: Whether to include root message in response.
          type: boolean
        datasource:
          description: The type of the data source. Missing field defaults to SLACK.
          enum:
          - SLACK
          - MICROSOFTTEAMS
          - FACEBOOKWORKPLACE
          type: string
        datasourceInstanceDisplayName:
          description: The datasource instance display name from which the document
            was extracted. This is used for appinstance facet filter for datasources
            that support multiple instances.
          type: string
        sc:
          description: "Debug only search params to to change the flow of control\
            \ in request handling. It will be passed around service boundaries/endpoints.\
            \ For more details, https://docs.google.com/document/d/1e6taTfWUL8KNUC9de8kmmG2MG2L6cTx4ulOJfAshDTM/edit.\
            \ Requires sufficient permissions."
          example: "db.enable_debug=true,qp.idf_threshold=0.3"
          type: string
      required:
      - id
      - idType
      - timestampMillis
    MessagesResponse:
      example:
        rootMessage:
          snippets:
          - snippet: snippet
            mimeType: mimeType
          metadata:
            container: container
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: objectType
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          title: title
          url: https://example.com/foo/bar
          nativeAppUrl: slack://foo/bar
          mustIncludeSuggestions:
          - missingTerm: container
            query: container
        searchResponse:
          trackingToken: trackingToken
          suggestedSpellCorrectedQuery: suggestedSpellCorrectedQuery
          hasMoreResults: true
          errorInfo:
            errorMessages:
            - source: gmail
              errorMessage: invalid token
            - source: slack
              errorMessage: expired token
          debugInfo:
            formattedDebugInfo: formattedDebugInfo
          requestID: 5e345ae500ff0befa2b9d1a3ba0001737e7363696f312d323535323137000171756572792d656e64706f696e743a323032303031333074313830343032000100
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: url
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: url
          facetResults:
          - buckets:
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          - buckets:
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            - percentage: 5
              count: 1
              value:
                stringValue: stringValue
                integerValue: 5
            sourceName: sourceName
            operatorName: operatorName
            objectType: objectType
          rewrittenQuery: rewrittenQuery
          rewrittenFacetFilters:
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
        hasMore: true
      properties:
        hasMore:
          description: Whether there are more results for client to continue requesting.
          type: boolean
        searchResponse:
          $ref: '#/components/schemas/SearchResponse'
        rootMessage:
          $ref: '#/components/schemas/SearchResult'
      required:
      - hasMore
    PeopleRequest:
      example:
        obfuscatedIds:
        - abc123
        - abc456
      properties:
        timezoneOffset:
          description: The offset of the client's timezone in minutes from UTC. e.g.
            PDT is -420 because it's 7 hours behind UTC.
          type: integer
        obfuscatedIds:
          description: "The Person IDs to retrieve. If no IDs are requested, the current\
            \ user's details are returned."
          items:
            type: string
          type: array
        emailIds:
          description: The email IDs to retrieve. The result is the deduplicated union
            of emailIds and obfuscatedIds.
          items:
            type: string
          type: array
        includeFields:
          description: List of PersonMetadata fields to return (that aren't returned
            by default)
          items:
            enum:
            - BADGES
            - BUSY_EVENTS
            - DOCUMENT_ACTIVITY
            - INVITE_INFO
            - PEOPLE_DISTANCE
            - PERMISSIONS
            - PEOPLE_DETAILS
            - MANAGEMENT_DETAILS
            - PEOPLE_PROFILE_SETTINGS
            - PEOPLE_WITHOUT_MANAGER
            type: string
          type: array
        source:
          description: A string denoting the search surface from which the endpoint
            is called.
          type: string
      type: object
    PeopleResponse:
      example:
        relatedDocuments:
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        - associatedEntityId: associatedEntityId
          documents:
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          - connectorType: null
            metadata:
              container: container
              parentId: JIRA_EN-1337
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: Feature Request
              components:
              - Backend
              - Networking
              status:
              - Done
              customData:
                someCustomField: someCustomValue
            containerDocument: null
            datasource: datasource
            docType: docType
            id: id
            title: title
            content:
              fullTextList:
              - fullTextList
              - fullTextList
            parentDocument: null
            url: url
            sections:
            - title: title
              url: url
            - title: title
              url: url
          results:
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          - snippets:
            - snippet: snippet
              mimeType: mimeType
            metadata:
              container: container
              createTime: 2000-01-23T04:56:07.000Z
              datasource: datasource
              author:
                name: name
              documentId: documentId
              updateTime: 2000-01-23T04:56:07.000Z
              mimeType: mimeType
              objectType: objectType
            debugInfo:
              formattedDebugInfo: formattedDebugInfo
            title: title
            url: https://example.com/foo/bar
            nativeAppUrl: slack://foo/bar
            mustIncludeSuggestions:
            - missingTerm: container
              query: container
          querySuggestion:
            query: app:github type:pull author:mortimer
            label: Mortimer's PRs
            datasource: github
          relation: CASE
        results:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        errors:
        - errors
        - errors
      properties:
        results:
          description: "A Person for each ID in the request, each with PersonMetadata\
            \ populated."
          items:
            $ref: '#/components/schemas/Person'
          type: array
        relatedDocuments:
          description: A list of documents related to this people response. This is
            only included if DOCUMENT_ACTIVITY is requested and only 1 person is included
            in the request.
          items:
            $ref: '#/components/schemas/RelatedDocuments'
          type: array
        errors:
          description: A list of IDs that could not be found.
          items:
            type: string
          type: array
    PeopleSuggestionCategory:
      enum:
      - INVITE_INACTIVE_PROMO
      - INVITE_NONUSERS
      type: string
    PeopleSuggestRequest:
      example:
        categories:
        - null
        - null
        departments:
        - departments
        - departments
      properties:
        categories:
          description: Categories of data requested. Request can include single or
            multiple categories.
          items:
            $ref: '#/components/schemas/PeopleSuggestionCategory'
          type: array
        departments:
          description: "Departments that the data is requested for. If empty, corresponds\
            \ to whole company."
          items:
            type: string
          type: array
      required:
      - categories
    PersonSuggestionList:
      example:
        category: null
        people:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
      properties:
        category:
          $ref: '#/components/schemas/PeopleSuggestionCategory'
        people:
          description: Information about suggested users.
          items:
            $ref: '#/components/schemas/Person'
          type: array
      required:
      - category
    PeopleSuggestResponse:
      example:
        suggestions:
        - category: null
          people:
          - name: George Clooney
            obfuscatedId: abc123
          - name: George Clooney
            obfuscatedId: abc123
        - category: null
          people:
          - name: George Clooney
            obfuscatedId: abc123
          - name: George Clooney
            obfuscatedId: abc123
      properties:
        suggestions:
          description: Information about people suggestions for asked categories.
          items:
            $ref: '#/components/schemas/PersonSuggestionList'
          type: array
    RecommendationsRequestOptions:
      properties:
        datasourceFilter:
          description: "Filter results to a single datasource name (e.g. gmail, slack).\
            \ All results are returned if missing."
          type: string
        contextType:
          description: Identifier for what JSON schema to expect for `context`.
          enum:
          - ZENDESK_CASE_DEFLECTION
          - SALESFORCE_CASE_DEFLECTION
          type: string
        context:
          description: JSON containing client context like case subject input.  Expects
            schema based on `contextType`.
          type: string
        resultProminence:
          description: The types of prominence wanted in results returned. Default
            is any type.
          items:
            $ref: '#/components/schemas/SearchResultProminenceEnum'
          type: array
    RecommendationsRequest:
      allOf:
      - $ref: '#/components/schemas/ResultsRequest'
      - $ref: '#/components/schemas/RecommendationsRequest_allOf'
    RecommendationsResponse:
      allOf:
      - $ref: '#/components/schemas/ResultsResponse'
    SummarizeRequest:
      description: Summary of the document
      example:
        sc: "db.enable_debug=true,qp.idf_threshold=0.3"
        trackingToken: trackingToken
        query: query
        preferredSummaryLength: 0
        documentSpecs:
        - null
        - null
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        timestamp:
          description: The ISO 8601 timestamp associated with the client request.
          format: date-time
          type: string
        sc:
          example: "db.enable_debug=true,qp.idf_threshold=0.3"
          type: string
        query:
          description: Optional query that the summary should be about
          type: string
        preferredSummaryLength:
          description: "Optional length of summary output. If not given, defaults\
            \ to 1000 chars."
          type: integer
        documentSpecs:
          description: Specifications of documents to summarize
          items:
            $ref: '#/components/schemas/DocumentSpec'
          type: array
        trackingToken:
          description: An opaque token that represents this particular result. To
            be used for /feedback reporting.
          type: string
      required:
      - documentSpecs
    Summary:
      example:
        text: text
      properties:
        text:
          type: string
    SummarizeResponse:
      example:
        summary:
          text: text
        trackingToken: trackingToken
        debugInfo: debugInfo
      properties:
        summary:
          $ref: '#/components/schemas/Summary'
        debugInfo:
          description: Debug details for this summary if debug is enabled
          type: string
        trackingToken:
          description: An opaque token that represents this summary in this particular
            query. To be used for /feedback reporting.
          type: string
    TeamsRequest:
      example:
        ids:
        - abc123
      properties:
        ids:
          description: The IDs of the teams to retrieve.
          items:
            type: string
          type: array
        includeFields:
          description: List of teams fields to return that aren't returned by default
          items:
            enum:
            - TEAMS_DETAILS
            type: string
          type: array
      type: object
    TeamsResponse:
      example:
        results:
        - null
        - null
        errors:
        - errors
        - errors
      properties:
        results:
          description: A Team and a deep copy of all its members for each ID in the
            request
          items:
            $ref: '#/components/schemas/Team'
          type: array
        errors:
          description: A list of IDs that could not be found.
          items:
            type: string
          type: array
      type: object
    CreateShortcutRequest:
      example:
        data:
          destinationDocumentId: destinationDocumentId
          unlisted: true
          urlTemplate: urlTemplate
          description: description
          inputAlias: inputAlias
          destinationUrl: destinationUrl
          addedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          removedRoles:
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
          - sourceDocumentSpec: null
            role: null
            person:
              name: George Clooney
              obfuscatedId: abc123
            group:
              name: name
              id: id
              type: null
      properties:
        data:
          $ref: '#/components/schemas/ShortcutMutableProperties'
      required:
      - data
    ShortcutError:
      example:
        errorType: NO_PERMISSION
      properties:
        errorType:
          enum:
          - NO_PERMISSION
          - INVALID_ID
          - EXISTING_SHORTCUT
          type: string
    CreateShortcutResponse:
      example:
        shortcut: null
        error:
          errorType: NO_PERMISSION
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        error:
          $ref: '#/components/schemas/ShortcutError'
    DeleteShortcutRequest:
      allOf:
      - $ref: '#/components/schemas/UserGeneratedContentId'
      - required:
        - id
        type: object
    GetShortcutRequest:
      oneOf:
      - $ref: '#/components/schemas/UserGeneratedContentId'
      - $ref: '#/components/schemas/GetShortcutRequest_oneOf'
    GetShortcutResponse:
      example:
        shortcut: null
        error:
          errorType: NO_PERMISSION
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        error:
          $ref: '#/components/schemas/ShortcutError'
    GetSimilarShortcutsRequest:
      example:
        alias: alias
      properties:
        alias:
          description: Link text following go/ prefix.
          type: string
      required:
      - alias
    GetSimilarShortcutsResponse:
      example:
        shortcuts:
        - null
        - null
      properties:
        shortcuts:
          description: Shortcuts with similar aliases to the given. Includes shortcut
            with the exact alias if it exists.
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
      required:
      - shortcuts
    ListShortcutsResponse:
      example:
        shortcuts:
        - null
        - null
      properties:
        shortcuts:
          description: List of all shortcuts accessible to the user
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
      required:
      - shortcuts
    ListShortcutsPaginatedRequest:
      example:
        cursor: cursor
        query: query
        pageSize: 10
        includeFields:
        - FACETS
        - FACETS
        filters:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        sort:
          orderBy: ASC
          sortBy: sortBy
      properties:
        includeFields:
          description: Array of fields/data to be included in response that are not
            included by default
          items:
            enum:
            - FACETS
            - PEOPLE_DETAILS
            type: string
          type: array
        pageSize:
          example: 10
          type: integer
        cursor:
          description: A token specifying the position in the overall results to start
            at. Received from the endpoint and iterated back. Currently being used
            as page no (as we implement offset pagination)
          type: string
        filters:
          description: "A list of filters for the query. An AND is assumed between\
            \ different filters. We support filters on Go Link name, author, department\
            \ and type."
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        sort:
          $ref: '#/components/schemas/SortOptions'
        query:
          description: "Search query that should be a substring in atleast one of\
            \ the fields (alias , inputAlias, destinationUrl, description). Empty\
            \ query does not filter shortcuts."
          type: string
      required:
      - pageSize
      x-internal: true
    ShortcutsPaginationMetadata:
      example:
        cursor: cursor
        hasNextPage: true
        totalItemCount: 0
      properties:
        cursor:
          description: Cursor indicates the start of the next page of results
          type: string
        hasNextPage:
          type: boolean
        totalItemCount:
          type: integer
      x-internal: true
    ListShortcutsPaginatedResponse:
      example:
        meta:
          cursor: cursor
          hasNextPage: true
          totalItemCount: 0
        shortcuts:
        - null
        - null
        facetResults:
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
        - groupName: Service Cloud
          buckets:
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          - datasource: jira
            percentage: 5
            count: 1
            value:
              displayLabel: engineering
              iconConfig:
                color: '#343CED'
                key: person_icon
                iconType: GLYPH
                name: user
              stringValue: engineering
              integerValue: 5
          sourceName: container_name
          hasMoreBuckets: false
          operatorName: SelectMultiple
      properties:
        shortcuts:
          description: List of all shortcuts accessible to the user
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
        meta:
          $ref: '#/components/schemas/ShortcutsPaginationMetadata'
      required:
      - meta
      - shortcuts
      x-internal: true
    PreviewShortcutResponse:
      example:
        shortcut: null
        existingUrlAliases:
        - existingUrlAliases
        - existingUrlAliases
        existingUrlShortcuts:
        - null
        - null
        error:
          errorType: NO_PERMISSION
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        existingUrlAliases:
          deprecated: true
          description: DEPRECATED - use existingUrlShortcuts instead
          items:
            type: string
          type: array
        existingUrlShortcuts:
          description: Exising shortcuts that have a similar destination URL.
          items:
            $ref: '#/components/schemas/Shortcut'
          type: array
        error:
          $ref: '#/components/schemas/ShortcutError'
    UpdateShortcutRequest:
      allOf:
      - $ref: '#/components/schemas/UserGeneratedContentId'
      - $ref: '#/components/schemas/ShortcutMutableProperties'
      - required:
        - id
        type: object
    UpdateShortcutResponse:
      example:
        shortcut: null
        error:
          errorType: NO_PERMISSION
      properties:
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        error:
          $ref: '#/components/schemas/ShortcutError'
    AddCredentialRequest:
      example:
        metadata: metadata
        datasource: datasource
        user: user
        token: token
      properties:
        datasource:
          description: the datasource the credential applies to
          type: string
        user:
          description: the user info (email or username for example) for the credential
          type: string
        token:
          description: "the token part of the credential (password, apiToken etc)"
          type: string
        metadata:
          description: any metadata associated with the user credential
          type: string
    PublicConfigRequest:
      description: Will only send back publicly available config and will ignore other
        keys
      example:
        themeKeys:
        - themeKeys
        - themeKeys
        boolKeys:
        - boolKeys
        - boolKeys
      properties:
        themeKeys:
          description: A list of theme keys to include in the response.
          items:
            type: string
          type: array
        boolKeys:
          description: A list of boolean flag keys to include in the response.
          items:
            type: string
          type: array
      type: object
    ConfigRequest:
      allOf:
      - $ref: '#/components/schemas/PublicConfigRequest'
      - $ref: '#/components/schemas/ConfigRequest_allOf'
    DatasourceInstanceConfig:
      description: UNIMPLEMENTED. Will replace the misnamed DatasourceSchema. An instance
        of a datasource
    DatasourceConfig:
      description: "A \"class\" wrapper of Datasource instances. Rule of thumb: any\
        \ field that is applicable to all instances of a datasource is probably a\
        \ DatasourceConfig field"
      properties:
        displayName:
          description: The human-readable name of the datasource
          type: string
        homeUrl:
          description: "The fallback homepage for all instances of this datasource.\
            \ Ex for slack: https://apps.slack.com/client"
          type: string
        iconUrl:
          description: "The URL to an image to be displayed as an icon for this generic\
            \ datasource. Must have a transparency mask. SVG are recommended over\
            \ PNG. Public, glean-authenticated and Base64 encoded data URLs are all\
            \ valid (but not third-party-authenticated URLs)."
          type: string
        id:
          description: "Id of the datasource. So happens to be lowercase name like\
            \ \"slack\", but could become opaque in the future. Don't rely on the\
            \ id's format."
          type: string
        instances:
          description: "UNIMPLEMENTED. You're probably wanting DatasourceSchema, which\
            \ are misnamed instances that are slated for replacement with this DatasourceConfig.instances\
            \ field"
          items:
            $ref: '#/components/schemas/DatasourceInstanceConfig'
          type: array
        supportsMultipleInstances:
          description: "Whether the datasource allows for multiple instances. Ex:\
            \ \"Jira (on prem)\" and \"Jira (cloud)\""
          type: boolean
        multipleInstanceSetupEnabled:
          description: Whether the datasource allows for automatic multiple instance
            setup. Currently only supported by GitHub."
          type: boolean
    PropertyDefinition:
      properties:
        name:
          description: "The name of the property in the `DocumentMetadata` (e.g. 'createTime',\
            \ 'updateTime', 'author', 'container'). In the future, this will support\
            \ custom properties too."
          type: string
        displayLabel:
          description: The user friendly label for the property.
          type: string
        displayLabelPlural:
          description: The user friendly label for the property that will be used
            if a plural context.
          type: string
        propertyType:
          description: The type of custom property - this governs the search and faceting
            behavior
          enum:
          - TEXT
          - DATE
          - INT
          - USERID
          - PICKLIST
          - TEXTLIST
          type: string
        uiOptions:
          enum:
          - NONE
          - SEARCH_RESULT
          - DOC_HOVERCARD
          type: string
        hideUiFacet:
          description: If true then the property will not show up as a facet in the
            UI.
          type: boolean
        uiFacetOrder:
          description: "Will be used to set the order of facets in the UI, if present.\
            \ If set for one facet, must be set for all non-hidden UI facets. Must\
            \ take on an integer value from 1 (shown at the top) to N (shown last),\
            \ where N is the number of non-hidden UI facets. These facets will be\
            \ ordered below the built-in \"Type\" and \"Tag\" operators."
          type: integer
        objectPropertyOptions:
          items:
            $ref: '#/components/schemas/ObjectPropertyOptions'
          type: array
        group:
          description: The unique identifier of the `PropertyGroup` to which this
            property belongs.
          type: string
    ObjectPropertyOptions:
      description: Options for object properties.
      properties:
        subobjectProperties:
          description: "The properties of the sub-object. These properties represent\
            \ a nested object. For example, if this property represents a postal address,\
            \ the subobjectProperties might be named street, city, and state."
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          type: array
    PropertyGroup:
      description: A grouping for multiple PropertyDefinition. Grouped properties
        will be displayed together in the UI.
      properties:
        name:
          description: The unique identifier of the group.
          type: string
        displayLabel:
          description: The user-friendly group label to display.
          type: string
    ObjectDefinition:
      description: The definition for an `DocumentMetadata.objectType` within a datasource.
      properties:
        name:
          description: "Unique identifier for this `DocumentMetadata.objectType`.\
            \ If omitted, this definition is used as a default for all unmatched `DocumentMetadata.objectType`s\
            \ in this datasource."
          type: string
        displayLabel:
          description: The user-friendly name of the object for display.
          type: string
        docCategory:
          description: The document category of this object type.
          enum:
          - UNCATEGORIZED
          - TICKETS
          - CRM
          - PUBLISHED_CONTENT
          - COLLABORATIVE_CONTENT
          - QUESTION_ANSWER
          - MESSAGING
          - CODE_REPOSITORY
          - CHANGE_MANAGEMENT
          - PEOPLE
          - EMAIL
          - SSO
          - ATS
          - KNOWLEDGE_HUB
          - EXTERNAL_SHORTCUT
          type: string
        propertyDefinitions:
          items:
            $ref: '#/components/schemas/PropertyDefinition'
          type: array
        propertyGroups:
          description: "A list of `PropertyGroup`s belonging to this object type,\
            \ which will group properties to be displayed together in the UI."
          items:
            $ref: '#/components/schemas/PropertyGroup'
          type: array
        summarizable:
          description: Whether or not the object is summarizable
          type: boolean
    CanonicalizingRegexType:
      description: Regular expression to apply to an arbitrary string to transform
        it into a canonical string.
      properties:
        matchRegex:
          description: Regular expression to match to an arbitrary string.
          type: string
        rewriteRegex:
          description: Regular expression to transform into a canonical string.
          type: string
    SharedDatasourceConfigNoInstance:
      description: Structure describing shared config properties of a datasource with
        no multi-instance support.
      properties:
        name:
          description: Unique identifier of datasource instance to which this config
            applies.
          type: string
        displayName:
          description: "The user-friendly instance label to display. If omitted, falls\
            \ back to the title-cased `name`."
          type: string
        datasourceCategory:
          default: UNCATEGORIZED
          description: The type of this datasource. It is an important signal for
            relevance and must be specified and cannot be UNCATEGORIZED.
          enum:
          - UNCATEGORIZED
          - TICKETS
          - CRM
          - PUBLISHED_CONTENT
          - COLLABORATIVE_CONTENT
          - QUESTION_ANSWER
          - MESSAGING
          - CODE_REPOSITORY
          - CHANGE_MANAGEMENT
          - PEOPLE
          - EMAIL
          - SSO
          - ATS
          - KNOWLEDGE_HUB
          - EXTERNAL_SHORTCUT
          type: string
        urlRegex:
          description: "Regular expression that matches URLs of documents of the datasource\
            \ instance. The behavior for multiple matches is non-deterministic. **Note:\
            \ urlRegex is a required field for non-entity datasources (ie. datasources\
            \ where isEntityDatasource is false). Please add a regex as specific as\
            \ possible to this datasource instance.**"
          example: https://example-company.datasource.com/.*
          type: string
        iconUrl:
          description: "The URL to an image to be displayed as an icon for this datasource\
            \ instance. Must have a transparency mask. SVG are recommended over PNG.\
            \ Public, scio-authenticated and Base64 encoded data URLs are all valid\
            \ (but not third-party-authenticated URLs)."
          type: string
        objectDefinitions:
          description: The list of top-level `objectType`s for the datasource.
          items:
            $ref: '#/components/schemas/ObjectDefinition'
          type: array
        suggestionText:
          description: Example text for what to search for in this datasource
          type: string
        homeUrl:
          description: "The URL of the landing page for this datasource instance.\
            \ Should point to the most useful page for users, not the company marketing\
            \ page."
          type: string
        crawlerSeedUrls:
          description: This only applies to WEB_CRAWL and BROWSER_CRAWL datasources.
            Defines the seed urls for crawling.
          items:
            type: string
          type: array
        iconDarkUrl:
          description: "The URL to an image to be displayed as an icon for this datasource\
            \ instance in dark mode. Must have a transparency mask. SVG are recommended\
            \ over PNG. Public, scio-authenticated and Base64 encoded data URLs are\
            \ all valid (but not third-party-authenticated URLs)."
          type: string
        hideBuiltInFacets:
          description: List of built-in facet types that should be hidden for the
            datasource.
          items:
            enum:
            - TYPE
            - TAG
            - AUTHOR
            - OWNER
            type: string
          type: array
        canonicalizingURLRegex:
          description: A list of regular expressions to apply to an arbitrary URL
            to transform it into a canonical URL for this datasource instance. Regexes
            are to be applied in the order specified in this list.
          items:
            $ref: '#/components/schemas/CanonicalizingRegexType'
          type: array
        canonicalizingTitleRegex:
          description: A list of regular expressions to apply to an arbitrary title
            to transform it into a title that will be displayed in the search results
          items:
            $ref: '#/components/schemas/CanonicalizingRegexType'
          type: array
        redlistTitleRegex:
          description: A regex that identifies titles that should not be indexed
          type: string
        connectorType:
          $ref: '#/components/schemas/ConnectorType'
        quicklinks:
          description: "List of actions for this datasource instance that will show\
            \ up in autocomplete and app card, e.g. \"Create new issue\" for jira"
          items:
            $ref: '#/components/schemas/Quicklink'
          type: array
        renderConfigPreset:
          description: "The name of a render config to use for displaying results\
            \ from this datasource. Any well known datasource name may be used to\
            \ render the same as that source, e.g. `web` or `gdrive`."
          type: string
        aliases:
          description: Aliases that can be used as `app` operator-values.
          items:
            type: string
          type: array
        isOnPrem:
          description: Whether or not this datasource is hosted on-premise.
          type: boolean
        trustUrlRegexForViewActivity:
          default: true
          description: True if browser activity is able to report the correct URL
            for VIEW events. Set this to true if the URLs reported by Chrome are constant
            throughout each page load. Set this to false if the page has Javascript
            that modifies the URL during or after the load.
          type: boolean
        includeUtmSource:
          description: "If true, a utm_source query param will be added to outbound\
            \ links to this datasource within Glean."
          type: boolean
      required:
      - name
      type: object
    SharedDatasourceConfig:
      allOf:
      - $ref: '#/components/schemas/SharedDatasourceConfigNoInstance'
      - $ref: '#/components/schemas/SharedDatasourceConfig_allOf'
      description: Structure describing shared config properties of the datasource
        (including multi-instance support)
    OAuthConfig:
      properties:
        apiKey:
          description: An API key required to authenticate.
          type: string
        clientId:
          description: Client ID of the app registered in the provider's portal.
          type: string
        scope:
          description: Space separated list of required scopes for this datasource.
          type: string
    PrivateAuth:
      properties:
        status:
          description: The authorization status of the user.
          enum:
          - DISABLED
          - AWAITING_AUTH
          - AUTHORIZED
          type: string
        isDomainDelegated:
          description: Whether the datasource is authorized through domain delegation.
          type: boolean
        resultsAuthPromptSubtitle:
          description: "The subtitle of the results auth prompt, required when the\
            \ datasource has results even if the user has not authed privately."
          example: find content from private repositories
          type: string
        title:
          description: The title of the auth prompt shown to the user
          type: string
        content:
          description: The content of the auth prompt shown to the user
          type: string
        questions:
          description: FAQs to show when asking the user to authorize the datasource
          items:
            description: "Tuples of [question, answer]"
            items:
              type: string
            maxItems: 2
            minItems: 2
            type: array
          type: array
        authUrlRelativePath:
          description: The relative path of the url to take the user to to authorize
            the datasource
          type: string
    DatasourceSchema:
      allOf:
      - $ref: '#/components/schemas/SharedDatasourceConfig'
      - $ref: '#/components/schemas/DatasourceSchema_allOf'
      description: The schema definition for a datasource.
    Setting:
      example:
        value: value
        key: key
      properties:
        key:
          description: Key for the setting. Max length 256.
          type: string
        value:
          description: Value for the setting. Server does not differentiate between
            types. Max length 2048.
          type: string
      required:
      - key
    UserSettings:
      example:
        settings:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        settings:
          description: "List of user setting objects. In case of multiple keys, the\
            \ last one is used."
          items:
            $ref: '#/components/schemas/Setting'
          type: array
    FeatureFlags:
      additionalProperties:
        type: boolean
      type: object
    BoolValues:
      additionalProperties:
        type: boolean
      description: "A map of {string, boolean} pairs representing flags that globally\
        \ guard conditional features. Omitted flags mean the client should use its\
        \ default state."
      type: object
    Theme:
      additionalProperties:
        type: string
      description: "A map of {string, string} pairs where the key represents a known\
        \ theme option and the value is the CSS color to apply. Supported options\
        \ are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."
      example:
        background: '#fafafa'
        textPrimary: '#1e1e1e'
      type: object
    Themes:
      description: "A set of Theme objects to make available to the user based on\
        \ their chosen preference. If a theme variant is not supplied, the default\
        \ theme will be used."
      example:
        light:
          background: '#fafafa'
          textPrimary: '#1e1e1e'
        dark:
          background: '#1e1e1e'
          textPrimary: '#fafafa'
      properties:
        light:
          additionalProperties:
            type: string
          description: "A map of {string, string} pairs where the key represents a\
            \ known theme option and the value is the CSS color to apply. Supported\
            \ options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."
          example:
            background: '#fafafa'
            textPrimary: '#1e1e1e'
          type: object
        dark:
          additionalProperties:
            type: string
          description: "A map of {string, string} pairs where the key represents a\
            \ known theme option and the value is the CSS color to apply. Supported\
            \ options are documented in https://dev.glean.com/meta/browser_api/interfaces/Theme.html."
          example:
            background: '#fafafa'
            textPrimary: '#1e1e1e'
          type: object
    Branding:
      description: "A map of visual aspects of the app such as the company background\
        \ image, logos, logo background colors, and wide company logos."
      properties:
        companyBackgroundImageName:
          description: User facing company background image to be displayed to users
            on the home page.
          type: string
        companyLogoUrl:
          description: An image url pointing to a custom logo that should be displayed
            to users. Must be square and recognizable down to 40x40px. SVG images
            with transparent background are preferred.
          type: string
        companyWideLogoUrl:
          description: "An image url pointing to a wide format custom logo that should\
            \ be displayed to users. Should be rectangular and recognizable at 40px\
            \ height, and aspect ratio should be between 2:1 and 4:1. SVG images with\
            \ transparent background are preferred."
          type: string
        companyLogoBackgroundColor:
          description: A hex RGB color to display behind custom logo (e.g. '#ff4080').
          type: string
      type: object
    ClientConfig:
      description: Configuration settings for a specific client deployment that are
        not related to any particular datasource
      example:
        badVersions:
        - fe-release-2020-09-30-8843c44
      properties:
        badVersions:
          description: Known bad client versions that should force update themselves
          items:
            type: string
          type: array
        featureFlags:
          additionalProperties:
            type: boolean
          type: object
        feedPeopleCelebrationsEnabled:
          description: Whether people celebrations is enabled or not for the instance
          type: boolean
        feedSuggestedEnabled:
          description: Whether the suggested feed is enabled
          type: boolean
        feedTrendingEnabled:
          description: Whether the trending feed is enabled
          type: boolean
        feedRecentsEnabled:
          description: Whether the recents feed is enabled
          type: boolean
        feedMentionsEnabled:
          description: Whether the mentions feed is enabled
          type: boolean
        boolValues:
          additionalProperties:
            type: boolean
          description: "A map of {string, boolean} pairs representing flags that globally\
            \ guard conditional features. Omitted flags mean the client should use\
            \ its default state."
          type: object
        companyDisplayName:
          description: The user-facing name of the company owning the deployment
          type: string
        customSerpMarkdown:
          description: A markdown string to be displayed on the search results page.
            Useful for outlinks to help pages.
          type: string
        feedbackFrameSrc:
          description: |
            URL of a frame to be displayed for the user to give direct feedback to their company.

            A query string parameter named `context` is appended to the URL by the client. Its value is a JSON payload containing:

            ```
            {
              datasource: string, // The current datasource tab
              department: string, // The user’s department
              email: string,      // The user’s email
              query: string       // The most recent search query, if any
            }
            ```
          type: string
        onboardingQuery:
          description: A demonstrative query to show during new user onboarding
          type: string
        isOrgChartLinkVisible:
          description: Determines whether the org chart link in the Directory panel
            is visible to all users.
          type: boolean
        isOrgChartAccessible:
          description: "Determines whether the org chart is accessible to all users,\
            \ regardless of link visibility. Org chart can be accessible even if the\
            \ org chart link in Directory is not visible."
          type: boolean
        isPeopleSetup:
          description: Whether or not people data has been set up.
          type: boolean
        webAppUrl:
          description: URL the company uses to access the web app
          type: string
        gaTrackingIds:
          description: A list of additional GA data stream tracking IDs to which client
            events should be sent.
          example:
          - G-ABC123DEF
          items:
            type: string
          type: array
        themes:
          $ref: '#/components/schemas/Themes'
        brandings:
          $ref: '#/components/schemas/ClientConfig_brandings'
        greetingFormat:
          description: Describes how to format the web app greeting. Possible format
            options include \%t - timely greeting \%n - the user's first name
          example: "\\%t, \\%n (This would be the current default Glean greeting)"
          type: string
        ssoCompanyProvider:
          description: SSO provider used by the company
          enum:
          - gsuite
          - iap
          - okta
          - ping
          - azure
          - onelogin
          - onelogin_saml
          type: string
    AnswerActionsConfig:
      properties:
        showCreate:
          type: boolean
        showEdit:
          type: boolean
    ActionsConfig:
      properties:
        answer:
          $ref: '#/components/schemas/AnswerActionsConfig'
        disableActions:
          type: boolean
        disableCopyLink:
          type: boolean
    DatumConditionType:
      enum:
      - CHANGES_SINCE_VIEWED
      - CUSTOM_DATASOURCE
      - DATASOURCE_HAS_MULTIPLE_INSTANCES
      - EMPTY
      - EQUALS
      - INSTANCE_HAS_CUSTOM_ICON
      - NONEMPTY
      - NO_CHANGES_SINCE_VIEWED
      - STARTS_WITH
      - USER_DOMAIN
      type: string
    DatumCondition:
      properties:
        caseInsensitive:
          type: boolean
        key:
          type: string
        type:
          $ref: '#/components/schemas/DatumConditionType'
        value:
          type: string
    DatumConfig:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/DatumCondition'
          type: array
        datumConfigs:
          additionalProperties:
            $ref: '#/components/schemas/DatumConfig'
          type: object
        icon:
          $ref: '#/components/schemas/IconConfig'
        keys:
          items:
            type: string
          type: array
        label:
          type: string
        omit:
          type: boolean
        popover:
          $ref: '#/components/schemas/PopoverConfig'
        prefix:
          type: string
        roleConfig:
          $ref: '#/components/schemas/DatumRoleConfig'
        separator:
          type: string
        suffix:
          type: string
        transforms:
          items:
            $ref: '#/components/schemas/DatumTransform'
          type: array
        type:
          $ref: '#/components/schemas/DatumType'
    MetadataListConfig:
      properties:
        datumConfigs:
          additionalProperties:
            $ref: '#/components/schemas/DatumConfig'
          type: object
        keys:
          items:
            type: string
          type: array
        separator:
          type: string
    TagsConfig:
      properties:
        displayLimit:
          type: number
        showTags:
          type: boolean
    PopoverConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
      - $ref: '#/components/schemas/PopoverConfig_allOf'
    DatumRoleConfigBase:
      properties:
        key:
          type: string
        role:
          type: string
    DatumEmailConfig:
      allOf:
      - $ref: '#/components/schemas/DatumRoleConfigBase'
    DatumLinkSource:
      enum:
      - DATUM
      - DATUM_RAW
      - PARENT_DOCUMENT
      - PERSON
      type: string
    DatumLinkConfig:
      allOf:
      - $ref: '#/components/schemas/DatumRoleConfigBase'
      - $ref: '#/components/schemas/DatumLinkConfig_allOf'
    DatumTooltipConfig:
      allOf:
      - $ref: '#/components/schemas/DatumRoleConfigBase'
    DatumRoleConfig:
      oneOf:
      - $ref: '#/components/schemas/DatumEmailConfig'
      - $ref: '#/components/schemas/DatumLinkConfig'
      - $ref: '#/components/schemas/DatumTooltipConfig'
    DatumTransform:
      properties:
        match:
          type: string
        replace:
          type: string
        type:
          enum:
          - DEFAULT_VALUE
          - FULL_DATE
          - INSTANCE_NAME
          - O365_PATH
          - PRETTY_KEY
          - QUANTITY
          - REGEX
          - SENTENCE_CASE
          - STATIC_VALUE
          - TIME_AGO
          - UPPER_CASE
          type: string
        value:
          type: string
    DatumType:
      enum:
      - COMPOUND
      - CONDITIONAL_ANY_MATCHING
      - CONDITIONAL_FIRST_MATCHING
      - CUSTOM_RENDERING
      - EXTRA_CUSTOM_KEYS
      - OBJECT_KEY
      type: string
    BodyConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
      - $ref: '#/components/schemas/BodyConfig_allOf'
    ContactConfig:
      properties:
        show:
          type: boolean
        emailKey:
          type: string
        phoneKey:
          type: string
    DetailsConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
    FilePathConfig:
      properties:
        show:
          type: boolean
    CompositeIconConfig:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/DatumCondition'
          type: array
        overlayColor:
          type: string
        overlaySizeRatio:
          description: "The size of the secondary icon overlay, expressed as a fraction\
            \ of the primary icon size. Value should be less than or equal to 0.75,\
            \ the default is 0.75."
          type: number
        preferSecondaryForNoOverlay:
          description: "If true, the secondary config will be used in cases where\
            \ an icon overlay can't be displayed, e.g. for small icons."
          type: boolean
        primary:
          $ref: '#/components/schemas/IconConfig'
        secondary:
          $ref: '#/components/schemas/IconConfig'
        secondarySizeRatio:
          description: "The size of the secondary icon, expressed as a fraction of\
            \ the primary icon size. For example, if the primary icon is displayed\
            \ at 40px and secondarySize is 0.5, the secondary icon will be 20px. Should\
            \ be less than or equal to overlaySize if both are specified. Default\
            \ is 0.5."
          type: number
    RelatedDocumentsConfig:
      properties:
        icon:
          $ref: '#/components/schemas/CompositeIconConfig'
        show:
          type: boolean
        snippetMode:
          enum:
          - HIDE
          - TRUNCATE
          - FULL
          type: string
    FooterConfig:
      deprecated: true
      description: Use RelatedConfig instead
      properties:
        attachment:
          $ref: '#/components/schemas/RelatedDocumentsConfig'
        filePath:
          deprecated: true
          description: Use RenderConfig.filePath instead
          type: boolean
    ThreadConfig:
      properties:
        displayLimit:
          type: number
    RelatedSectionConfig:
      properties:
        defaultExpanded:
          type: boolean
        title:
          type: string
        type:
          enum:
          - DOCUMENTS
          type: string
        typeConfig:
          $ref: '#/components/schemas/RelatedSectionConfig_typeConfig'
        icon:
          $ref: '#/components/schemas/IconConfig'
    RelatedConfig:
      properties:
        sectionConfigs:
          additionalProperties:
            $ref: '#/components/schemas/RelatedSectionConfig'
          type: object
        keys:
          items:
            enum:
            - ATTACHMENTS
            - SIMILAR_RESULTS
            - BACKLINKS
            type: string
          type: array
    InteractionsConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
      - $ref: '#/components/schemas/InteractionsConfig_allOf'
    LabelConfig:
      properties:
        background:
          type: string
        color:
          type: string
        icon:
          type: string
        label:
          type: string
        value:
          type: string
    StatusLabelConfig:
      properties:
        key:
          type: string
        omitMissingValues:
          type: boolean
        useDefault:
          type: boolean
        values:
          items:
            $ref: '#/components/schemas/LabelConfig'
          type: array
    MetaConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
      - $ref: '#/components/schemas/MetaConfig_allOf'
    DocumentPreviewType:
      enum:
      - ANNOUNCEMENT
      - ANSWER
      - ANSWER_BOARD
      - COLLECTION
      - CONVERSATION
      - DETAILS
      - NO_PREVIEW
      - THREAD
      - URL
      type: string
    PreviewConfig:
      properties:
        icon:
          $ref: '#/components/schemas/CompositeIconConfig'
        meta:
          $ref: '#/components/schemas/MetaConfig'
        modalWidth:
          type: number
        title:
          $ref: '#/components/schemas/MetadataListConfig'
        type:
          $ref: '#/components/schemas/DocumentPreviewType'
    TitleConfig:
      allOf:
      - $ref: '#/components/schemas/MetadataListConfig'
      - $ref: '#/components/schemas/TitleConfig_allOf'
    SectionsConfig:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/DatumCondition'
          type: array
    RenderConfig:
      properties:
        actions:
          $ref: '#/components/schemas/ActionsConfig'
        additionalConfigs:
          items:
            type: string
          type: array
        body:
          $ref: '#/components/schemas/BodyConfig'
        contact:
          $ref: '#/components/schemas/ContactConfig'
        details:
          $ref: '#/components/schemas/DetailsConfig'
        filePath:
          $ref: '#/components/schemas/FilePathConfig'
        footer:
          $ref: '#/components/schemas/RenderConfig_footer'
        related:
          $ref: '#/components/schemas/RelatedConfig'
        icon:
          items:
            $ref: '#/components/schemas/CompositeIconConfig'
          type: array
        interactions:
          $ref: '#/components/schemas/InteractionsConfig'
        meta:
          $ref: '#/components/schemas/MetaConfig'
        preview:
          $ref: '#/components/schemas/PreviewConfig'
        tags:
          $ref: '#/components/schemas/TagsConfig'
        title:
          $ref: '#/components/schemas/TitleConfig'
        sections:
          $ref: '#/components/schemas/SectionsConfig'
    RenderConfigDict:
      additionalProperties:
        $ref: '#/components/schemas/RenderConfig'
      description: Dictionary of doctype to RenderConfig.
      type: object
    ClientSideCheck:
      enum:
      - BADGE_BETA
      - BADGE_NEW
      - BADGE_VERIFICATION_TASKS
      - CAN_INSTALL_EXTENSION
      - INITIALLY_COLLAPSED_MENU
      - HAS_PRODUCT_UPDATES
      - IS_DESKTOP
      - IS_TOUCH_SCREEN
      - ORG_CHART_PERMISSIONS
      - CAN_INSTALL_PWA
      - IS_DISABLED
      title: Checks to be performed on the client side (enum based)
      type: string
    NavigationLink:
      description: Basic navigation link item.  These represent the leaves in the
        tree
      properties:
        title:
          description: Title to show for the navigation link
          type: string
        target:
          description: Destination for the link
          type: string
        external:
          description: Hint indicating the link points to an external site
          type: boolean
        clientSideChecks:
          description: Client side checks to be performed before render
          items:
            $ref: '#/components/schemas/ClientSideCheck'
          type: array
      required:
      - target
      - title
      title: Navigation Link
    NavigationLinkGroupBehavior:
      enum:
      - SEPARATE
      - COLLAPSIBLE
      title: Indicates behavior hints for the client.  May or may not be used by the
        client during rendering.
      type: string
    NavigationLinkGroup:
      description: "A link group is a collection of navigation links, with an optional\
        \ default panel link target if a group link is provided, the links are displayed\
        \ as second level links otherwise, the group is separated from other section\
        \ via line separators"
      properties:
        title:
          type: string
        defaultLink:
          $ref: '#/components/schemas/NavigationLink'
        links:
          description: Links within the group
          items:
            $ref: '#/components/schemas/NavigationLink'
          type: array
        behaviors:
          description: Behavior hints such as whether the group should be separated.  May
            or may not be used by the client during rendering.
          items:
            $ref: '#/components/schemas/NavigationLinkGroupBehavior'
          type: array
      required:
      - links
      title: Navigation Link Group
      type: object
    NavigationMenuItem:
      description: This is the top level items which appear directly in the navigation
        menu
      properties:
        icon:
          $ref: '#/components/schemas/IconConfig'
        selectedIcon:
          $ref: '#/components/schemas/IconConfig'
        menuTitle:
          description: Title to use for the menu item
          type: string
        sectionTitle:
          description: Title to show on the open section (default to menu title if
            empty)
          type: string
        defaultLink:
          $ref: '#/components/schemas/NavigationLink'
        linkGroups:
          description: Links within the group
          items:
            $ref: '#/components/schemas/NavigationLinkGroup'
          type: array
        clientSideChecks:
          description: Client side checks to be performed before render
          items:
            $ref: '#/components/schemas/ClientSideCheck'
          type: array
      required:
      - defaultLink
      - icon
      - linkGroups
      - menuTitle
      - selectedIcon
      title: Navigation Menu Item
    NavigationMenuPanel:
      description: Contains group of top level Navigation Menu items.  Each panel
        is a separated set of links.
      properties:
        menuItems:
          description: Collection of (top-level menu items
          items:
            $ref: '#/components/schemas/NavigationMenuItem'
          type: array
        hidden:
          description: Indicates this panel itself need not be directly rendered or
            accessible (workspace/user settings)
          type: boolean
      required:
      - menuItems
      title: Navigation Menu Panel
    Navigation:
      description: Menu navigation config schema
      properties:
        panels:
          description: Contains a collection of (top-level) menu links
          items:
            $ref: '#/components/schemas/NavigationMenuPanel'
          type: array
      required:
      - panels
      title: Navigation Menu Config
    ConfigResponse:
      allOf:
      - $ref: '#/components/schemas/BackendExperimentsContext'
      - $ref: '#/components/schemas/ConfigResponse_allOf'
    EmailTemplate:
      description: The type of email to send
      enum:
      - INVITE_TO_SCIO
      - AUTO_INVITE
      - ADMIN_INVITE
      - TEAMMATE_INVITE
      - INVITE_REMINDER
      - VERIFICATION_REQUEST
      - VERIFICATION_REQUEST_NONUSER
      - SEARCH_FEEDBACK
      - DOMAIN_VERIFICATION
      - RECRAWL_DATASOURCE
      - CUSTOM_JSON_REPORT
      - WORKSPACE_INITIALIZED
      type: string
    PeopleFilters:
      example:
        filter:
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        - fieldName: doc_type
          values:
          - value: Spreadsheet
            relationType: EQUALS
            isNegated: false
          - value: Presentation
            relationType: EQUALS
            isNegated: false
        query: query
      properties:
        filter:
          description: Facets used for filtering people search
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        query:
          description: A query string to search for people that each person in the
            response must conform to. An empty query does not filter any people.
          type: string
    EmailRequest:
      description: "A request to send email[s] to the specified users"
      example:
        webAppUrl: webAppUrl
        recipientFilters:
          filter:
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          - fieldName: doc_type
            values:
            - value: Spreadsheet
              relationType: EQUALS
              isNegated: false
            - value: Presentation
              relationType: EQUALS
              isNegated: false
          query: query
        reasons:
        - reasons
        - reasons
        sender: sender
        documents:
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        - connectorType: null
          metadata:
            container: container
            parentId: JIRA_EN-1337
            createTime: 2000-01-23T04:56:07.000Z
            datasource: datasource
            author:
              name: name
            documentId: documentId
            updateTime: 2000-01-23T04:56:07.000Z
            mimeType: mimeType
            objectType: Feature Request
            components:
            - Backend
            - Networking
            status:
            - Done
            customData:
              someCustomField: someCustomValue
          containerDocument: null
          datasource: datasource
          docType: docType
          id: id
          title: title
          content:
            fullTextList:
            - fullTextList
            - fullTextList
          parentDocument: null
          url: url
          sections:
          - title: title
            url: url
          - title: title
            url: url
        feedbackPayload:
          issueType: issueType
          comments: comments
          query: query
          customJson: "{\"comment\": \"glean is awesome!\", \"sender\": \"happycustomer@customer.com\"\
            }"
          url: url
        emailTemplate: null
        recipients:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
        computedRecipientType: ALL_UNINVITED
        companyName: companyName
        datasourceInstance: datasourceInstance
        senders:
        - name: George Clooney
          obfuscatedId: abc123
        - name: George Clooney
          obfuscatedId: abc123
      properties:
        emailTemplate:
          $ref: '#/components/schemas/EmailTemplate'
        recipients:
          description: The people to send emails to
          items:
            $ref: '#/components/schemas/Person'
          type: array
        recipientFilters:
          $ref: '#/components/schemas/PeopleFilters'
        companyName:
          description: Name of the company.
          type: string
        datasourceInstance:
          description: The instance ID of the datasource (if any)
          type: string
        sender:
          deprecated: true
          description: DEPRECATED - Name of the person at the deployment that triggered
            this email.
          type: string
        senders:
          description: The people who triggered this email
          items:
            $ref: '#/components/schemas/Person'
          type: array
        computedRecipientType:
          description: Computed list of recipients to send the email to. Joined against
            the recipients list.
          enum:
          - ALL_UNINVITED
          type: string
        webAppUrl:
          description: "The URL of the client triggering the request, as received\
            \ in the ClientConfig"
          type: string
        documents:
          description: The documents this email request refers to
          items:
            $ref: '#/components/schemas/Document'
          type: array
        reasons:
          description: Reasons this email request was sent. Will be shown directly
            to end user.
          items:
            type: string
          type: array
        feedbackPayload:
          $ref: '#/components/schemas/EmailRequest_feedbackPayload'
      required:
      - emailTemplate
    RemoveCredentialRequest:
      example:
        datasource: datasource
        user: user
      properties:
        datasource:
          description: the datasource the credential applies to
          type: string
        user:
          description: the user info (email or username for example) for the credential
          type: string
    ReminderRequest:
      example:
        reason: reason
        documentId: documentId
        assignee: assignee
        remindInDays: 0
      properties:
        documentId:
          description: The document which the verification is for new reminders and/or
            update.
          type: string
        assignee:
          description: The obfuscated id of the person this verification is assigned
            to.
          type: string
        remindInDays:
          description: "Reminder for the next verifications in terms of days. For\
            \ deletion, this will be omitted."
          type: integer
        reason:
          description: "An optional free-text reason for the reminder. This is particularly\
            \ useful when a reminder is used to ask for verification from another\
            \ user (for example, \"Duplicate\", \"Incomplete\", \"Incorrect\")."
          type: string
      required:
      - documentId
    VerificationFeed:
      example:
        documents:
        - metadata:
            reminders:
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            lastReminder:
              createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            expirationTs: 6
            visitorCount:
            - period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            - period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            lastVerifier:
              name: George Clooney
              obfuscatedId: abc123
            lastVerificationTs: 0
            candidateVerifiers:
            - name: George Clooney
              obfuscatedId: abc123
            - name: George Clooney
              obfuscatedId: abc123
          state: UNVERIFIED
        - metadata:
            reminders:
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            - createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            lastReminder:
              createdAt: 5
              reason: reason
              assignee:
                name: George Clooney
                obfuscatedId: abc123
              requestor:
                name: George Clooney
                obfuscatedId: abc123
              remindAt: 1
            expirationTs: 6
            visitorCount:
            - period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            - period:
                minDaysFromNow: 6
                start:
                  daysFromNow: 5
                  epochSeconds: 5
                maxDaysFromNow: 1
                end:
                  daysFromNow: 5
                  epochSeconds: 5
              org: org
              count: 0
            document:
              connectorType: null
              metadata:
                container: container
                parentId: JIRA_EN-1337
                createTime: 2000-01-23T04:56:07.000Z
                datasource: datasource
                author:
                  name: name
                documentId: documentId
                updateTime: 2000-01-23T04:56:07.000Z
                mimeType: mimeType
                objectType: Feature Request
                components:
                - Backend
                - Networking
                status:
                - Done
                customData:
                  someCustomField: someCustomValue
              containerDocument: null
              datasource: datasource
              docType: docType
              id: id
              title: title
              content:
                fullTextList:
                - fullTextList
                - fullTextList
              parentDocument: null
              url: url
              sections:
              - title: title
                url: url
              - title: title
                url: url
            lastVerifier:
              name: George Clooney
              obfuscatedId: abc123
            lastVerificationTs: 0
            candidateVerifiers:
            - name: George Clooney
              obfuscatedId: abc123
            - name: George Clooney
              obfuscatedId: abc123
          state: UNVERIFIED
      properties:
        documents:
          description: List of document infos that include verification related information
            for them.
          items:
            $ref: '#/components/schemas/Verification'
          type: array
    VerifyRequest:
      example:
        action: VERIFY
        documentId: documentId
      properties:
        documentId:
          description: The document which is verified.
          type: string
        action:
          description: The verification action requested.
          enum:
          - VERIFY
          - DEPRECATE
          - UNVERIFY
          type: string
      required:
      - documentId
    DatasourceCapability:
      description: |
        Intrinsic capabilities of a datasource. Can motivate UI grouping. Ex: workspace https://photos.app.goo.gl/rt19SbzFeMu5i2pQ6
          * PROVIDES_SEARCHABLE_CONTENT: Datasource is eligible to appear in the search page. Ex: Jira, Confluence, web
        crawl datasources, custom datasources, etc. New datasources will default to PROVIDES_SEARCHABLE_CONTENT
          * PROVIDES_SSO: Datasource provides authentication. Ex: Azure, Gsuite, Okta, OneLogin, etc
          * PROVIDES_PEOPLE: Datasource provides people data. Ex: gcs when customers give us a csv to populate Glean
      enum:
      - PROVIDES_SEARCHABLE_CONTENT
      - PROVIDES_SSO
      - PROVIDES_PEOPLE
      type: string
    ContentDefinition:
      description: Describes text content or base64 encoded binary content
      properties:
        mimeType:
          type: string
        textContent:
          description: text content. Only one of textContent or binary content can
            be specified
          type: string
        binaryContent:
          description: base64 encoded binary content. Only one of textContent or binary
            content can be specified
          type: string
      required:
      - mimeType
      type: object
    UserReferenceDefinition:
      description: Describes how a user is referenced in a document. The user can
        be referenced by email or by a datasource specific id.
      properties:
        email:
          type: string
        datasourceUserId:
          description: some datasources refer to the user by the datasource user id
            in the document
          type: string
        name:
          type: string
      type: object
    PermissionsGroupIntersectionDefinition:
      description: describes a list of groups that are all required in a permissions
        constraint
      properties:
        requiredGroups:
          items:
            type: string
          type: array
      type: object
    DocumentPermissionsDefinition:
      description: describes the access control details of the document
      properties:
        allowedUsers:
          description: List of users who can view the document
          items:
            $ref: '#/components/schemas/UserReferenceDefinition'
          type: array
        allowedGroups:
          description: List of groups that can view the document
          items:
            type: string
          type: array
        allowedGroupIntersections:
          description: List of allowed group intersections. This describes a permissions
            constraint of the form ((GroupA AND GroupB AND GroupC) OR (GroupX AND
            GroupY) OR ...
          items:
            $ref: '#/components/schemas/PermissionsGroupIntersectionDefinition'
          type: array
        allowAnonymousAccess:
          description: "If true, then any Glean user can view the document"
          type: boolean
        allowAllDatasourceUsersAccess:
          description: "If true, then any user who has an account in the datasource\
            \ can view the document."
          type: boolean
      type: object
    DocumentInteractionsDefinition:
      description: describes the interactions on the document
      properties:
        numViews:
          type: integer
        numLikes:
          type: integer
        numComments:
          type: integer
      type: object
    CustomProperty:
      description: Describes the custom properties of the object.
      properties:
        name:
          type: string
        value:
          description: "Must either be a string or an array of strings. An integer,\
            \ boolean, etc. is not valid. When OpenAPI Generator supports `oneOf`,\
            \ we can semantically enforce this."
      type: object
    DocumentDefinition:
      description: Indexable document structure
      properties:
        title:
          description: "Document title, in plain text, if present."
          type: string
        container:
          description: The container name for the content (Folder for example for
            file content).
          type: string
        containerDatasourceId:
          description: This represents the datasource sepcific id of the container.
          type: string
        containerObjectType:
          description: This represents the object type of the container. It cannot
            have spaces or _
          type: string
        datasource:
          type: string
        objectType:
          description: "The type of the document (Case, KnowledgeArticle for Salesforce\
            \ for example). It cannot have spaces or _"
          type: string
        viewURL:
          description: The permalink for viewing the document.
          type: string
        id:
          description: The datasource specific id for the document. This field is
            case insensitive and should not be more than 200 characters in length.
          type: string
        summary:
          $ref: '#/components/schemas/ContentDefinition'
        body:
          $ref: '#/components/schemas/ContentDefinition'
        author:
          $ref: '#/components/schemas/UserReferenceDefinition'
        owner:
          $ref: '#/components/schemas/UserReferenceDefinition'
        permissions:
          $ref: '#/components/schemas/DocumentPermissionsDefinition'
        createdAt:
          description: "The creation time, in epoch seconds."
          format: int64
          type: integer
        updatedAt:
          description: "The last update time, in epoch seconds."
          format: int64
          type: integer
        updatedBy:
          $ref: '#/components/schemas/UserReferenceDefinition'
        tags:
          description: Labels associated with the document.
          items:
            type: string
          type: array
        interactions:
          $ref: '#/components/schemas/DocumentInteractionsDefinition'
        status:
          type: string
        additionalUrls:
          description: Additional variations of the url that this document points
            to.
          items:
            type: string
          type: array
        customProperties:
          description: Additional metadata properties of the document.
          items:
            $ref: '#/components/schemas/CustomProperty'
          type: array
      required:
      - datasource
      type: object
    ExternalDocumentsProxyResponse:
      properties:
        status:
          description: "Status of the request, i.e. OK or ERROR"
          type: string
        version:
          description: Version of the response
          type: number
        documents:
          items:
            $ref: '#/components/schemas/ExternalDocumentProxy'
          type: array
    CustomDatasourceConfig_allOf:
      properties:
        identityDatasourceName:
          description: "If the datasource uses another datasource for identity info,\
            \ then the name of the datasource. The identity datasource must exist\
            \ already."
          type: string
        productAccessGroup:
          description: "If the datasource uses a specific product access group, then\
            \ the name of that group."
          type: string
        isUserReferencedByEmail:
          description: whether email is used to reference users in document ACLs and
            in group memberships.
          type: boolean
        isEntityDatasource:
          default: false
          description: True if this datasource is used to push custom entities.
          type: boolean
        isTestDatasource:
          default: false
          description: True if this datasource will be used for testing purpose only.
            Documents from such a datasource wouldn't have any effect on search rankings.
          type: boolean
      type: object
      example: null
    GetExternalDocumentsProxyRequest_query:
      properties:
        owner:
          description: Email address of the owner of the document
          type: string
        requestType:
          description: Type of documents to retrieve
          type: string
      required:
      - owner
      - requestType
      type: object
    RelatedObject_metadata:
      description: "Additional metadata to help FE show a loading state, while not\
        \ having the actual object"
      properties:
        name:
          description: "placeholder name of the object, not the relationship"
          type: string
      type: object
    Team_allOf:
      properties:
        id:
          description: Unique identifier
          type: string
        name:
          description: Team name
          type: string
        description:
          description: A description of the team
          type: string
        businessUnit:
          description: Typically the highest level organizational unit; generally
            applies to bigger companies with multiple distinct businesses.
          type: string
        department:
          description: "An organizational unit where everyone has a similar task,\
            \ e.g. `Engineering`."
          type: string
        photoUrl:
          description: A link to the team's photo
          type: string
        bannerUrl:
          description: A link to the team's banner photo
          type: string
        externalLink:
          description: Link to a team page on the internet or your company's intranet
          format: uri
          type: string
        members:
          description: The members on this team
          items:
            $ref: '#/components/schemas/PersonToTeamRelationship'
          type: array
        memberCount:
          description: "Number of members on this team (recursive; includes all individuals\
            \ that belong to this team, and all individuals that belong to a subteam\
            \ within this team)"
          type: integer
        emails:
          description: The emails for this team
          items:
            $ref: '#/components/schemas/TeamEmail'
          type: array
        datasourceProfiles:
          description: The datasource profiles of the team
          items:
            $ref: '#/components/schemas/DatasourceProfile'
          type: array
        datasource:
          description: "the data source of the team, e.g. GDRIVE"
          type: string
        createdFrom:
          description: "For teams created from docs, the doc title. Otherwise empty."
          type: string
        lastUpdatedAt:
          description: when this team was last updated.
          format: date-time
          type: string
        status:
          default: PROCESSED
          description: whether this team is fully processed or there are still unprocessed
            operations that'll affect it
          enum:
          - PROCESSED
          - QUEUED_FOR_CREATION
          - QUEUED_FOR_DELETION
          type: string
        canBeDeleted:
          default: true
          description: can this team be deleted. Some manually ingested teams like
            GCS_CSV or PUSH_API cannot
          type: boolean
        loggingId:
          description: "The logging id of the team used in scrubbed logs, client analytics,\
            \ and metrics."
          type: string
      required:
      - id
      - name
      type: object
      example: null
    DocumentSpec_oneOf:
      properties:
        url:
          description: The url for document.
          type: string
      required:
      - url
      type: object
    DocumentSpec_oneOf_1:
      properties:
        id:
          description: The id for document.
          type: string
      required:
      - id
      type: object
    DocumentSpec_oneOf_2:
      properties:
        ugcType:
          description: The type of the user generated content (UGC datasource).
          enum:
          - ANNOUNCEMENTS
          - ANSWERS
          - COLLECTIONS
          - SHORTCUTS
          type: string
        contentId:
          description: The id for user generated content.
          type: integer
        docType:
          description: The specific type of the user generated content type.
          type: string
      required:
      - contentId
      - ugcType
      type: object
    CustomEntity_allOf:
      properties:
        id:
          description: Unique identifier.
          type: string
        title:
          description: Title or name of the custom entity.
          type: string
        datasource:
          description: The datasource the custom entity is from.
          type: string
        objectType:
          description: The type of the entity. Interpretation is specific to each
            datasource
          type: string
        metadata:
          $ref: '#/components/schemas/CustomEntityMetadata'
        roles:
          description: A list of user roles for the custom entity explicitly granted
            by the owner.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      type: object
      example: null
    StructuredText_allOf:
      properties:
        structuredList:
          description: An array of objects each of which contains either a string
            or a link which optionally corresponds to a document.
          items:
            $ref: '#/components/schemas/StructuredTextItem'
          type: array
      type: object
      example: null
    AnswerBoard_allOf:
      properties:
        id:
          description: The unique ID of the Answer Board.
          type: integer
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        creator:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        itemCount:
          description: The number of items currently in the Answer Board. Separated
            from the actual items so we can grab the count without items.
          type: integer
        roles:
          description: A list of user roles for the Answer Board.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - description
      - id
      type: object
      example: null
    CollectionMutableProperties_allOf:
      properties:
        icon:
          description: The emoji icon of this Collection.
          type: string
        adminLocked:
          description: Indicates whether edits are allowed for everyone or only admins.
          type: boolean
        parentId:
          description: "The parent of this Collection, or 0 if it's a top-level Collection."
          type: integer
        thumbnail:
          $ref: '#/components/schemas/Thumbnail'
        allowedDatasource:
          description: The datasource type this collection can hold.
          type: string
      required:
      - name
      type: object
      example: null
    Shortcut_allOf:
      properties:
        alias:
          description: canonical link text following go/ prefix where hyphen/underscore
            is removed.
          type: string
        title:
          description: Title for the Go Link
          type: string
        roles:
          description: A list of user roles for the Go Link.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - inputAlias
      type: object
      example: null
    Collection_allOf:
      properties:
        id:
          description: The unique ID of the collection.
          type: integer
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
        creator:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        itemCount:
          description: The number of items currently in the Collection. Separated
            from the actual items so we can grab the count without items.
          type: integer
        childCount:
          description: The number of children Collections. Separated from the actual
            children so we can grab the count without children.
          type: integer
        items:
          description: The items in this Collection.
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
        pinMetadata:
          $ref: '#/components/schemas/CollectionPinnedMetadata'
        shortcuts:
          description: The names of the shortcuts (Go Links) that point to this Collection.
          items:
            type: string
          type: array
        children:
          description: The children Collections of this Collection.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        roles:
          description: A list of user roles for the collection.
          items:
            $ref: '#/components/schemas/UserRoleSpecification'
          type: array
      required:
      - description
      - id
      type: object
      example: null
    CollectionItem_allOf:
      properties:
        collectionId:
          description: The Collection ID of the Collection that this CollectionItem
            belongs in.
          type: integer
        documentId:
          description: "If this CollectionItem is a Glean-indexed document, the document\
            \ ID of that document."
          type: string
        url:
          description: The URL of this CollectionItem.
          type: string
        itemId:
          description: Unique identifier for the item within the collection it belongs
            to.
          type: string
        createdBy:
          $ref: '#/components/schemas/Person'
        createdAt:
          description: Unix timestamp for when the item was first added (in seconds
            since epoch UTC).
          format: date-time
          type: string
        document:
          $ref: '#/components/schemas/Document'
        shortcut:
          $ref: '#/components/schemas/Shortcut'
        collection:
          $ref: '#/components/schemas/Collection'
        itemType:
          enum:
          - DOCUMENT
          - TEXT
          - URL
          - COLLECTION
          type: string
      required:
      - collectionId
      - itemType
      type: object
      example: null
    Answer_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredText'
        likes:
          $ref: '#/components/schemas/AnswerLikes'
        userRole:
          deprecated: true
          description: DEPRECATED - use roles instead. User's role on the specific
            answer.
          enum:
          - OWNER
          - VIEWER
          - ANSWER_MODERATOR
          type: string
        author:
          $ref: '#/components/schemas/Person'
        createTime:
          description: The time the answer was created in ISO format (ISO 8601).
          format: date-time
          type: string
        updateTime:
          description: The time the answer was last updated in ISO format (ISO 8601).
          format: date-time
          type: string
        updatedBy:
          $ref: '#/components/schemas/Person'
        verification:
          $ref: '#/components/schemas/Verification'
        board:
          $ref: '#/components/schemas/AnswerBoard'
        collections:
          description: The collections to which the answer belongs.
          items:
            $ref: '#/components/schemas/Collection'
          type: array
        documentCategory:
          description: The document's document_category(.proto).
          type: string
        sourceDocument:
          $ref: '#/components/schemas/Document'
      required:
      - id
      type: object
      example: null
    PinDocument_allOf:
      properties:
        id:
          description: The opaque id of the pin.
          type: string
        pinId:
          description: DEPRECATED - Prefer use of `id` string field instead
          type: integer
        documentId:
          description: The document which should be a pinned result.
          type: string
        query:
          description: DEPRECATED - The query string for which the result was generated.
          type: string
        audienceFilters:
          description: Filters which restrict who should see the pinned document.
            Values are taken from the corresponding filters in people search.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        attribution:
          $ref: '#/components/schemas/Person'
        updatedBy:
          $ref: '#/components/schemas/Person'
        createTime:
          format: date-time
          type: string
        updateTime:
          format: date-time
          type: string
      required:
      - documentId
      type: object
      example: null
    CreateAnnouncementRequest_allOf:
      properties:
        data:
          $ref: '#/components/schemas/AnnouncementCreateOrUpdateData'
      required:
      - endTime
      - startTime
      - title
      type: object
      example: null
    Announcement_allOf_viewerInfo:
      properties:
        isDismissed:
          description: Whether the viewer has dismissed the announcement.
          type: boolean
        isRead:
          description: Whether the viewer has read the announcement.
          type: boolean
        userActivity:
          deprecated: true
          description: "A list of actions the viewer has taken on the announcement\
            \ (e.g. view, dismiss)."
          items:
            $ref: '#/components/schemas/UserActivity'
          type: array
      type: object
      example: null
    Announcement_allOf:
      properties:
        id:
          description: The opaque id of the announcement.
          type: integer
        author:
          $ref: '#/components/schemas/Person'
        createTimestamp:
          description: Server Unix timestamp of the creation time (in seconds since
            epoch UTC).
          type: integer
        lastUpdateTimestamp:
          description: Server Unix timestamp of the last update time (in seconds since
            epoch UTC).
          type: integer
        updatedBy:
          $ref: '#/components/schemas/Person'
        viewerInfo:
          $ref: '#/components/schemas/Announcement_allOf_viewerInfo'
        sourceDocument:
          $ref: '#/components/schemas/Document'
        isPublished:
          description: Whether or not the announcement is published.
          type: boolean
      type: object
      example: null
    CreateDraftAnnouncementRequest_allOf:
      properties:
        id:
          description: The opaque id of the parent announcement.
          type: integer
      type: object
      example: null
    UpdateAnnouncementRequest_allOf:
      properties:
        id:
          description: The opaque id of the announcement.
          type: integer
        data:
          $ref: '#/components/schemas/AnnouncementCreateOrUpdateData'
      required:
      - endTime
      - id
      - startTime
      - title
      type: object
      example: null
    UpdateDraftAnnouncementRequest_allOf:
      properties:
        id:
          description: The opaque id of the announcement.
          type: integer
        draftId:
          description: The opaque id of the draft.
          type: integer
      required:
      - draftId
      type: object
      example: null
    AnswerCreationData_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredTextMutableProperties'
      type: object
      example: null
    EditAnswerRequest_allOf:
      properties:
        combinedAnswerText:
          $ref: '#/components/schemas/StructuredTextMutableProperties'
      required:
      - id
      type: object
      example: null
    EditAnswerBoardRequest_allOf:
      properties:
        id:
          description: The ID of the Answer Board to modify.
          type: integer
      required:
      - id
      type: object
      example: null
    CreateCollectionRequest_allOf:
      properties:
        newNextItemId:
          description: "The (optional) ItemId of the next CollectionItem in sequence.\
            \ If omitted, will be added to the end of the Collection. Only used if\
            \ parentId is specified."
          type: string
      type: object
      example: null
    CreateCollectionResponse_allOf:
      properties:
        collection:
          $ref: '#/components/schemas/Collection'
        error:
          $ref: '#/components/schemas/CollectionError'
      type: object
      example: null
    EditCollectionRequest_allOf:
      properties:
        id:
          description: The ID of the collection to modify.
          type: integer
      required:
      - id
      type: object
      example: null
    EditDocumentCollectionsRequest_allOf:
      properties:
        documentId:
          description: The document ID of the item being added to or removed from
            collections if it's a Glean-indexed document.
          type: string
        url:
          description: The url of the item being added to or removed from collections.
          type: string
        name:
          description: Custom title of the document if adding a non-indexed URL.
          type: string
        description:
          description: The description of this CollectionItem.
          type: string
      type: object
      example: null
    DisplayableListConfig_allOf:
      properties:
        title:
          description: Primary title for the list
          type: string
        enabled:
          description: Whether the list should be shown to the user
          type: boolean
        audienceFilters:
          description: Filters which restrict who should should see displayable list
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        itemUIConfig:
          $ref: '#/components/schemas/DisplayableListItemUIConfig'
      example: null
    DisplayableList_allOf:
      description: All configurations for a list that can be displayed in FE
      properties:
        id:
          description: "unique identifier for a list, not unique amongst all objects"
          type: integer
        sourceId:
          description: "unstructured identifier for the source to render (id, url,\
            \ query)"
          type: string
        config:
          $ref: '#/components/schemas/DisplayableListConfig'
      type: object
      example: null
    EditPinRequest_allOf:
      properties:
        pinId:
          description: DEPRECATED - Prefer use of `id`
          type: integer
        id:
          description: The opaque id of the pin to be edited
          type: string
      type: object
      example: null
    PinRequest_allOf:
      properties:
        documentId:
          description: The document to be pinned.
          type: string
      type: object
      example: null
    SearchRequest_allOf:
      properties:
        query:
          description: The search terms.
          example: vacation policy
          type: string
        cursor:
          description: Pagination cursor. A previously received opaque token representing
            the position in the overall results at which to start.
          type: string
        resultTabIds:
          description: The unique IDs of the result tabs for which to fetch results.
            This will have precedence over datasource filters if both are specified
            and in conflict.
          items:
            type: string
          type: array
        inputDetails:
          $ref: '#/components/schemas/SearchRequestInputDetails'
        requestOptions:
          $ref: '#/components/schemas/SearchRequestOptions'
        timeoutMillis:
          description: Timeout in milliseconds for the request. Backend should throw
            a 408 if request takes longer than this.
          example: 5000
          type: integer
        people:
          description: "People associated with the search request. Hints to the server\
            \ to fetch additional information for these people. Note that in this\
            \ request, an email may be used as a person's obfuscatedId value."
          items:
            $ref: '#/components/schemas/Person'
          type: array
        disableSpellcheck:
          description: Whether or not to disable spellcheck.
          type: boolean
      type: object
      example: null
    SearchResponse_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/SearchResponseMetadata'
        facetResults:
          items:
            $ref: '#/components/schemas/FacetResult'
          type: array
        resultTabs:
          description: All result tabs available for the current query. Populated
            if QUERY_METADATA is specified in the request.
          items:
            $ref: '#/components/schemas/ResultTab'
          type: array
        resultTabIds:
          description: The unique IDs of the result tabs to which this response belongs.
          items:
            type: string
          type: array
        resultsDescription:
          $ref: '#/components/schemas/ResultsDescription'
        rewrittenFacetFilters:
          description: The actual applied facet filters based on the operators and
            facetFilters in the query. Useful for mapping typed operators to visual
            facets.
          items:
            $ref: '#/components/schemas/FacetFilter'
          type: array
        cursor:
          description: Cursor that indicates the start of the next page of results.
            To be passed in "more" requests for this query.
          type: string
        hasMoreResults:
          description: Whether more results are available. Use cursor to retrieve
            them.
          type: boolean
      type: object
      example: null
    AutocompleteResponse_allOf:
      example: "{\"trackingToken\":\"trackingToken\"}"
      properties:
        trackingToken:
          description: An opaque token that represents this particular set of autocomplete
            results. To be used for /feedback reporting.
          type: string
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        results:
          items:
            $ref: '#/components/schemas/AutocompleteResult'
          type: array
        groups:
          description: Subsections of the results list from which distinct sections
            should be created.
          items:
            $ref: '#/components/schemas/AutocompleteResultGroup'
          type: array
        errorInfo:
          $ref: '#/components/schemas/ErrorInfo'
        backendTimeMillis:
          description: Time in milliseconds the backend took to respond to the request.
          example: 1100
          format: int64
          type: integer
      type: object
    FeedRequestOptions_categoryToResultSize_value:
      example:
        resultSize: 1
      properties:
        resultSize:
          type: integer
      type: object
    CalendarEvent_allOf:
      properties:
        id:
          description: The calendar event id
          type: string
        url:
          description: A permalink for this calendar event
          type: string
        attendees:
          $ref: '#/components/schemas/CalendarAttendees'
        location:
          description: The location that this event is taking place at.
          type: string
        conferenceData:
          $ref: '#/components/schemas/ConferenceData'
        description:
          description: The HTML description of the event.
          type: string
        datasource:
          description: The app or other repository type from which the event was extracted
          type: string
      type: object
      example: null
    FeedEntry_uiConfig_allOf:
      properties:
        additionalFlags:
          $ref: '#/components/schemas/DisplayableListItemUIConfig'
      type: object
    FeedEntry_uiConfig:
      allOf:
      - $ref: '#/components/schemas/DisplayableListFormat'
      - $ref: '#/components/schemas/FeedEntry_uiConfig_allOf'
    FeedResponse_allOf:
      properties:
        trackingToken:
          description: An opaque token that represents this particular feed response.
          type: string
        serverTimestamp:
          description: Server unix timestamp (in seconds since epoch UTC).
          type: integer
        results:
          items:
            $ref: '#/components/schemas/FeedResult'
          type: array
        backendTimeMillis:
          description: Time in milliseconds the backend took to respond to the request.
          format: int64
          type: integer
        serverBuildVersion:
          description: Build versions to be rendered in debug mode.
          type: string
        datasourceAffinity:
          additionalProperties:
            description: "Score for the datasource affinity. Between [0,1]."
            format: float
            type: number
          description: A mapping from datasources to affinity of the user to each
            with scores.
          type: object
        debugInfo:
          $ref: '#/components/schemas/FeedDebugInfo'
        manualFeedbackSignals:
          $ref: '#/components/schemas/FeedManualFeedback'
        companyResourcesCollectionId:
          description: The unique ID of the collection for company resources.
          type: integer
        facetResults:
          additionalProperties:
            items:
              $ref: '#/components/schemas/FacetResult'
            type: array
          description: Map from category to the list of facets that can be used to
            filter the entry's content.
          type: object
        mentionsTimeWindowInHours:
          description: The time window (in hours) used for generating user mentions.
          type: integer
      type: object
      example: null
    DocumentOrError_oneOf:
      properties:
        error:
          description: "The text for error, reason."
          type: string
      required:
      - error
      type: object
    RecommendationsRequest_allOf:
      properties:
        recommendationDocumentSpec:
          $ref: '#/components/schemas/DocumentSpec'
        requestOptions:
          $ref: '#/components/schemas/RecommendationsRequestOptions'
      type: object
      example: null
    GetShortcutRequest_oneOf:
      properties:
        alias:
          description: "The alias for the shortcut, including any arguments for variable\
            \ shortcuts."
          type: string
      required:
      - alias
      type: object
    ConfigRequest_allOf:
      properties:
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
      type: object
      example: null
    SharedDatasourceConfig_allOf:
      properties:
        datasourceName:
          description: "The (non-unique) name of the datasource of which this config\
            \ is an instance, e.g. \"jira\"."
          type: string
        instanceOnlyName:
          description: "The instance of the datasource for this particular config,\
            \ e.g. \"onprem\"."
          type: string
        instanceDescription:
          description: "A human readable string identifying this instance as compared\
            \ to its peers, e.g. \"github.com/askscio\" or \"github.askscio.com\""
          type: string
      type: object
      example: null
    DatasourceSchema_allOf:
      properties:
        calendarEnabled:
          description: Whether this datasource will show calendar feed events
          type: boolean
        collectBodyInActivity:
          description: Whether the HTML body should be reported in ActivityEvents.
          type: boolean
        crawlHomeUrl:
          description: Whether to crawl site starting at the home URL and all crawler
            seed URLs.
          type: boolean
        datasourceDescription:
          description: The support Glean provides for this datasource.
          type: string
        datasourceDisplayName:
          description: The user label for the datasource. This is distinct from the
            display names of the instances.
          type: string
        federatedGoogleOAuth:
          $ref: '#/components/schemas/OAuthConfig'
        isEligibleForNativeReplacement:
          description: Whether the datasource supports the native search replacement
            feature.
          type: boolean
        isEnabled:
          description: Whether the datasource is set in queryapi.datasources.
          type: boolean
        isNativeReplacementAutoEnabled:
          description: Make Native Search Replace opt-out rather than opt-in.
          type: boolean
        isSearchable:
          description: Whether the user is able to search for results from this datasource.
          type: boolean
        mentionsEnabled:
          description: Whether the the datasource is configured to be used within
            mentions features such as the mentions feed
          type: boolean
        privateAuth:
          $ref: '#/components/schemas/PrivateAuth'
        searchInputSelectors:
          description: CSS selectors that identify native search input elements on
            the datasource's website.
          items:
            type: string
          type: array
        supportsCalendar:
          description: Whether the datasource can power the user's calendar.
          type: boolean
        urlRegexVersion:
          description: "The current version of the urlRegex, changes would instruct\
            \ the client to clear any information based on previous versions of the\
            \ urlRegex."
          type: integer
      type: object
      example: null
    ClientConfig_brandings:
      description: "A set of branding objects made avaiable to the end user for visual\
        \ aspects of the app such as background images for light and dark mode, light\
        \ and dark logos, and logo background colors. Anything that is visual but\
        \ not related to themes should go in here."
      properties:
        light:
          $ref: '#/components/schemas/Branding'
        dark:
          $ref: '#/components/schemas/Branding'
    PopoverConfig_allOf:
      properties:
        collections:
          $ref: '#/components/schemas/TagsConfig'
        omit:
          type: boolean
        person:
          type: string
        placement:
          enum:
          - bottom
          - bottomLeft
          - bottomRight
          - left
          - leftBottom
          - leftTop
          - right
          - rightBottom
          - rightTop
          - top
          - topLeft
          - topRight
          type: string
        title:
          type: string
      type: object
      example: null
    DatumLinkConfig_allOf:
      properties:
        linkSource:
          $ref: '#/components/schemas/DatumLinkSource'
      type: object
      example: null
    BodyConfig_allOf:
      properties:
        hide:
          type: boolean
      type: object
      example: null
    RelatedSectionConfig_typeConfig:
      oneOf:
      - $ref: '#/components/schemas/RelatedDocumentsConfig'
      - $ref: '#/components/schemas/TagsConfig'
      - $ref: '#/components/schemas/ThreadConfig'
    InteractionsConfig_allOf:
      properties:
        show:
          type: boolean
      type: object
      example: null
    MetaConfig_allOf:
      properties:
        hideInAttachment:
          type: boolean
        label:
          $ref: '#/components/schemas/StatusLabelConfig'
        commonKeys:
          items:
            type: string
          type: array
      type: object
      example: null
    TitleConfig_allOf:
      properties:
        popover:
          $ref: '#/components/schemas/PopoverConfig'
      type: object
      example: null
    RenderConfig_footer:
      allOf:
      - $ref: '#/components/schemas/FooterConfig'
      deprecated: true
      description: use RenderConfig.filePath and RenderConfig.related instead
    ConfigResponse_allOf:
      example: "{\"datasources\":[{\"name\":\"jira\",\"displayName\":\"Jira\",\"color\"\
        :\"#3487fb\",\"svgIconUrl\":\"https://app.glean.com/images/jira.svg\",\"objectDefinitions\"\
        :[{\"propertyDefinitions\":[{\"name\":\"container\",\"displayLabel\":\"Project\"\
        }]}]},{\"name\":\"gmail\",\"displayName\":\"Gmail\",\"svgIconUrl\":\"https://app.glean.com/images/gmail.svg\"\
        ,\"federatedGoogleOAuth\":[{\"apiKey\":\"abc123\",\"clientId\":\"def456\"\
        ,\"discoveryDocs\":[\"https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest\"\
        ],\"scope\":\"https://www.googleapis.com/auth/gmail.readonly\"}]},{\"name\"\
        :\"slack\",\"displayName\":\"Slack\",\"color\":\"#611f69\",\"svgIconUrl\"\
        :\"https://app.glean.com/images/slack.svg\",\"objectDefinitions\":[{\"propertyDefinitions\"\
        :[{\"name\":\"interactions\",\"objectPropertyOptions\":{\"subobjectProperties\"\
        :[{\"name\":\"comments\",\"displayName\":\"reply\",\"displayNamePlural\":\"\
        replies\"}]}}]}]},{\"name\":\"salesforce\",\"displayName\":\"Salesforce\"\
        ,\"color\":\"#44a0da\",\"svgIconUrl\":\"https://app.glean.com/images/salesforce.svg\"\
        ,\"objectDefinitions\":[{\"name\":\"opportunity\",\"propertyDefinitions\"\
        :[{\"name\":\"assignedTo\",\"displayName\":\"Owned by\"}]},{\"propertyDefinitions\"\
        :[{\"name\":\"assignedTo\"}],\"displayName\":\"Assigned to\"}]}]}"
      properties:
        datasourceConfigs:
          description: "List of datasource \"classes\". Will contain a list of datasource\
            \ instances, but if you need instances for now, continue to use ConfigResponse.datasources\
            \ (misnamed instances)"
          items:
            $ref: '#/components/schemas/DatasourceConfig'
          type: array
        datasources:
          description: List of configurations for datasource instances that may be
            displayed.
          items:
            $ref: '#/components/schemas/DatasourceSchema'
          type: array
        userSettings:
          $ref: '#/components/schemas/UserSettings'
        serverBuildVersion:
          description: Build versions to be rendered in debug mode.
          type: string
        clientConfig:
          $ref: '#/components/schemas/ClientConfig'
        permissions:
          $ref: '#/components/schemas/Permissions'
        sessionInfo:
          $ref: '#/components/schemas/SessionInfo'
        renderConfigs:
          additionalProperties:
            $ref: '#/components/schemas/RenderConfigDict'
          type: object
        navigation:
          $ref: '#/components/schemas/Navigation'
      type: object
    EmailRequest_feedbackPayload:
      description: Optional payload for feedback reporting.
      example:
        issueType: issueType
        comments: comments
        query: query
        customJson: "{\"comment\": \"glean is awesome!\", \"sender\": \"happycustomer@customer.com\"\
          }"
        url: url
      properties:
        issueType:
          description: "The type of issue being reported, e.g. RESULT_MISSING or OTHER\
            \ for search feedback."
          type: string
        comments:
          description: Additional freeform comments provided by the reporter.
          type: string
        url:
          description: The url the reporter was on when feedback was sent.
          type: string
        query:
          description: The query the reporter tried when feedback was sent.
          type: string
        customJson:
          description: Arbitrary email param payloads from 3P-customer widgets. Prefer
            the structured fields when possible.
          example: "{\"comment\": \"glean is awesome!\", \"sender\": \"happycustomer@customer.com\"\
            }"
          type: string
      type: object
  securitySchemes:
    actAsBearerToken:
      bearerFormat: Encrypted auth token generated by debug endpoint.
      scheme: bearer
      type: http
    cookieAuth:
      in: cookie
      name: SSO_DEPENDENT
      type: apiKey
