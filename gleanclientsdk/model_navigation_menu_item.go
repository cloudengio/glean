/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the NavigationMenuItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NavigationMenuItem{}

// NavigationMenuItem This is the top level items which appear directly in the navigation menu
type NavigationMenuItem struct {
	Icon IconConfig `json:"icon"`
	SelectedIcon IconConfig `json:"selectedIcon"`
	// Title to use for the menu item
	MenuTitle string `json:"menuTitle"`
	// Title to show on the open section (default to menu title if empty)
	SectionTitle *string `json:"sectionTitle,omitempty"`
	DefaultLink NavigationLink `json:"defaultLink"`
	// Links within the group
	LinkGroups []NavigationLinkGroup `json:"linkGroups"`
	// Client side checks to be performed before render
	ClientSideChecks []ClientSideCheck `json:"clientSideChecks,omitempty"`
}

// NewNavigationMenuItem instantiates a new NavigationMenuItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNavigationMenuItem(icon IconConfig, selectedIcon IconConfig, menuTitle string, defaultLink NavigationLink, linkGroups []NavigationLinkGroup) *NavigationMenuItem {
	this := NavigationMenuItem{}
	this.Icon = icon
	this.SelectedIcon = selectedIcon
	this.MenuTitle = menuTitle
	this.DefaultLink = defaultLink
	this.LinkGroups = linkGroups
	return &this
}

// NewNavigationMenuItemWithDefaults instantiates a new NavigationMenuItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNavigationMenuItemWithDefaults() *NavigationMenuItem {
	this := NavigationMenuItem{}
	return &this
}

// GetIcon returns the Icon field value
func (o *NavigationMenuItem) GetIcon() IconConfig {
	if o == nil {
		var ret IconConfig
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetIconOk() (*IconConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *NavigationMenuItem) SetIcon(v IconConfig) {
	o.Icon = v
}

// GetSelectedIcon returns the SelectedIcon field value
func (o *NavigationMenuItem) GetSelectedIcon() IconConfig {
	if o == nil {
		var ret IconConfig
		return ret
	}

	return o.SelectedIcon
}

// GetSelectedIconOk returns a tuple with the SelectedIcon field value
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetSelectedIconOk() (*IconConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelectedIcon, true
}

// SetSelectedIcon sets field value
func (o *NavigationMenuItem) SetSelectedIcon(v IconConfig) {
	o.SelectedIcon = v
}

// GetMenuTitle returns the MenuTitle field value
func (o *NavigationMenuItem) GetMenuTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MenuTitle
}

// GetMenuTitleOk returns a tuple with the MenuTitle field value
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetMenuTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MenuTitle, true
}

// SetMenuTitle sets field value
func (o *NavigationMenuItem) SetMenuTitle(v string) {
	o.MenuTitle = v
}

// GetSectionTitle returns the SectionTitle field value if set, zero value otherwise.
func (o *NavigationMenuItem) GetSectionTitle() string {
	if o == nil || IsNil(o.SectionTitle) {
		var ret string
		return ret
	}
	return *o.SectionTitle
}

// GetSectionTitleOk returns a tuple with the SectionTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetSectionTitleOk() (*string, bool) {
	if o == nil || IsNil(o.SectionTitle) {
		return nil, false
	}
	return o.SectionTitle, true
}

// HasSectionTitle returns a boolean if a field has been set.
func (o *NavigationMenuItem) HasSectionTitle() bool {
	if o != nil && !IsNil(o.SectionTitle) {
		return true
	}

	return false
}

// SetSectionTitle gets a reference to the given string and assigns it to the SectionTitle field.
func (o *NavigationMenuItem) SetSectionTitle(v string) {
	o.SectionTitle = &v
}

// GetDefaultLink returns the DefaultLink field value
func (o *NavigationMenuItem) GetDefaultLink() NavigationLink {
	if o == nil {
		var ret NavigationLink
		return ret
	}

	return o.DefaultLink
}

// GetDefaultLinkOk returns a tuple with the DefaultLink field value
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetDefaultLinkOk() (*NavigationLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultLink, true
}

// SetDefaultLink sets field value
func (o *NavigationMenuItem) SetDefaultLink(v NavigationLink) {
	o.DefaultLink = v
}

// GetLinkGroups returns the LinkGroups field value
func (o *NavigationMenuItem) GetLinkGroups() []NavigationLinkGroup {
	if o == nil {
		var ret []NavigationLinkGroup
		return ret
	}

	return o.LinkGroups
}

// GetLinkGroupsOk returns a tuple with the LinkGroups field value
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetLinkGroupsOk() ([]NavigationLinkGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkGroups, true
}

// SetLinkGroups sets field value
func (o *NavigationMenuItem) SetLinkGroups(v []NavigationLinkGroup) {
	o.LinkGroups = v
}

// GetClientSideChecks returns the ClientSideChecks field value if set, zero value otherwise.
func (o *NavigationMenuItem) GetClientSideChecks() []ClientSideCheck {
	if o == nil || IsNil(o.ClientSideChecks) {
		var ret []ClientSideCheck
		return ret
	}
	return o.ClientSideChecks
}

// GetClientSideChecksOk returns a tuple with the ClientSideChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NavigationMenuItem) GetClientSideChecksOk() ([]ClientSideCheck, bool) {
	if o == nil || IsNil(o.ClientSideChecks) {
		return nil, false
	}
	return o.ClientSideChecks, true
}

// HasClientSideChecks returns a boolean if a field has been set.
func (o *NavigationMenuItem) HasClientSideChecks() bool {
	if o != nil && !IsNil(o.ClientSideChecks) {
		return true
	}

	return false
}

// SetClientSideChecks gets a reference to the given []ClientSideCheck and assigns it to the ClientSideChecks field.
func (o *NavigationMenuItem) SetClientSideChecks(v []ClientSideCheck) {
	o.ClientSideChecks = v
}

func (o NavigationMenuItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NavigationMenuItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["selectedIcon"] = o.SelectedIcon
	toSerialize["menuTitle"] = o.MenuTitle
	if !IsNil(o.SectionTitle) {
		toSerialize["sectionTitle"] = o.SectionTitle
	}
	toSerialize["defaultLink"] = o.DefaultLink
	toSerialize["linkGroups"] = o.LinkGroups
	if !IsNil(o.ClientSideChecks) {
		toSerialize["clientSideChecks"] = o.ClientSideChecks
	}
	return toSerialize, nil
}

type NullableNavigationMenuItem struct {
	value *NavigationMenuItem
	isSet bool
}

func (v NullableNavigationMenuItem) Get() *NavigationMenuItem {
	return v.value
}

func (v *NullableNavigationMenuItem) Set(val *NavigationMenuItem) {
	v.value = val
	v.isSet = true
}

func (v NullableNavigationMenuItem) IsSet() bool {
	return v.isSet
}

func (v *NullableNavigationMenuItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNavigationMenuItem(val *NavigationMenuItem) *NullableNavigationMenuItem {
	return &NullableNavigationMenuItem{value: val, isSet: true}
}

func (v NullableNavigationMenuItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNavigationMenuItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


