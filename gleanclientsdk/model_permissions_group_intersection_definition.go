/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PermissionsGroupIntersectionDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionsGroupIntersectionDefinition{}

// PermissionsGroupIntersectionDefinition describes a list of groups that are all required in a permissions constraint
type PermissionsGroupIntersectionDefinition struct {
	RequiredGroups []string `json:"requiredGroups,omitempty"`
}

// NewPermissionsGroupIntersectionDefinition instantiates a new PermissionsGroupIntersectionDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsGroupIntersectionDefinition() *PermissionsGroupIntersectionDefinition {
	this := PermissionsGroupIntersectionDefinition{}
	return &this
}

// NewPermissionsGroupIntersectionDefinitionWithDefaults instantiates a new PermissionsGroupIntersectionDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsGroupIntersectionDefinitionWithDefaults() *PermissionsGroupIntersectionDefinition {
	this := PermissionsGroupIntersectionDefinition{}
	return &this
}

// GetRequiredGroups returns the RequiredGroups field value if set, zero value otherwise.
func (o *PermissionsGroupIntersectionDefinition) GetRequiredGroups() []string {
	if o == nil || IsNil(o.RequiredGroups) {
		var ret []string
		return ret
	}
	return o.RequiredGroups
}

// GetRequiredGroupsOk returns a tuple with the RequiredGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsGroupIntersectionDefinition) GetRequiredGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredGroups) {
		return nil, false
	}
	return o.RequiredGroups, true
}

// HasRequiredGroups returns a boolean if a field has been set.
func (o *PermissionsGroupIntersectionDefinition) HasRequiredGroups() bool {
	if o != nil && !IsNil(o.RequiredGroups) {
		return true
	}

	return false
}

// SetRequiredGroups gets a reference to the given []string and assigns it to the RequiredGroups field.
func (o *PermissionsGroupIntersectionDefinition) SetRequiredGroups(v []string) {
	o.RequiredGroups = v
}

func (o PermissionsGroupIntersectionDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionsGroupIntersectionDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequiredGroups) {
		toSerialize["requiredGroups"] = o.RequiredGroups
	}
	return toSerialize, nil
}

type NullablePermissionsGroupIntersectionDefinition struct {
	value *PermissionsGroupIntersectionDefinition
	isSet bool
}

func (v NullablePermissionsGroupIntersectionDefinition) Get() *PermissionsGroupIntersectionDefinition {
	return v.value
}

func (v *NullablePermissionsGroupIntersectionDefinition) Set(val *PermissionsGroupIntersectionDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsGroupIntersectionDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsGroupIntersectionDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsGroupIntersectionDefinition(val *PermissionsGroupIntersectionDefinition) *NullablePermissionsGroupIntersectionDefinition {
	return &NullablePermissionsGroupIntersectionDefinition{value: val, isSet: true}
}

func (v NullablePermissionsGroupIntersectionDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsGroupIntersectionDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


