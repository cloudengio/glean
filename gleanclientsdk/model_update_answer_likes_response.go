/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the UpdateAnswerLikesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAnswerLikesResponse{}

// UpdateAnswerLikesResponse struct for UpdateAnswerLikesResponse
type UpdateAnswerLikesResponse struct {
	Likes AnswerLikes `json:"likes"`
}

// NewUpdateAnswerLikesResponse instantiates a new UpdateAnswerLikesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAnswerLikesResponse(likes AnswerLikes) *UpdateAnswerLikesResponse {
	this := UpdateAnswerLikesResponse{}
	this.Likes = likes
	return &this
}

// NewUpdateAnswerLikesResponseWithDefaults instantiates a new UpdateAnswerLikesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAnswerLikesResponseWithDefaults() *UpdateAnswerLikesResponse {
	this := UpdateAnswerLikesResponse{}
	return &this
}

// GetLikes returns the Likes field value
func (o *UpdateAnswerLikesResponse) GetLikes() AnswerLikes {
	if o == nil {
		var ret AnswerLikes
		return ret
	}

	return o.Likes
}

// GetLikesOk returns a tuple with the Likes field value
// and a boolean to check if the value has been set.
func (o *UpdateAnswerLikesResponse) GetLikesOk() (*AnswerLikes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Likes, true
}

// SetLikes sets field value
func (o *UpdateAnswerLikesResponse) SetLikes(v AnswerLikes) {
	o.Likes = v
}

func (o UpdateAnswerLikesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAnswerLikesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["likes"] = o.Likes
	return toSerialize, nil
}

type NullableUpdateAnswerLikesResponse struct {
	value *UpdateAnswerLikesResponse
	isSet bool
}

func (v NullableUpdateAnswerLikesResponse) Get() *UpdateAnswerLikesResponse {
	return v.value
}

func (v *NullableUpdateAnswerLikesResponse) Set(val *UpdateAnswerLikesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAnswerLikesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAnswerLikesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAnswerLikesResponse(val *UpdateAnswerLikesResponse) *NullableUpdateAnswerLikesResponse {
	return &NullableUpdateAnswerLikesResponse{value: val, isSet: true}
}

func (v NullableUpdateAnswerLikesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAnswerLikesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


