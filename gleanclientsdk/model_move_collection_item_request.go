/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the MoveCollectionItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveCollectionItemRequest{}

// MoveCollectionItemRequest struct for MoveCollectionItemRequest
type MoveCollectionItemRequest struct {
	// The ID of the Collection to move items in.
	CollectionId int32 `json:"collectionId"`
	// The item ID of the item being moved.
	ItemId string `json:"itemId"`
	// The (optional) item ID of the item that is the new next of itemId, or empty if this is now the last item. This item does not move, it's used as a reference position to put the itemId in the right position.
	NewNextItemId *string `json:"newNextItemId,omitempty"`
}

// NewMoveCollectionItemRequest instantiates a new MoveCollectionItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveCollectionItemRequest(collectionId int32, itemId string) *MoveCollectionItemRequest {
	this := MoveCollectionItemRequest{}
	this.CollectionId = collectionId
	this.ItemId = itemId
	return &this
}

// NewMoveCollectionItemRequestWithDefaults instantiates a new MoveCollectionItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveCollectionItemRequestWithDefaults() *MoveCollectionItemRequest {
	this := MoveCollectionItemRequest{}
	return &this
}

// GetCollectionId returns the CollectionId field value
func (o *MoveCollectionItemRequest) GetCollectionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CollectionId
}

// GetCollectionIdOk returns a tuple with the CollectionId field value
// and a boolean to check if the value has been set.
func (o *MoveCollectionItemRequest) GetCollectionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollectionId, true
}

// SetCollectionId sets field value
func (o *MoveCollectionItemRequest) SetCollectionId(v int32) {
	o.CollectionId = v
}

// GetItemId returns the ItemId field value
func (o *MoveCollectionItemRequest) GetItemId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value
// and a boolean to check if the value has been set.
func (o *MoveCollectionItemRequest) GetItemIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemId, true
}

// SetItemId sets field value
func (o *MoveCollectionItemRequest) SetItemId(v string) {
	o.ItemId = v
}

// GetNewNextItemId returns the NewNextItemId field value if set, zero value otherwise.
func (o *MoveCollectionItemRequest) GetNewNextItemId() string {
	if o == nil || IsNil(o.NewNextItemId) {
		var ret string
		return ret
	}
	return *o.NewNextItemId
}

// GetNewNextItemIdOk returns a tuple with the NewNextItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveCollectionItemRequest) GetNewNextItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.NewNextItemId) {
		return nil, false
	}
	return o.NewNextItemId, true
}

// HasNewNextItemId returns a boolean if a field has been set.
func (o *MoveCollectionItemRequest) HasNewNextItemId() bool {
	if o != nil && !IsNil(o.NewNextItemId) {
		return true
	}

	return false
}

// SetNewNextItemId gets a reference to the given string and assigns it to the NewNextItemId field.
func (o *MoveCollectionItemRequest) SetNewNextItemId(v string) {
	o.NewNextItemId = &v
}

func (o MoveCollectionItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveCollectionItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collectionId"] = o.CollectionId
	toSerialize["itemId"] = o.ItemId
	if !IsNil(o.NewNextItemId) {
		toSerialize["newNextItemId"] = o.NewNextItemId
	}
	return toSerialize, nil
}

type NullableMoveCollectionItemRequest struct {
	value *MoveCollectionItemRequest
	isSet bool
}

func (v NullableMoveCollectionItemRequest) Get() *MoveCollectionItemRequest {
	return v.value
}

func (v *NullableMoveCollectionItemRequest) Set(val *MoveCollectionItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveCollectionItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveCollectionItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveCollectionItemRequest(val *MoveCollectionItemRequest) *NullableMoveCollectionItemRequest {
	return &NullableMoveCollectionItemRequest{value: val, isSet: true}
}

func (v NullableMoveCollectionItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveCollectionItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


