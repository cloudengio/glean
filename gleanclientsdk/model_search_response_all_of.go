/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the SearchResponseAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResponseAllOf{}

// SearchResponseAllOf struct for SearchResponseAllOf
type SearchResponseAllOf struct {
	Metadata *SearchResponseMetadata `json:"metadata,omitempty"`
	FacetResults []FacetResult `json:"facetResults,omitempty"`
	// All result tabs available for the current query. Populated if QUERY_METADATA is specified in the request.
	ResultTabs []ResultTab `json:"resultTabs,omitempty"`
	// The unique IDs of the result tabs to which this response belongs.
	ResultTabIds []string `json:"resultTabIds,omitempty"`
	ResultsDescription *ResultsDescription `json:"resultsDescription,omitempty"`
	// The actual applied facet filters based on the operators and facetFilters in the query. Useful for mapping typed operators to visual facets.
	RewrittenFacetFilters []FacetFilter `json:"rewrittenFacetFilters,omitempty"`
	// Cursor that indicates the start of the next page of results. To be passed in \"more\" requests for this query.
	Cursor *string `json:"cursor,omitempty"`
	// Whether more results are available. Use cursor to retrieve them.
	HasMoreResults *bool `json:"hasMoreResults,omitempty"`
}

// NewSearchResponseAllOf instantiates a new SearchResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponseAllOf() *SearchResponseAllOf {
	this := SearchResponseAllOf{}
	return &this
}

// NewSearchResponseAllOfWithDefaults instantiates a new SearchResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseAllOfWithDefaults() *SearchResponseAllOf {
	this := SearchResponseAllOf{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetMetadata() SearchResponseMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret SearchResponseMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetMetadataOk() (*SearchResponseMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given SearchResponseMetadata and assigns it to the Metadata field.
func (o *SearchResponseAllOf) SetMetadata(v SearchResponseMetadata) {
	o.Metadata = &v
}

// GetFacetResults returns the FacetResults field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetFacetResults() []FacetResult {
	if o == nil || IsNil(o.FacetResults) {
		var ret []FacetResult
		return ret
	}
	return o.FacetResults
}

// GetFacetResultsOk returns a tuple with the FacetResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetFacetResultsOk() ([]FacetResult, bool) {
	if o == nil || IsNil(o.FacetResults) {
		return nil, false
	}
	return o.FacetResults, true
}

// HasFacetResults returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasFacetResults() bool {
	if o != nil && !IsNil(o.FacetResults) {
		return true
	}

	return false
}

// SetFacetResults gets a reference to the given []FacetResult and assigns it to the FacetResults field.
func (o *SearchResponseAllOf) SetFacetResults(v []FacetResult) {
	o.FacetResults = v
}

// GetResultTabs returns the ResultTabs field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetResultTabs() []ResultTab {
	if o == nil || IsNil(o.ResultTabs) {
		var ret []ResultTab
		return ret
	}
	return o.ResultTabs
}

// GetResultTabsOk returns a tuple with the ResultTabs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetResultTabsOk() ([]ResultTab, bool) {
	if o == nil || IsNil(o.ResultTabs) {
		return nil, false
	}
	return o.ResultTabs, true
}

// HasResultTabs returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasResultTabs() bool {
	if o != nil && !IsNil(o.ResultTabs) {
		return true
	}

	return false
}

// SetResultTabs gets a reference to the given []ResultTab and assigns it to the ResultTabs field.
func (o *SearchResponseAllOf) SetResultTabs(v []ResultTab) {
	o.ResultTabs = v
}

// GetResultTabIds returns the ResultTabIds field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetResultTabIds() []string {
	if o == nil || IsNil(o.ResultTabIds) {
		var ret []string
		return ret
	}
	return o.ResultTabIds
}

// GetResultTabIdsOk returns a tuple with the ResultTabIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetResultTabIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResultTabIds) {
		return nil, false
	}
	return o.ResultTabIds, true
}

// HasResultTabIds returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasResultTabIds() bool {
	if o != nil && !IsNil(o.ResultTabIds) {
		return true
	}

	return false
}

// SetResultTabIds gets a reference to the given []string and assigns it to the ResultTabIds field.
func (o *SearchResponseAllOf) SetResultTabIds(v []string) {
	o.ResultTabIds = v
}

// GetResultsDescription returns the ResultsDescription field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetResultsDescription() ResultsDescription {
	if o == nil || IsNil(o.ResultsDescription) {
		var ret ResultsDescription
		return ret
	}
	return *o.ResultsDescription
}

// GetResultsDescriptionOk returns a tuple with the ResultsDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetResultsDescriptionOk() (*ResultsDescription, bool) {
	if o == nil || IsNil(o.ResultsDescription) {
		return nil, false
	}
	return o.ResultsDescription, true
}

// HasResultsDescription returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasResultsDescription() bool {
	if o != nil && !IsNil(o.ResultsDescription) {
		return true
	}

	return false
}

// SetResultsDescription gets a reference to the given ResultsDescription and assigns it to the ResultsDescription field.
func (o *SearchResponseAllOf) SetResultsDescription(v ResultsDescription) {
	o.ResultsDescription = &v
}

// GetRewrittenFacetFilters returns the RewrittenFacetFilters field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetRewrittenFacetFilters() []FacetFilter {
	if o == nil || IsNil(o.RewrittenFacetFilters) {
		var ret []FacetFilter
		return ret
	}
	return o.RewrittenFacetFilters
}

// GetRewrittenFacetFiltersOk returns a tuple with the RewrittenFacetFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetRewrittenFacetFiltersOk() ([]FacetFilter, bool) {
	if o == nil || IsNil(o.RewrittenFacetFilters) {
		return nil, false
	}
	return o.RewrittenFacetFilters, true
}

// HasRewrittenFacetFilters returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasRewrittenFacetFilters() bool {
	if o != nil && !IsNil(o.RewrittenFacetFilters) {
		return true
	}

	return false
}

// SetRewrittenFacetFilters gets a reference to the given []FacetFilter and assigns it to the RewrittenFacetFilters field.
func (o *SearchResponseAllOf) SetRewrittenFacetFilters(v []FacetFilter) {
	o.RewrittenFacetFilters = v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *SearchResponseAllOf) SetCursor(v string) {
	o.Cursor = &v
}

// GetHasMoreResults returns the HasMoreResults field value if set, zero value otherwise.
func (o *SearchResponseAllOf) GetHasMoreResults() bool {
	if o == nil || IsNil(o.HasMoreResults) {
		var ret bool
		return ret
	}
	return *o.HasMoreResults
}

// GetHasMoreResultsOk returns a tuple with the HasMoreResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseAllOf) GetHasMoreResultsOk() (*bool, bool) {
	if o == nil || IsNil(o.HasMoreResults) {
		return nil, false
	}
	return o.HasMoreResults, true
}

// HasHasMoreResults returns a boolean if a field has been set.
func (o *SearchResponseAllOf) HasHasMoreResults() bool {
	if o != nil && !IsNil(o.HasMoreResults) {
		return true
	}

	return false
}

// SetHasMoreResults gets a reference to the given bool and assigns it to the HasMoreResults field.
func (o *SearchResponseAllOf) SetHasMoreResults(v bool) {
	o.HasMoreResults = &v
}

func (o SearchResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponseAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.FacetResults) {
		toSerialize["facetResults"] = o.FacetResults
	}
	if !IsNil(o.ResultTabs) {
		toSerialize["resultTabs"] = o.ResultTabs
	}
	if !IsNil(o.ResultTabIds) {
		toSerialize["resultTabIds"] = o.ResultTabIds
	}
	if !IsNil(o.ResultsDescription) {
		toSerialize["resultsDescription"] = o.ResultsDescription
	}
	if !IsNil(o.RewrittenFacetFilters) {
		toSerialize["rewrittenFacetFilters"] = o.RewrittenFacetFilters
	}
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.HasMoreResults) {
		toSerialize["hasMoreResults"] = o.HasMoreResults
	}
	return toSerialize, nil
}

type NullableSearchResponseAllOf struct {
	value *SearchResponseAllOf
	isSet bool
}

func (v NullableSearchResponseAllOf) Get() *SearchResponseAllOf {
	return v.value
}

func (v *NullableSearchResponseAllOf) Set(val *SearchResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponseAllOf(val *SearchResponseAllOf) *NullableSearchResponseAllOf {
	return &NullableSearchResponseAllOf{value: val, isSet: true}
}

func (v NullableSearchResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


