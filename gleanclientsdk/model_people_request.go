/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PeopleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PeopleRequest{}

// PeopleRequest struct for PeopleRequest
type PeopleRequest struct {
	// The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
	TimezoneOffset *int32 `json:"timezoneOffset,omitempty"`
	// The Person IDs to retrieve. If no IDs are requested, the current user's details are returned.
	ObfuscatedIds []string `json:"obfuscatedIds,omitempty"`
	// The email IDs to retrieve. The result is the deduplicated union of emailIds and obfuscatedIds.
	EmailIds []string `json:"emailIds,omitempty"`
	// List of PersonMetadata fields to return (that aren't returned by default)
	IncludeFields []string `json:"includeFields,omitempty"`
	// A string denoting the search surface from which the endpoint is called.
	Source *string `json:"source,omitempty"`
}

// NewPeopleRequest instantiates a new PeopleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleRequest() *PeopleRequest {
	this := PeopleRequest{}
	return &this
}

// NewPeopleRequestWithDefaults instantiates a new PeopleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleRequestWithDefaults() *PeopleRequest {
	this := PeopleRequest{}
	return &this
}

// GetTimezoneOffset returns the TimezoneOffset field value if set, zero value otherwise.
func (o *PeopleRequest) GetTimezoneOffset() int32 {
	if o == nil || IsNil(o.TimezoneOffset) {
		var ret int32
		return ret
	}
	return *o.TimezoneOffset
}

// GetTimezoneOffsetOk returns a tuple with the TimezoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleRequest) GetTimezoneOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.TimezoneOffset) {
		return nil, false
	}
	return o.TimezoneOffset, true
}

// HasTimezoneOffset returns a boolean if a field has been set.
func (o *PeopleRequest) HasTimezoneOffset() bool {
	if o != nil && !IsNil(o.TimezoneOffset) {
		return true
	}

	return false
}

// SetTimezoneOffset gets a reference to the given int32 and assigns it to the TimezoneOffset field.
func (o *PeopleRequest) SetTimezoneOffset(v int32) {
	o.TimezoneOffset = &v
}

// GetObfuscatedIds returns the ObfuscatedIds field value if set, zero value otherwise.
func (o *PeopleRequest) GetObfuscatedIds() []string {
	if o == nil || IsNil(o.ObfuscatedIds) {
		var ret []string
		return ret
	}
	return o.ObfuscatedIds
}

// GetObfuscatedIdsOk returns a tuple with the ObfuscatedIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleRequest) GetObfuscatedIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ObfuscatedIds) {
		return nil, false
	}
	return o.ObfuscatedIds, true
}

// HasObfuscatedIds returns a boolean if a field has been set.
func (o *PeopleRequest) HasObfuscatedIds() bool {
	if o != nil && !IsNil(o.ObfuscatedIds) {
		return true
	}

	return false
}

// SetObfuscatedIds gets a reference to the given []string and assigns it to the ObfuscatedIds field.
func (o *PeopleRequest) SetObfuscatedIds(v []string) {
	o.ObfuscatedIds = v
}

// GetEmailIds returns the EmailIds field value if set, zero value otherwise.
func (o *PeopleRequest) GetEmailIds() []string {
	if o == nil || IsNil(o.EmailIds) {
		var ret []string
		return ret
	}
	return o.EmailIds
}

// GetEmailIdsOk returns a tuple with the EmailIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleRequest) GetEmailIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailIds) {
		return nil, false
	}
	return o.EmailIds, true
}

// HasEmailIds returns a boolean if a field has been set.
func (o *PeopleRequest) HasEmailIds() bool {
	if o != nil && !IsNil(o.EmailIds) {
		return true
	}

	return false
}

// SetEmailIds gets a reference to the given []string and assigns it to the EmailIds field.
func (o *PeopleRequest) SetEmailIds(v []string) {
	o.EmailIds = v
}

// GetIncludeFields returns the IncludeFields field value if set, zero value otherwise.
func (o *PeopleRequest) GetIncludeFields() []string {
	if o == nil || IsNil(o.IncludeFields) {
		var ret []string
		return ret
	}
	return o.IncludeFields
}

// GetIncludeFieldsOk returns a tuple with the IncludeFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleRequest) GetIncludeFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeFields) {
		return nil, false
	}
	return o.IncludeFields, true
}

// HasIncludeFields returns a boolean if a field has been set.
func (o *PeopleRequest) HasIncludeFields() bool {
	if o != nil && !IsNil(o.IncludeFields) {
		return true
	}

	return false
}

// SetIncludeFields gets a reference to the given []string and assigns it to the IncludeFields field.
func (o *PeopleRequest) SetIncludeFields(v []string) {
	o.IncludeFields = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PeopleRequest) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleRequest) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PeopleRequest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *PeopleRequest) SetSource(v string) {
	o.Source = &v
}

func (o PeopleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PeopleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimezoneOffset) {
		toSerialize["timezoneOffset"] = o.TimezoneOffset
	}
	if !IsNil(o.ObfuscatedIds) {
		toSerialize["obfuscatedIds"] = o.ObfuscatedIds
	}
	if !IsNil(o.EmailIds) {
		toSerialize["emailIds"] = o.EmailIds
	}
	if !IsNil(o.IncludeFields) {
		toSerialize["includeFields"] = o.IncludeFields
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullablePeopleRequest struct {
	value *PeopleRequest
	isSet bool
}

func (v NullablePeopleRequest) Get() *PeopleRequest {
	return v.value
}

func (v *NullablePeopleRequest) Set(val *PeopleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleRequest(val *PeopleRequest) *NullablePeopleRequest {
	return &NullablePeopleRequest{value: val, isSet: true}
}

func (v NullablePeopleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


