/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
	"time"
)

// checks if the PersonMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersonMetadata{}

// PersonMetadata struct for PersonMetadata
type PersonMetadata struct {
	Type *string `json:"type,omitempty"`
	// The first name of the person
	FirstName *string `json:"firstName,omitempty"`
	// The last name of the person
	LastName *string `json:"lastName,omitempty"`
	// Job title.
	Title *string `json:"title,omitempty"`
	// Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses.
	BusinessUnit *string `json:"businessUnit,omitempty"`
	// An organizational unit where everyone has a similar task, e.g. `Engineering`.
	Department *string `json:"department,omitempty"`
	// Info about the employee's team(s).
	Teams []PersonTeam `json:"teams,omitempty"`
	// The number of people in this person's department.
	DepartmentCount *int32 `json:"departmentCount,omitempty"`
	// The user's primary email address
	Email *string `json:"email,omitempty"`
	// Additional email addresses of this user beyond the primary, if any.
	AliasEmails []string `json:"aliasEmails,omitempty"`
	// User facing string representing the person's location.
	Location *string `json:"location,omitempty"`
	StructuredLocation *StructuredLocation `json:"structuredLocation,omitempty"`
	// Link to a customer's internal profile page. This is set to '#' when no link is desired.
	ExternalProfileLink *string `json:"externalProfileLink,omitempty"`
	Manager *Person `json:"manager,omitempty"`
	// The chain of reporting in the company as far up as it goes. The last entry is this person's direct manager.
	ManagementChain []Person `json:"managementChain,omitempty"`
	// Phone number as a number string.
	Phone *string `json:"phone,omitempty"`
	// The URL of the person's avatar. Public, glean-authenticated and Base64 encoded data URLs are all valid (but not third-party-authenticated URLs).
	PhotoUrl *string `json:"photoUrl,omitempty"`
	// The original photo URL of the person's avatar before any edits they made are applied
	UneditedPhotoUrl *string `json:"uneditedPhotoUrl,omitempty"`
	// The URL of the person's banner photo.
	BannerUrl *string `json:"bannerUrl,omitempty"`
	Reports []Person `json:"reports,omitempty"`
	// The date when the employee started.
	StartDate *string `json:"startDate,omitempty"`
	// If a former employee, the last date of employment.
	EndDate *string `json:"endDate,omitempty"`
	// Short biography or mission statement of the employee.
	Bio *string `json:"bio,omitempty"`
	// She/her, He/his or other pronoun.
	Pronoun *string `json:"pronoun,omitempty"`
	// The total recursive size of the people reporting to this person, or 1
	OrgSizeCount *int32 `json:"orgSizeCount,omitempty"`
	// The total number of people who directly report to this person, or 0
	DirectReportsCount *int32 `json:"directReportsCount,omitempty"`
	// The preferred name of the person, or a nickname.
	PreferredName *string `json:"preferredName,omitempty"`
	// List of social network profiles.
	SocialNetwork []SocialNetwork `json:"socialNetwork,omitempty"`
	// List of profiles this user has in different datasources / tools that they use.
	DatasourceProfile []DatasourceProfile `json:"datasourceProfile,omitempty"`
	QuerySuggestions *QuerySuggestionList `json:"querySuggestions,omitempty"`
	// List of people and distances to those people from this person. Optionally with metadata.
	PeopleDistance []PersonDistance `json:"peopleDistance,omitempty"`
	InviteInfo *InviteInfo `json:"inviteInfo,omitempty"`
	// Whether the user has signed into Glean at least once.
	IsSignedUp *bool `json:"isSignedUp,omitempty"`
	// The last time the user has used the Glean extension in ISO 8601 format.
	LastExtensionUse *time.Time `json:"lastExtensionUse,omitempty"`
	Permissions *Permissions `json:"permissions,omitempty"`
	// User customizable fields for additional people information.
	CustomFields []CustomFieldData `json:"customFields,omitempty"`
	// The logging id of the person used in scrubbed logs, tracking GA metrics.
	LoggingId *string `json:"loggingId,omitempty"`
	// Percentage of the company that started strictly after this person. Between [0,100).
	StartDatePercentile *float32 `json:"startDatePercentile,omitempty"`
	// Intervals of busy time for this person, along with the type of event they're busy with.
	BusyEvents []AnonymousEvent `json:"busyEvents,omitempty"`
	// flag settings to indicate user profile settings for certain items
	ProfileBoolSettings *map[string]bool `json:"profileBoolSettings,omitempty"`
	// The badges that a user has earned over their lifetime.
	Badges []Badge `json:"badges,omitempty"`
}

// NewPersonMetadata instantiates a new PersonMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersonMetadata() *PersonMetadata {
	this := PersonMetadata{}
	return &this
}

// NewPersonMetadataWithDefaults instantiates a new PersonMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersonMetadataWithDefaults() *PersonMetadata {
	this := PersonMetadata{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PersonMetadata) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PersonMetadata) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PersonMetadata) SetType(v string) {
	o.Type = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PersonMetadata) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PersonMetadata) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PersonMetadata) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PersonMetadata) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PersonMetadata) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PersonMetadata) SetLastName(v string) {
	o.LastName = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PersonMetadata) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PersonMetadata) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PersonMetadata) SetTitle(v string) {
	o.Title = &v
}

// GetBusinessUnit returns the BusinessUnit field value if set, zero value otherwise.
func (o *PersonMetadata) GetBusinessUnit() string {
	if o == nil || IsNil(o.BusinessUnit) {
		var ret string
		return ret
	}
	return *o.BusinessUnit
}

// GetBusinessUnitOk returns a tuple with the BusinessUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetBusinessUnitOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessUnit) {
		return nil, false
	}
	return o.BusinessUnit, true
}

// HasBusinessUnit returns a boolean if a field has been set.
func (o *PersonMetadata) HasBusinessUnit() bool {
	if o != nil && !IsNil(o.BusinessUnit) {
		return true
	}

	return false
}

// SetBusinessUnit gets a reference to the given string and assigns it to the BusinessUnit field.
func (o *PersonMetadata) SetBusinessUnit(v string) {
	o.BusinessUnit = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *PersonMetadata) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *PersonMetadata) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *PersonMetadata) SetDepartment(v string) {
	o.Department = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *PersonMetadata) GetTeams() []PersonTeam {
	if o == nil || IsNil(o.Teams) {
		var ret []PersonTeam
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetTeamsOk() ([]PersonTeam, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *PersonMetadata) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []PersonTeam and assigns it to the Teams field.
func (o *PersonMetadata) SetTeams(v []PersonTeam) {
	o.Teams = v
}

// GetDepartmentCount returns the DepartmentCount field value if set, zero value otherwise.
func (o *PersonMetadata) GetDepartmentCount() int32 {
	if o == nil || IsNil(o.DepartmentCount) {
		var ret int32
		return ret
	}
	return *o.DepartmentCount
}

// GetDepartmentCountOk returns a tuple with the DepartmentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetDepartmentCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DepartmentCount) {
		return nil, false
	}
	return o.DepartmentCount, true
}

// HasDepartmentCount returns a boolean if a field has been set.
func (o *PersonMetadata) HasDepartmentCount() bool {
	if o != nil && !IsNil(o.DepartmentCount) {
		return true
	}

	return false
}

// SetDepartmentCount gets a reference to the given int32 and assigns it to the DepartmentCount field.
func (o *PersonMetadata) SetDepartmentCount(v int32) {
	o.DepartmentCount = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PersonMetadata) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PersonMetadata) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PersonMetadata) SetEmail(v string) {
	o.Email = &v
}

// GetAliasEmails returns the AliasEmails field value if set, zero value otherwise.
func (o *PersonMetadata) GetAliasEmails() []string {
	if o == nil || IsNil(o.AliasEmails) {
		var ret []string
		return ret
	}
	return o.AliasEmails
}

// GetAliasEmailsOk returns a tuple with the AliasEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetAliasEmailsOk() ([]string, bool) {
	if o == nil || IsNil(o.AliasEmails) {
		return nil, false
	}
	return o.AliasEmails, true
}

// HasAliasEmails returns a boolean if a field has been set.
func (o *PersonMetadata) HasAliasEmails() bool {
	if o != nil && !IsNil(o.AliasEmails) {
		return true
	}

	return false
}

// SetAliasEmails gets a reference to the given []string and assigns it to the AliasEmails field.
func (o *PersonMetadata) SetAliasEmails(v []string) {
	o.AliasEmails = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *PersonMetadata) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *PersonMetadata) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *PersonMetadata) SetLocation(v string) {
	o.Location = &v
}

// GetStructuredLocation returns the StructuredLocation field value if set, zero value otherwise.
func (o *PersonMetadata) GetStructuredLocation() StructuredLocation {
	if o == nil || IsNil(o.StructuredLocation) {
		var ret StructuredLocation
		return ret
	}
	return *o.StructuredLocation
}

// GetStructuredLocationOk returns a tuple with the StructuredLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetStructuredLocationOk() (*StructuredLocation, bool) {
	if o == nil || IsNil(o.StructuredLocation) {
		return nil, false
	}
	return o.StructuredLocation, true
}

// HasStructuredLocation returns a boolean if a field has been set.
func (o *PersonMetadata) HasStructuredLocation() bool {
	if o != nil && !IsNil(o.StructuredLocation) {
		return true
	}

	return false
}

// SetStructuredLocation gets a reference to the given StructuredLocation and assigns it to the StructuredLocation field.
func (o *PersonMetadata) SetStructuredLocation(v StructuredLocation) {
	o.StructuredLocation = &v
}

// GetExternalProfileLink returns the ExternalProfileLink field value if set, zero value otherwise.
func (o *PersonMetadata) GetExternalProfileLink() string {
	if o == nil || IsNil(o.ExternalProfileLink) {
		var ret string
		return ret
	}
	return *o.ExternalProfileLink
}

// GetExternalProfileLinkOk returns a tuple with the ExternalProfileLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetExternalProfileLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalProfileLink) {
		return nil, false
	}
	return o.ExternalProfileLink, true
}

// HasExternalProfileLink returns a boolean if a field has been set.
func (o *PersonMetadata) HasExternalProfileLink() bool {
	if o != nil && !IsNil(o.ExternalProfileLink) {
		return true
	}

	return false
}

// SetExternalProfileLink gets a reference to the given string and assigns it to the ExternalProfileLink field.
func (o *PersonMetadata) SetExternalProfileLink(v string) {
	o.ExternalProfileLink = &v
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *PersonMetadata) GetManager() Person {
	if o == nil || IsNil(o.Manager) {
		var ret Person
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetManagerOk() (*Person, bool) {
	if o == nil || IsNil(o.Manager) {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *PersonMetadata) HasManager() bool {
	if o != nil && !IsNil(o.Manager) {
		return true
	}

	return false
}

// SetManager gets a reference to the given Person and assigns it to the Manager field.
func (o *PersonMetadata) SetManager(v Person) {
	o.Manager = &v
}

// GetManagementChain returns the ManagementChain field value if set, zero value otherwise.
func (o *PersonMetadata) GetManagementChain() []Person {
	if o == nil || IsNil(o.ManagementChain) {
		var ret []Person
		return ret
	}
	return o.ManagementChain
}

// GetManagementChainOk returns a tuple with the ManagementChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetManagementChainOk() ([]Person, bool) {
	if o == nil || IsNil(o.ManagementChain) {
		return nil, false
	}
	return o.ManagementChain, true
}

// HasManagementChain returns a boolean if a field has been set.
func (o *PersonMetadata) HasManagementChain() bool {
	if o != nil && !IsNil(o.ManagementChain) {
		return true
	}

	return false
}

// SetManagementChain gets a reference to the given []Person and assigns it to the ManagementChain field.
func (o *PersonMetadata) SetManagementChain(v []Person) {
	o.ManagementChain = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PersonMetadata) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PersonMetadata) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PersonMetadata) SetPhone(v string) {
	o.Phone = &v
}

// GetPhotoUrl returns the PhotoUrl field value if set, zero value otherwise.
func (o *PersonMetadata) GetPhotoUrl() string {
	if o == nil || IsNil(o.PhotoUrl) {
		var ret string
		return ret
	}
	return *o.PhotoUrl
}

// GetPhotoUrlOk returns a tuple with the PhotoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPhotoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PhotoUrl) {
		return nil, false
	}
	return o.PhotoUrl, true
}

// HasPhotoUrl returns a boolean if a field has been set.
func (o *PersonMetadata) HasPhotoUrl() bool {
	if o != nil && !IsNil(o.PhotoUrl) {
		return true
	}

	return false
}

// SetPhotoUrl gets a reference to the given string and assigns it to the PhotoUrl field.
func (o *PersonMetadata) SetPhotoUrl(v string) {
	o.PhotoUrl = &v
}

// GetUneditedPhotoUrl returns the UneditedPhotoUrl field value if set, zero value otherwise.
func (o *PersonMetadata) GetUneditedPhotoUrl() string {
	if o == nil || IsNil(o.UneditedPhotoUrl) {
		var ret string
		return ret
	}
	return *o.UneditedPhotoUrl
}

// GetUneditedPhotoUrlOk returns a tuple with the UneditedPhotoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetUneditedPhotoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UneditedPhotoUrl) {
		return nil, false
	}
	return o.UneditedPhotoUrl, true
}

// HasUneditedPhotoUrl returns a boolean if a field has been set.
func (o *PersonMetadata) HasUneditedPhotoUrl() bool {
	if o != nil && !IsNil(o.UneditedPhotoUrl) {
		return true
	}

	return false
}

// SetUneditedPhotoUrl gets a reference to the given string and assigns it to the UneditedPhotoUrl field.
func (o *PersonMetadata) SetUneditedPhotoUrl(v string) {
	o.UneditedPhotoUrl = &v
}

// GetBannerUrl returns the BannerUrl field value if set, zero value otherwise.
func (o *PersonMetadata) GetBannerUrl() string {
	if o == nil || IsNil(o.BannerUrl) {
		var ret string
		return ret
	}
	return *o.BannerUrl
}

// GetBannerUrlOk returns a tuple with the BannerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetBannerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BannerUrl) {
		return nil, false
	}
	return o.BannerUrl, true
}

// HasBannerUrl returns a boolean if a field has been set.
func (o *PersonMetadata) HasBannerUrl() bool {
	if o != nil && !IsNil(o.BannerUrl) {
		return true
	}

	return false
}

// SetBannerUrl gets a reference to the given string and assigns it to the BannerUrl field.
func (o *PersonMetadata) SetBannerUrl(v string) {
	o.BannerUrl = &v
}

// GetReports returns the Reports field value if set, zero value otherwise.
func (o *PersonMetadata) GetReports() []Person {
	if o == nil || IsNil(o.Reports) {
		var ret []Person
		return ret
	}
	return o.Reports
}

// GetReportsOk returns a tuple with the Reports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetReportsOk() ([]Person, bool) {
	if o == nil || IsNil(o.Reports) {
		return nil, false
	}
	return o.Reports, true
}

// HasReports returns a boolean if a field has been set.
func (o *PersonMetadata) HasReports() bool {
	if o != nil && !IsNil(o.Reports) {
		return true
	}

	return false
}

// SetReports gets a reference to the given []Person and assigns it to the Reports field.
func (o *PersonMetadata) SetReports(v []Person) {
	o.Reports = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *PersonMetadata) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *PersonMetadata) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *PersonMetadata) SetStartDate(v string) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *PersonMetadata) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *PersonMetadata) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *PersonMetadata) SetEndDate(v string) {
	o.EndDate = &v
}

// GetBio returns the Bio field value if set, zero value otherwise.
func (o *PersonMetadata) GetBio() string {
	if o == nil || IsNil(o.Bio) {
		var ret string
		return ret
	}
	return *o.Bio
}

// GetBioOk returns a tuple with the Bio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetBioOk() (*string, bool) {
	if o == nil || IsNil(o.Bio) {
		return nil, false
	}
	return o.Bio, true
}

// HasBio returns a boolean if a field has been set.
func (o *PersonMetadata) HasBio() bool {
	if o != nil && !IsNil(o.Bio) {
		return true
	}

	return false
}

// SetBio gets a reference to the given string and assigns it to the Bio field.
func (o *PersonMetadata) SetBio(v string) {
	o.Bio = &v
}

// GetPronoun returns the Pronoun field value if set, zero value otherwise.
func (o *PersonMetadata) GetPronoun() string {
	if o == nil || IsNil(o.Pronoun) {
		var ret string
		return ret
	}
	return *o.Pronoun
}

// GetPronounOk returns a tuple with the Pronoun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPronounOk() (*string, bool) {
	if o == nil || IsNil(o.Pronoun) {
		return nil, false
	}
	return o.Pronoun, true
}

// HasPronoun returns a boolean if a field has been set.
func (o *PersonMetadata) HasPronoun() bool {
	if o != nil && !IsNil(o.Pronoun) {
		return true
	}

	return false
}

// SetPronoun gets a reference to the given string and assigns it to the Pronoun field.
func (o *PersonMetadata) SetPronoun(v string) {
	o.Pronoun = &v
}

// GetOrgSizeCount returns the OrgSizeCount field value if set, zero value otherwise.
func (o *PersonMetadata) GetOrgSizeCount() int32 {
	if o == nil || IsNil(o.OrgSizeCount) {
		var ret int32
		return ret
	}
	return *o.OrgSizeCount
}

// GetOrgSizeCountOk returns a tuple with the OrgSizeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetOrgSizeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OrgSizeCount) {
		return nil, false
	}
	return o.OrgSizeCount, true
}

// HasOrgSizeCount returns a boolean if a field has been set.
func (o *PersonMetadata) HasOrgSizeCount() bool {
	if o != nil && !IsNil(o.OrgSizeCount) {
		return true
	}

	return false
}

// SetOrgSizeCount gets a reference to the given int32 and assigns it to the OrgSizeCount field.
func (o *PersonMetadata) SetOrgSizeCount(v int32) {
	o.OrgSizeCount = &v
}

// GetDirectReportsCount returns the DirectReportsCount field value if set, zero value otherwise.
func (o *PersonMetadata) GetDirectReportsCount() int32 {
	if o == nil || IsNil(o.DirectReportsCount) {
		var ret int32
		return ret
	}
	return *o.DirectReportsCount
}

// GetDirectReportsCountOk returns a tuple with the DirectReportsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetDirectReportsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DirectReportsCount) {
		return nil, false
	}
	return o.DirectReportsCount, true
}

// HasDirectReportsCount returns a boolean if a field has been set.
func (o *PersonMetadata) HasDirectReportsCount() bool {
	if o != nil && !IsNil(o.DirectReportsCount) {
		return true
	}

	return false
}

// SetDirectReportsCount gets a reference to the given int32 and assigns it to the DirectReportsCount field.
func (o *PersonMetadata) SetDirectReportsCount(v int32) {
	o.DirectReportsCount = &v
}

// GetPreferredName returns the PreferredName field value if set, zero value otherwise.
func (o *PersonMetadata) GetPreferredName() string {
	if o == nil || IsNil(o.PreferredName) {
		var ret string
		return ret
	}
	return *o.PreferredName
}

// GetPreferredNameOk returns a tuple with the PreferredName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPreferredNameOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredName) {
		return nil, false
	}
	return o.PreferredName, true
}

// HasPreferredName returns a boolean if a field has been set.
func (o *PersonMetadata) HasPreferredName() bool {
	if o != nil && !IsNil(o.PreferredName) {
		return true
	}

	return false
}

// SetPreferredName gets a reference to the given string and assigns it to the PreferredName field.
func (o *PersonMetadata) SetPreferredName(v string) {
	o.PreferredName = &v
}

// GetSocialNetwork returns the SocialNetwork field value if set, zero value otherwise.
func (o *PersonMetadata) GetSocialNetwork() []SocialNetwork {
	if o == nil || IsNil(o.SocialNetwork) {
		var ret []SocialNetwork
		return ret
	}
	return o.SocialNetwork
}

// GetSocialNetworkOk returns a tuple with the SocialNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetSocialNetworkOk() ([]SocialNetwork, bool) {
	if o == nil || IsNil(o.SocialNetwork) {
		return nil, false
	}
	return o.SocialNetwork, true
}

// HasSocialNetwork returns a boolean if a field has been set.
func (o *PersonMetadata) HasSocialNetwork() bool {
	if o != nil && !IsNil(o.SocialNetwork) {
		return true
	}

	return false
}

// SetSocialNetwork gets a reference to the given []SocialNetwork and assigns it to the SocialNetwork field.
func (o *PersonMetadata) SetSocialNetwork(v []SocialNetwork) {
	o.SocialNetwork = v
}

// GetDatasourceProfile returns the DatasourceProfile field value if set, zero value otherwise.
func (o *PersonMetadata) GetDatasourceProfile() []DatasourceProfile {
	if o == nil || IsNil(o.DatasourceProfile) {
		var ret []DatasourceProfile
		return ret
	}
	return o.DatasourceProfile
}

// GetDatasourceProfileOk returns a tuple with the DatasourceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetDatasourceProfileOk() ([]DatasourceProfile, bool) {
	if o == nil || IsNil(o.DatasourceProfile) {
		return nil, false
	}
	return o.DatasourceProfile, true
}

// HasDatasourceProfile returns a boolean if a field has been set.
func (o *PersonMetadata) HasDatasourceProfile() bool {
	if o != nil && !IsNil(o.DatasourceProfile) {
		return true
	}

	return false
}

// SetDatasourceProfile gets a reference to the given []DatasourceProfile and assigns it to the DatasourceProfile field.
func (o *PersonMetadata) SetDatasourceProfile(v []DatasourceProfile) {
	o.DatasourceProfile = v
}

// GetQuerySuggestions returns the QuerySuggestions field value if set, zero value otherwise.
func (o *PersonMetadata) GetQuerySuggestions() QuerySuggestionList {
	if o == nil || IsNil(o.QuerySuggestions) {
		var ret QuerySuggestionList
		return ret
	}
	return *o.QuerySuggestions
}

// GetQuerySuggestionsOk returns a tuple with the QuerySuggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetQuerySuggestionsOk() (*QuerySuggestionList, bool) {
	if o == nil || IsNil(o.QuerySuggestions) {
		return nil, false
	}
	return o.QuerySuggestions, true
}

// HasQuerySuggestions returns a boolean if a field has been set.
func (o *PersonMetadata) HasQuerySuggestions() bool {
	if o != nil && !IsNil(o.QuerySuggestions) {
		return true
	}

	return false
}

// SetQuerySuggestions gets a reference to the given QuerySuggestionList and assigns it to the QuerySuggestions field.
func (o *PersonMetadata) SetQuerySuggestions(v QuerySuggestionList) {
	o.QuerySuggestions = &v
}

// GetPeopleDistance returns the PeopleDistance field value if set, zero value otherwise.
func (o *PersonMetadata) GetPeopleDistance() []PersonDistance {
	if o == nil || IsNil(o.PeopleDistance) {
		var ret []PersonDistance
		return ret
	}
	return o.PeopleDistance
}

// GetPeopleDistanceOk returns a tuple with the PeopleDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPeopleDistanceOk() ([]PersonDistance, bool) {
	if o == nil || IsNil(o.PeopleDistance) {
		return nil, false
	}
	return o.PeopleDistance, true
}

// HasPeopleDistance returns a boolean if a field has been set.
func (o *PersonMetadata) HasPeopleDistance() bool {
	if o != nil && !IsNil(o.PeopleDistance) {
		return true
	}

	return false
}

// SetPeopleDistance gets a reference to the given []PersonDistance and assigns it to the PeopleDistance field.
func (o *PersonMetadata) SetPeopleDistance(v []PersonDistance) {
	o.PeopleDistance = v
}

// GetInviteInfo returns the InviteInfo field value if set, zero value otherwise.
func (o *PersonMetadata) GetInviteInfo() InviteInfo {
	if o == nil || IsNil(o.InviteInfo) {
		var ret InviteInfo
		return ret
	}
	return *o.InviteInfo
}

// GetInviteInfoOk returns a tuple with the InviteInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetInviteInfoOk() (*InviteInfo, bool) {
	if o == nil || IsNil(o.InviteInfo) {
		return nil, false
	}
	return o.InviteInfo, true
}

// HasInviteInfo returns a boolean if a field has been set.
func (o *PersonMetadata) HasInviteInfo() bool {
	if o != nil && !IsNil(o.InviteInfo) {
		return true
	}

	return false
}

// SetInviteInfo gets a reference to the given InviteInfo and assigns it to the InviteInfo field.
func (o *PersonMetadata) SetInviteInfo(v InviteInfo) {
	o.InviteInfo = &v
}

// GetIsSignedUp returns the IsSignedUp field value if set, zero value otherwise.
func (o *PersonMetadata) GetIsSignedUp() bool {
	if o == nil || IsNil(o.IsSignedUp) {
		var ret bool
		return ret
	}
	return *o.IsSignedUp
}

// GetIsSignedUpOk returns a tuple with the IsSignedUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetIsSignedUpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSignedUp) {
		return nil, false
	}
	return o.IsSignedUp, true
}

// HasIsSignedUp returns a boolean if a field has been set.
func (o *PersonMetadata) HasIsSignedUp() bool {
	if o != nil && !IsNil(o.IsSignedUp) {
		return true
	}

	return false
}

// SetIsSignedUp gets a reference to the given bool and assigns it to the IsSignedUp field.
func (o *PersonMetadata) SetIsSignedUp(v bool) {
	o.IsSignedUp = &v
}

// GetLastExtensionUse returns the LastExtensionUse field value if set, zero value otherwise.
func (o *PersonMetadata) GetLastExtensionUse() time.Time {
	if o == nil || IsNil(o.LastExtensionUse) {
		var ret time.Time
		return ret
	}
	return *o.LastExtensionUse
}

// GetLastExtensionUseOk returns a tuple with the LastExtensionUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetLastExtensionUseOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastExtensionUse) {
		return nil, false
	}
	return o.LastExtensionUse, true
}

// HasLastExtensionUse returns a boolean if a field has been set.
func (o *PersonMetadata) HasLastExtensionUse() bool {
	if o != nil && !IsNil(o.LastExtensionUse) {
		return true
	}

	return false
}

// SetLastExtensionUse gets a reference to the given time.Time and assigns it to the LastExtensionUse field.
func (o *PersonMetadata) SetLastExtensionUse(v time.Time) {
	o.LastExtensionUse = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PersonMetadata) GetPermissions() Permissions {
	if o == nil || IsNil(o.Permissions) {
		var ret Permissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetPermissionsOk() (*Permissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PersonMetadata) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given Permissions and assigns it to the Permissions field.
func (o *PersonMetadata) SetPermissions(v Permissions) {
	o.Permissions = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *PersonMetadata) GetCustomFields() []CustomFieldData {
	if o == nil || IsNil(o.CustomFields) {
		var ret []CustomFieldData
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetCustomFieldsOk() ([]CustomFieldData, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *PersonMetadata) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomFieldData and assigns it to the CustomFields field.
func (o *PersonMetadata) SetCustomFields(v []CustomFieldData) {
	o.CustomFields = v
}

// GetLoggingId returns the LoggingId field value if set, zero value otherwise.
func (o *PersonMetadata) GetLoggingId() string {
	if o == nil || IsNil(o.LoggingId) {
		var ret string
		return ret
	}
	return *o.LoggingId
}

// GetLoggingIdOk returns a tuple with the LoggingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetLoggingIdOk() (*string, bool) {
	if o == nil || IsNil(o.LoggingId) {
		return nil, false
	}
	return o.LoggingId, true
}

// HasLoggingId returns a boolean if a field has been set.
func (o *PersonMetadata) HasLoggingId() bool {
	if o != nil && !IsNil(o.LoggingId) {
		return true
	}

	return false
}

// SetLoggingId gets a reference to the given string and assigns it to the LoggingId field.
func (o *PersonMetadata) SetLoggingId(v string) {
	o.LoggingId = &v
}

// GetStartDatePercentile returns the StartDatePercentile field value if set, zero value otherwise.
func (o *PersonMetadata) GetStartDatePercentile() float32 {
	if o == nil || IsNil(o.StartDatePercentile) {
		var ret float32
		return ret
	}
	return *o.StartDatePercentile
}

// GetStartDatePercentileOk returns a tuple with the StartDatePercentile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetStartDatePercentileOk() (*float32, bool) {
	if o == nil || IsNil(o.StartDatePercentile) {
		return nil, false
	}
	return o.StartDatePercentile, true
}

// HasStartDatePercentile returns a boolean if a field has been set.
func (o *PersonMetadata) HasStartDatePercentile() bool {
	if o != nil && !IsNil(o.StartDatePercentile) {
		return true
	}

	return false
}

// SetStartDatePercentile gets a reference to the given float32 and assigns it to the StartDatePercentile field.
func (o *PersonMetadata) SetStartDatePercentile(v float32) {
	o.StartDatePercentile = &v
}

// GetBusyEvents returns the BusyEvents field value if set, zero value otherwise.
func (o *PersonMetadata) GetBusyEvents() []AnonymousEvent {
	if o == nil || IsNil(o.BusyEvents) {
		var ret []AnonymousEvent
		return ret
	}
	return o.BusyEvents
}

// GetBusyEventsOk returns a tuple with the BusyEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetBusyEventsOk() ([]AnonymousEvent, bool) {
	if o == nil || IsNil(o.BusyEvents) {
		return nil, false
	}
	return o.BusyEvents, true
}

// HasBusyEvents returns a boolean if a field has been set.
func (o *PersonMetadata) HasBusyEvents() bool {
	if o != nil && !IsNil(o.BusyEvents) {
		return true
	}

	return false
}

// SetBusyEvents gets a reference to the given []AnonymousEvent and assigns it to the BusyEvents field.
func (o *PersonMetadata) SetBusyEvents(v []AnonymousEvent) {
	o.BusyEvents = v
}

// GetProfileBoolSettings returns the ProfileBoolSettings field value if set, zero value otherwise.
func (o *PersonMetadata) GetProfileBoolSettings() map[string]bool {
	if o == nil || IsNil(o.ProfileBoolSettings) {
		var ret map[string]bool
		return ret
	}
	return *o.ProfileBoolSettings
}

// GetProfileBoolSettingsOk returns a tuple with the ProfileBoolSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetProfileBoolSettingsOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.ProfileBoolSettings) {
		return nil, false
	}
	return o.ProfileBoolSettings, true
}

// HasProfileBoolSettings returns a boolean if a field has been set.
func (o *PersonMetadata) HasProfileBoolSettings() bool {
	if o != nil && !IsNil(o.ProfileBoolSettings) {
		return true
	}

	return false
}

// SetProfileBoolSettings gets a reference to the given map[string]bool and assigns it to the ProfileBoolSettings field.
func (o *PersonMetadata) SetProfileBoolSettings(v map[string]bool) {
	o.ProfileBoolSettings = &v
}

// GetBadges returns the Badges field value if set, zero value otherwise.
func (o *PersonMetadata) GetBadges() []Badge {
	if o == nil || IsNil(o.Badges) {
		var ret []Badge
		return ret
	}
	return o.Badges
}

// GetBadgesOk returns a tuple with the Badges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersonMetadata) GetBadgesOk() ([]Badge, bool) {
	if o == nil || IsNil(o.Badges) {
		return nil, false
	}
	return o.Badges, true
}

// HasBadges returns a boolean if a field has been set.
func (o *PersonMetadata) HasBadges() bool {
	if o != nil && !IsNil(o.Badges) {
		return true
	}

	return false
}

// SetBadges gets a reference to the given []Badge and assigns it to the Badges field.
func (o *PersonMetadata) SetBadges(v []Badge) {
	o.Badges = v
}

func (o PersonMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersonMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.BusinessUnit) {
		toSerialize["businessUnit"] = o.BusinessUnit
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if !IsNil(o.DepartmentCount) {
		toSerialize["departmentCount"] = o.DepartmentCount
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.AliasEmails) {
		toSerialize["aliasEmails"] = o.AliasEmails
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.StructuredLocation) {
		toSerialize["structuredLocation"] = o.StructuredLocation
	}
	if !IsNil(o.ExternalProfileLink) {
		toSerialize["externalProfileLink"] = o.ExternalProfileLink
	}
	if !IsNil(o.Manager) {
		toSerialize["manager"] = o.Manager
	}
	if !IsNil(o.ManagementChain) {
		toSerialize["managementChain"] = o.ManagementChain
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PhotoUrl) {
		toSerialize["photoUrl"] = o.PhotoUrl
	}
	if !IsNil(o.UneditedPhotoUrl) {
		toSerialize["uneditedPhotoUrl"] = o.UneditedPhotoUrl
	}
	if !IsNil(o.BannerUrl) {
		toSerialize["bannerUrl"] = o.BannerUrl
	}
	if !IsNil(o.Reports) {
		toSerialize["reports"] = o.Reports
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.Bio) {
		toSerialize["bio"] = o.Bio
	}
	if !IsNil(o.Pronoun) {
		toSerialize["pronoun"] = o.Pronoun
	}
	if !IsNil(o.OrgSizeCount) {
		toSerialize["orgSizeCount"] = o.OrgSizeCount
	}
	if !IsNil(o.DirectReportsCount) {
		toSerialize["directReportsCount"] = o.DirectReportsCount
	}
	if !IsNil(o.PreferredName) {
		toSerialize["preferredName"] = o.PreferredName
	}
	if !IsNil(o.SocialNetwork) {
		toSerialize["socialNetwork"] = o.SocialNetwork
	}
	if !IsNil(o.DatasourceProfile) {
		toSerialize["datasourceProfile"] = o.DatasourceProfile
	}
	if !IsNil(o.QuerySuggestions) {
		toSerialize["querySuggestions"] = o.QuerySuggestions
	}
	if !IsNil(o.PeopleDistance) {
		toSerialize["peopleDistance"] = o.PeopleDistance
	}
	if !IsNil(o.InviteInfo) {
		toSerialize["inviteInfo"] = o.InviteInfo
	}
	if !IsNil(o.IsSignedUp) {
		toSerialize["isSignedUp"] = o.IsSignedUp
	}
	if !IsNil(o.LastExtensionUse) {
		toSerialize["lastExtensionUse"] = o.LastExtensionUse
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}
	if !IsNil(o.LoggingId) {
		toSerialize["loggingId"] = o.LoggingId
	}
	if !IsNil(o.StartDatePercentile) {
		toSerialize["startDatePercentile"] = o.StartDatePercentile
	}
	if !IsNil(o.BusyEvents) {
		toSerialize["busyEvents"] = o.BusyEvents
	}
	if !IsNil(o.ProfileBoolSettings) {
		toSerialize["profileBoolSettings"] = o.ProfileBoolSettings
	}
	if !IsNil(o.Badges) {
		toSerialize["badges"] = o.Badges
	}
	return toSerialize, nil
}

type NullablePersonMetadata struct {
	value *PersonMetadata
	isSet bool
}

func (v NullablePersonMetadata) Get() *PersonMetadata {
	return v.value
}

func (v *NullablePersonMetadata) Set(val *PersonMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePersonMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePersonMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersonMetadata(val *PersonMetadata) *NullablePersonMetadata {
	return &NullablePersonMetadata{value: val, isSet: true}
}

func (v NullablePersonMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersonMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


