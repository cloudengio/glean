/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the UpdateShortcutResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateShortcutResponse{}

// UpdateShortcutResponse struct for UpdateShortcutResponse
type UpdateShortcutResponse struct {
	Shortcut *Shortcut `json:"shortcut,omitempty"`
	Error *ShortcutError `json:"error,omitempty"`
}

// NewUpdateShortcutResponse instantiates a new UpdateShortcutResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateShortcutResponse() *UpdateShortcutResponse {
	this := UpdateShortcutResponse{}
	return &this
}

// NewUpdateShortcutResponseWithDefaults instantiates a new UpdateShortcutResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateShortcutResponseWithDefaults() *UpdateShortcutResponse {
	this := UpdateShortcutResponse{}
	return &this
}

// GetShortcut returns the Shortcut field value if set, zero value otherwise.
func (o *UpdateShortcutResponse) GetShortcut() Shortcut {
	if o == nil || IsNil(o.Shortcut) {
		var ret Shortcut
		return ret
	}
	return *o.Shortcut
}

// GetShortcutOk returns a tuple with the Shortcut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShortcutResponse) GetShortcutOk() (*Shortcut, bool) {
	if o == nil || IsNil(o.Shortcut) {
		return nil, false
	}
	return o.Shortcut, true
}

// HasShortcut returns a boolean if a field has been set.
func (o *UpdateShortcutResponse) HasShortcut() bool {
	if o != nil && !IsNil(o.Shortcut) {
		return true
	}

	return false
}

// SetShortcut gets a reference to the given Shortcut and assigns it to the Shortcut field.
func (o *UpdateShortcutResponse) SetShortcut(v Shortcut) {
	o.Shortcut = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *UpdateShortcutResponse) GetError() ShortcutError {
	if o == nil || IsNil(o.Error) {
		var ret ShortcutError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateShortcutResponse) GetErrorOk() (*ShortcutError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *UpdateShortcutResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ShortcutError and assigns it to the Error field.
func (o *UpdateShortcutResponse) SetError(v ShortcutError) {
	o.Error = &v
}

func (o UpdateShortcutResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateShortcutResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shortcut) {
		toSerialize["shortcut"] = o.Shortcut
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableUpdateShortcutResponse struct {
	value *UpdateShortcutResponse
	isSet bool
}

func (v NullableUpdateShortcutResponse) Get() *UpdateShortcutResponse {
	return v.value
}

func (v *NullableUpdateShortcutResponse) Set(val *UpdateShortcutResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateShortcutResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateShortcutResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateShortcutResponse(val *UpdateShortcutResponse) *NullableUpdateShortcutResponse {
	return &NullableUpdateShortcutResponse{value: val, isSet: true}
}

func (v NullableUpdateShortcutResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateShortcutResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


