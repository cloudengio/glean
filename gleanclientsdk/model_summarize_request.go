/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
	"time"
)

// checks if the SummarizeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SummarizeRequest{}

// SummarizeRequest Summary of the document
type SummarizeRequest struct {
	// The ISO 8601 timestamp associated with the client request.
	Timestamp *time.Time `json:"timestamp,omitempty"`
	Sc *string `json:"sc,omitempty"`
	// Optional query that the summary should be about
	Query *string `json:"query,omitempty"`
	// Optional length of summary output. If not given, defaults to 1000 chars.
	PreferredSummaryLength *int32 `json:"preferredSummaryLength,omitempty"`
	// Specifications of documents to summarize
	DocumentSpecs []DocumentSpec `json:"documentSpecs"`
	// An opaque token that represents this particular result. To be used for /feedback reporting.
	TrackingToken *string `json:"trackingToken,omitempty"`
}

// NewSummarizeRequest instantiates a new SummarizeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummarizeRequest(documentSpecs []DocumentSpec) *SummarizeRequest {
	this := SummarizeRequest{}
	this.DocumentSpecs = documentSpecs
	return &this
}

// NewSummarizeRequestWithDefaults instantiates a new SummarizeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummarizeRequestWithDefaults() *SummarizeRequest {
	this := SummarizeRequest{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SummarizeRequest) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SummarizeRequest) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *SummarizeRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

// GetSc returns the Sc field value if set, zero value otherwise.
func (o *SummarizeRequest) GetSc() string {
	if o == nil || IsNil(o.Sc) {
		var ret string
		return ret
	}
	return *o.Sc
}

// GetScOk returns a tuple with the Sc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetScOk() (*string, bool) {
	if o == nil || IsNil(o.Sc) {
		return nil, false
	}
	return o.Sc, true
}

// HasSc returns a boolean if a field has been set.
func (o *SummarizeRequest) HasSc() bool {
	if o != nil && !IsNil(o.Sc) {
		return true
	}

	return false
}

// SetSc gets a reference to the given string and assigns it to the Sc field.
func (o *SummarizeRequest) SetSc(v string) {
	o.Sc = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SummarizeRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SummarizeRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *SummarizeRequest) SetQuery(v string) {
	o.Query = &v
}

// GetPreferredSummaryLength returns the PreferredSummaryLength field value if set, zero value otherwise.
func (o *SummarizeRequest) GetPreferredSummaryLength() int32 {
	if o == nil || IsNil(o.PreferredSummaryLength) {
		var ret int32
		return ret
	}
	return *o.PreferredSummaryLength
}

// GetPreferredSummaryLengthOk returns a tuple with the PreferredSummaryLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetPreferredSummaryLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PreferredSummaryLength) {
		return nil, false
	}
	return o.PreferredSummaryLength, true
}

// HasPreferredSummaryLength returns a boolean if a field has been set.
func (o *SummarizeRequest) HasPreferredSummaryLength() bool {
	if o != nil && !IsNil(o.PreferredSummaryLength) {
		return true
	}

	return false
}

// SetPreferredSummaryLength gets a reference to the given int32 and assigns it to the PreferredSummaryLength field.
func (o *SummarizeRequest) SetPreferredSummaryLength(v int32) {
	o.PreferredSummaryLength = &v
}

// GetDocumentSpecs returns the DocumentSpecs field value
func (o *SummarizeRequest) GetDocumentSpecs() []DocumentSpec {
	if o == nil {
		var ret []DocumentSpec
		return ret
	}

	return o.DocumentSpecs
}

// GetDocumentSpecsOk returns a tuple with the DocumentSpecs field value
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetDocumentSpecsOk() ([]DocumentSpec, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentSpecs, true
}

// SetDocumentSpecs sets field value
func (o *SummarizeRequest) SetDocumentSpecs(v []DocumentSpec) {
	o.DocumentSpecs = v
}

// GetTrackingToken returns the TrackingToken field value if set, zero value otherwise.
func (o *SummarizeRequest) GetTrackingToken() string {
	if o == nil || IsNil(o.TrackingToken) {
		var ret string
		return ret
	}
	return *o.TrackingToken
}

// GetTrackingTokenOk returns a tuple with the TrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummarizeRequest) GetTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingToken) {
		return nil, false
	}
	return o.TrackingToken, true
}

// HasTrackingToken returns a boolean if a field has been set.
func (o *SummarizeRequest) HasTrackingToken() bool {
	if o != nil && !IsNil(o.TrackingToken) {
		return true
	}

	return false
}

// SetTrackingToken gets a reference to the given string and assigns it to the TrackingToken field.
func (o *SummarizeRequest) SetTrackingToken(v string) {
	o.TrackingToken = &v
}

func (o SummarizeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SummarizeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Sc) {
		toSerialize["sc"] = o.Sc
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.PreferredSummaryLength) {
		toSerialize["preferredSummaryLength"] = o.PreferredSummaryLength
	}
	toSerialize["documentSpecs"] = o.DocumentSpecs
	if !IsNil(o.TrackingToken) {
		toSerialize["trackingToken"] = o.TrackingToken
	}
	return toSerialize, nil
}

type NullableSummarizeRequest struct {
	value *SummarizeRequest
	isSet bool
}

func (v NullableSummarizeRequest) Get() *SummarizeRequest {
	return v.value
}

func (v *NullableSummarizeRequest) Set(val *SummarizeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSummarizeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSummarizeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummarizeRequest(val *SummarizeRequest) *NullableSummarizeRequest {
	return &NullableSummarizeRequest{value: val, isSet: true}
}

func (v NullableSummarizeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummarizeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


