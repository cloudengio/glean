/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the StructuredTextItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StructuredTextItem{}

// StructuredTextItem struct for StructuredTextItem
type StructuredTextItem struct {
	Link *string `json:"link,omitempty"`
	Document *Document `json:"document,omitempty"`
	Text *string `json:"text,omitempty"`
}

// NewStructuredTextItem instantiates a new StructuredTextItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructuredTextItem() *StructuredTextItem {
	this := StructuredTextItem{}
	return &this
}

// NewStructuredTextItemWithDefaults instantiates a new StructuredTextItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructuredTextItemWithDefaults() *StructuredTextItem {
	this := StructuredTextItem{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *StructuredTextItem) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuredTextItem) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *StructuredTextItem) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *StructuredTextItem) SetLink(v string) {
	o.Link = &v
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *StructuredTextItem) GetDocument() Document {
	if o == nil || IsNil(o.Document) {
		var ret Document
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuredTextItem) GetDocumentOk() (*Document, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *StructuredTextItem) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given Document and assigns it to the Document field.
func (o *StructuredTextItem) SetDocument(v Document) {
	o.Document = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *StructuredTextItem) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructuredTextItem) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *StructuredTextItem) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *StructuredTextItem) SetText(v string) {
	o.Text = &v
}

func (o StructuredTextItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StructuredTextItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableStructuredTextItem struct {
	value *StructuredTextItem
	isSet bool
}

func (v NullableStructuredTextItem) Get() *StructuredTextItem {
	return v.value
}

func (v *NullableStructuredTextItem) Set(val *StructuredTextItem) {
	v.value = val
	v.isSet = true
}

func (v NullableStructuredTextItem) IsSet() bool {
	return v.isSet
}

func (v *NullableStructuredTextItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructuredTextItem(val *StructuredTextItem) *NullableStructuredTextItem {
	return &NullableStructuredTextItem{value: val, isSet: true}
}

func (v NullableStructuredTextItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructuredTextItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


