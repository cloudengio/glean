/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PreviewUgcRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewUgcRequest{}

// PreviewUgcRequest struct for PreviewUgcRequest
type PreviewUgcRequest struct {
	Draft *UgcDraft `json:"draft,omitempty"`
	DraftSpec *DocumentSpec `json:"draftSpec,omitempty"`
	Type *UgcType `json:"type,omitempty"`
}

// NewPreviewUgcRequest instantiates a new PreviewUgcRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewUgcRequest() *PreviewUgcRequest {
	this := PreviewUgcRequest{}
	return &this
}

// NewPreviewUgcRequestWithDefaults instantiates a new PreviewUgcRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewUgcRequestWithDefaults() *PreviewUgcRequest {
	this := PreviewUgcRequest{}
	return &this
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *PreviewUgcRequest) GetDraft() UgcDraft {
	if o == nil || IsNil(o.Draft) {
		var ret UgcDraft
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewUgcRequest) GetDraftOk() (*UgcDraft, bool) {
	if o == nil || IsNil(o.Draft) {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *PreviewUgcRequest) HasDraft() bool {
	if o != nil && !IsNil(o.Draft) {
		return true
	}

	return false
}

// SetDraft gets a reference to the given UgcDraft and assigns it to the Draft field.
func (o *PreviewUgcRequest) SetDraft(v UgcDraft) {
	o.Draft = &v
}

// GetDraftSpec returns the DraftSpec field value if set, zero value otherwise.
func (o *PreviewUgcRequest) GetDraftSpec() DocumentSpec {
	if o == nil || IsNil(o.DraftSpec) {
		var ret DocumentSpec
		return ret
	}
	return *o.DraftSpec
}

// GetDraftSpecOk returns a tuple with the DraftSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewUgcRequest) GetDraftSpecOk() (*DocumentSpec, bool) {
	if o == nil || IsNil(o.DraftSpec) {
		return nil, false
	}
	return o.DraftSpec, true
}

// HasDraftSpec returns a boolean if a field has been set.
func (o *PreviewUgcRequest) HasDraftSpec() bool {
	if o != nil && !IsNil(o.DraftSpec) {
		return true
	}

	return false
}

// SetDraftSpec gets a reference to the given DocumentSpec and assigns it to the DraftSpec field.
func (o *PreviewUgcRequest) SetDraftSpec(v DocumentSpec) {
	o.DraftSpec = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PreviewUgcRequest) GetType() UgcType {
	if o == nil || IsNil(o.Type) {
		var ret UgcType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewUgcRequest) GetTypeOk() (*UgcType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PreviewUgcRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given UgcType and assigns it to the Type field.
func (o *PreviewUgcRequest) SetType(v UgcType) {
	o.Type = &v
}

func (o PreviewUgcRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewUgcRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Draft) {
		toSerialize["draft"] = o.Draft
	}
	if !IsNil(o.DraftSpec) {
		toSerialize["draftSpec"] = o.DraftSpec
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullablePreviewUgcRequest struct {
	value *PreviewUgcRequest
	isSet bool
}

func (v NullablePreviewUgcRequest) Get() *PreviewUgcRequest {
	return v.value
}

func (v *NullablePreviewUgcRequest) Set(val *PreviewUgcRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewUgcRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewUgcRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewUgcRequest(val *PreviewUgcRequest) *NullablePreviewUgcRequest {
	return &NullablePreviewUgcRequest{value: val, isSet: true}
}

func (v NullablePreviewUgcRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewUgcRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


