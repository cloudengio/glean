/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CustomEntityUserRoles type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomEntityUserRoles{}

// CustomEntityUserRoles struct for CustomEntityUserRoles
type CustomEntityUserRoles struct {
	// A list of user roles for the custom entity added by the owner.
	AddedRoles []UserRoleSpecification `json:"addedRoles,omitempty"`
	// A list of user roles for the custom entity removed by the owner.
	RemovedRoles []UserRoleSpecification `json:"removedRoles,omitempty"`
}

// NewCustomEntityUserRoles instantiates a new CustomEntityUserRoles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomEntityUserRoles() *CustomEntityUserRoles {
	this := CustomEntityUserRoles{}
	return &this
}

// NewCustomEntityUserRolesWithDefaults instantiates a new CustomEntityUserRoles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomEntityUserRolesWithDefaults() *CustomEntityUserRoles {
	this := CustomEntityUserRoles{}
	return &this
}

// GetAddedRoles returns the AddedRoles field value if set, zero value otherwise.
func (o *CustomEntityUserRoles) GetAddedRoles() []UserRoleSpecification {
	if o == nil || IsNil(o.AddedRoles) {
		var ret []UserRoleSpecification
		return ret
	}
	return o.AddedRoles
}

// GetAddedRolesOk returns a tuple with the AddedRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEntityUserRoles) GetAddedRolesOk() ([]UserRoleSpecification, bool) {
	if o == nil || IsNil(o.AddedRoles) {
		return nil, false
	}
	return o.AddedRoles, true
}

// HasAddedRoles returns a boolean if a field has been set.
func (o *CustomEntityUserRoles) HasAddedRoles() bool {
	if o != nil && !IsNil(o.AddedRoles) {
		return true
	}

	return false
}

// SetAddedRoles gets a reference to the given []UserRoleSpecification and assigns it to the AddedRoles field.
func (o *CustomEntityUserRoles) SetAddedRoles(v []UserRoleSpecification) {
	o.AddedRoles = v
}

// GetRemovedRoles returns the RemovedRoles field value if set, zero value otherwise.
func (o *CustomEntityUserRoles) GetRemovedRoles() []UserRoleSpecification {
	if o == nil || IsNil(o.RemovedRoles) {
		var ret []UserRoleSpecification
		return ret
	}
	return o.RemovedRoles
}

// GetRemovedRolesOk returns a tuple with the RemovedRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomEntityUserRoles) GetRemovedRolesOk() ([]UserRoleSpecification, bool) {
	if o == nil || IsNil(o.RemovedRoles) {
		return nil, false
	}
	return o.RemovedRoles, true
}

// HasRemovedRoles returns a boolean if a field has been set.
func (o *CustomEntityUserRoles) HasRemovedRoles() bool {
	if o != nil && !IsNil(o.RemovedRoles) {
		return true
	}

	return false
}

// SetRemovedRoles gets a reference to the given []UserRoleSpecification and assigns it to the RemovedRoles field.
func (o *CustomEntityUserRoles) SetRemovedRoles(v []UserRoleSpecification) {
	o.RemovedRoles = v
}

func (o CustomEntityUserRoles) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomEntityUserRoles) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddedRoles) {
		toSerialize["addedRoles"] = o.AddedRoles
	}
	if !IsNil(o.RemovedRoles) {
		toSerialize["removedRoles"] = o.RemovedRoles
	}
	return toSerialize, nil
}

type NullableCustomEntityUserRoles struct {
	value *CustomEntityUserRoles
	isSet bool
}

func (v NullableCustomEntityUserRoles) Get() *CustomEntityUserRoles {
	return v.value
}

func (v *NullableCustomEntityUserRoles) Set(val *CustomEntityUserRoles) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomEntityUserRoles) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomEntityUserRoles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomEntityUserRoles(val *CustomEntityUserRoles) *NullableCustomEntityUserRoles {
	return &NullableCustomEntityUserRoles{value: val, isSet: true}
}

func (v NullableCustomEntityUserRoles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomEntityUserRoles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


