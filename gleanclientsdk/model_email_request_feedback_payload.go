/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the EmailRequestFeedbackPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailRequestFeedbackPayload{}

// EmailRequestFeedbackPayload Optional payload for feedback reporting.
type EmailRequestFeedbackPayload struct {
	// The type of issue being reported, e.g. RESULT_MISSING or OTHER for search feedback.
	IssueType *string `json:"issueType,omitempty"`
	// Additional freeform comments provided by the reporter.
	Comments *string `json:"comments,omitempty"`
	// The url the reporter was on when feedback was sent.
	Url *string `json:"url,omitempty"`
	// The query the reporter tried when feedback was sent.
	Query *string `json:"query,omitempty"`
	// Arbitrary email param payloads from 3P-customer widgets. Prefer the structured fields when possible.
	CustomJson *string `json:"customJson,omitempty"`
}

// NewEmailRequestFeedbackPayload instantiates a new EmailRequestFeedbackPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailRequestFeedbackPayload() *EmailRequestFeedbackPayload {
	this := EmailRequestFeedbackPayload{}
	return &this
}

// NewEmailRequestFeedbackPayloadWithDefaults instantiates a new EmailRequestFeedbackPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailRequestFeedbackPayloadWithDefaults() *EmailRequestFeedbackPayload {
	this := EmailRequestFeedbackPayload{}
	return &this
}

// GetIssueType returns the IssueType field value if set, zero value otherwise.
func (o *EmailRequestFeedbackPayload) GetIssueType() string {
	if o == nil || IsNil(o.IssueType) {
		var ret string
		return ret
	}
	return *o.IssueType
}

// GetIssueTypeOk returns a tuple with the IssueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRequestFeedbackPayload) GetIssueTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssueType) {
		return nil, false
	}
	return o.IssueType, true
}

// HasIssueType returns a boolean if a field has been set.
func (o *EmailRequestFeedbackPayload) HasIssueType() bool {
	if o != nil && !IsNil(o.IssueType) {
		return true
	}

	return false
}

// SetIssueType gets a reference to the given string and assigns it to the IssueType field.
func (o *EmailRequestFeedbackPayload) SetIssueType(v string) {
	o.IssueType = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *EmailRequestFeedbackPayload) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRequestFeedbackPayload) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *EmailRequestFeedbackPayload) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *EmailRequestFeedbackPayload) SetComments(v string) {
	o.Comments = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *EmailRequestFeedbackPayload) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRequestFeedbackPayload) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *EmailRequestFeedbackPayload) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *EmailRequestFeedbackPayload) SetUrl(v string) {
	o.Url = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *EmailRequestFeedbackPayload) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRequestFeedbackPayload) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *EmailRequestFeedbackPayload) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *EmailRequestFeedbackPayload) SetQuery(v string) {
	o.Query = &v
}

// GetCustomJson returns the CustomJson field value if set, zero value otherwise.
func (o *EmailRequestFeedbackPayload) GetCustomJson() string {
	if o == nil || IsNil(o.CustomJson) {
		var ret string
		return ret
	}
	return *o.CustomJson
}

// GetCustomJsonOk returns a tuple with the CustomJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailRequestFeedbackPayload) GetCustomJsonOk() (*string, bool) {
	if o == nil || IsNil(o.CustomJson) {
		return nil, false
	}
	return o.CustomJson, true
}

// HasCustomJson returns a boolean if a field has been set.
func (o *EmailRequestFeedbackPayload) HasCustomJson() bool {
	if o != nil && !IsNil(o.CustomJson) {
		return true
	}

	return false
}

// SetCustomJson gets a reference to the given string and assigns it to the CustomJson field.
func (o *EmailRequestFeedbackPayload) SetCustomJson(v string) {
	o.CustomJson = &v
}

func (o EmailRequestFeedbackPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailRequestFeedbackPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IssueType) {
		toSerialize["issueType"] = o.IssueType
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.CustomJson) {
		toSerialize["customJson"] = o.CustomJson
	}
	return toSerialize, nil
}

type NullableEmailRequestFeedbackPayload struct {
	value *EmailRequestFeedbackPayload
	isSet bool
}

func (v NullableEmailRequestFeedbackPayload) Get() *EmailRequestFeedbackPayload {
	return v.value
}

func (v *NullableEmailRequestFeedbackPayload) Set(val *EmailRequestFeedbackPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailRequestFeedbackPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailRequestFeedbackPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailRequestFeedbackPayload(val *EmailRequestFeedbackPayload) *NullableEmailRequestFeedbackPayload {
	return &NullableEmailRequestFeedbackPayload{value: val, isSet: true}
}

func (v NullableEmailRequestFeedbackPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailRequestFeedbackPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


