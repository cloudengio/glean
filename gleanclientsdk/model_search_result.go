/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the SearchResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResult{}

// SearchResult struct for SearchResult
type SearchResult struct {
	Document *Document `json:"document,omitempty"`
	Title *string `json:"title,omitempty"`
	Url string `json:"url"`
	// A deep link, if available, into the datasource's native application for the user's platform (e.g. slack://...).
	NativeAppUrl *string `json:"nativeAppUrl,omitempty"`
	// An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
	TrackingToken *string `json:"trackingToken,omitempty"`
	Snippets []SearchResultSnippet `json:"snippets"`
	// The expanded snippets for this result. This is only populated if the query has the expand_snippets parameter set to true.
	ExpandedSnippets []string `json:"expandedSnippets,omitempty"`
	// The full body text of the result if not already contained in the snippets
	FullText *string `json:"fullText,omitempty"`
	// The full body text of the result if not already contained in the snippets; each item in the array represents a separate line in the original text
	FullTextList []string `json:"fullTextList,omitempty"`
	// A list of results related to this search result. Eg. for conversation results it contains individual messages from the conversation document which will be shown on SERP.
	RelatedResults []RelatedDocuments `json:"relatedResults,omitempty"`
	// A list of results that should be displayed as associated with this result.
	ClusteredResults []SearchResult `json:"clusteredResults,omitempty"`
	// A list of results that should be displayed as associated with this result.
	AllClusteredResults []ClusterGroup `json:"allClusteredResults,omitempty"`
	// The total number of attachments.
	AttachmentCount *int32 `json:"attachmentCount,omitempty"`
	// A (potentially partial) list of results representing documents attached to the main result document.
	Attachments []SearchResult `json:"attachments,omitempty"`
	// A list of results that should be displayed as backlinks of this result in reverse chronological order.
	BacklinkResults []SearchResult `json:"backlinkResults,omitempty"`
	ClusterType *ClusterTypeEnum `json:"clusterType,omitempty"`
	MustIncludeSuggestions *QuerySuggestionList `json:"mustIncludeSuggestions,omitempty"`
	QuerySuggestion *QuerySuggestion `json:"querySuggestion,omitempty"`
	DebugInfo *SearchResultDebugInfo `json:"debugInfo,omitempty"`
	// When present, this list of `StructuredResult`s will supercede a `Document` in this `SearchResult`.
	StructuredResults []StructuredResult `json:"structuredResults,omitempty"`
	Prominence *SearchResultProminenceEnum `json:"prominence,omitempty"`
	// Additional context for the relationship between the result and the document it's attached to.
	AttachmentContext *string `json:"attachmentContext,omitempty"`
	// A list of pins associated with this search result.
	Pins []PinDocument `json:"pins,omitempty"`
}

// NewSearchResult instantiates a new SearchResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResult(url string, snippets []SearchResultSnippet) *SearchResult {
	this := SearchResult{}
	this.Url = url
	this.Snippets = snippets
	return &this
}

// NewSearchResultWithDefaults instantiates a new SearchResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResultWithDefaults() *SearchResult {
	this := SearchResult{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *SearchResult) GetDocument() Document {
	if o == nil || IsNil(o.Document) {
		var ret Document
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetDocumentOk() (*Document, bool) {
	if o == nil || IsNil(o.Document) {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *SearchResult) HasDocument() bool {
	if o != nil && !IsNil(o.Document) {
		return true
	}

	return false
}

// SetDocument gets a reference to the given Document and assigns it to the Document field.
func (o *SearchResult) SetDocument(v Document) {
	o.Document = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SearchResult) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SearchResult) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SearchResult) SetTitle(v string) {
	o.Title = &v
}

// GetUrl returns the Url field value
func (o *SearchResult) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SearchResult) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SearchResult) SetUrl(v string) {
	o.Url = v
}

// GetNativeAppUrl returns the NativeAppUrl field value if set, zero value otherwise.
func (o *SearchResult) GetNativeAppUrl() string {
	if o == nil || IsNil(o.NativeAppUrl) {
		var ret string
		return ret
	}
	return *o.NativeAppUrl
}

// GetNativeAppUrlOk returns a tuple with the NativeAppUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetNativeAppUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NativeAppUrl) {
		return nil, false
	}
	return o.NativeAppUrl, true
}

// HasNativeAppUrl returns a boolean if a field has been set.
func (o *SearchResult) HasNativeAppUrl() bool {
	if o != nil && !IsNil(o.NativeAppUrl) {
		return true
	}

	return false
}

// SetNativeAppUrl gets a reference to the given string and assigns it to the NativeAppUrl field.
func (o *SearchResult) SetNativeAppUrl(v string) {
	o.NativeAppUrl = &v
}

// GetTrackingToken returns the TrackingToken field value if set, zero value otherwise.
func (o *SearchResult) GetTrackingToken() string {
	if o == nil || IsNil(o.TrackingToken) {
		var ret string
		return ret
	}
	return *o.TrackingToken
}

// GetTrackingTokenOk returns a tuple with the TrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingToken) {
		return nil, false
	}
	return o.TrackingToken, true
}

// HasTrackingToken returns a boolean if a field has been set.
func (o *SearchResult) HasTrackingToken() bool {
	if o != nil && !IsNil(o.TrackingToken) {
		return true
	}

	return false
}

// SetTrackingToken gets a reference to the given string and assigns it to the TrackingToken field.
func (o *SearchResult) SetTrackingToken(v string) {
	o.TrackingToken = &v
}

// GetSnippets returns the Snippets field value
func (o *SearchResult) GetSnippets() []SearchResultSnippet {
	if o == nil {
		var ret []SearchResultSnippet
		return ret
	}

	return o.Snippets
}

// GetSnippetsOk returns a tuple with the Snippets field value
// and a boolean to check if the value has been set.
func (o *SearchResult) GetSnippetsOk() ([]SearchResultSnippet, bool) {
	if o == nil {
		return nil, false
	}
	return o.Snippets, true
}

// SetSnippets sets field value
func (o *SearchResult) SetSnippets(v []SearchResultSnippet) {
	o.Snippets = v
}

// GetExpandedSnippets returns the ExpandedSnippets field value if set, zero value otherwise.
func (o *SearchResult) GetExpandedSnippets() []string {
	if o == nil || IsNil(o.ExpandedSnippets) {
		var ret []string
		return ret
	}
	return o.ExpandedSnippets
}

// GetExpandedSnippetsOk returns a tuple with the ExpandedSnippets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetExpandedSnippetsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExpandedSnippets) {
		return nil, false
	}
	return o.ExpandedSnippets, true
}

// HasExpandedSnippets returns a boolean if a field has been set.
func (o *SearchResult) HasExpandedSnippets() bool {
	if o != nil && !IsNil(o.ExpandedSnippets) {
		return true
	}

	return false
}

// SetExpandedSnippets gets a reference to the given []string and assigns it to the ExpandedSnippets field.
func (o *SearchResult) SetExpandedSnippets(v []string) {
	o.ExpandedSnippets = v
}

// GetFullText returns the FullText field value if set, zero value otherwise.
func (o *SearchResult) GetFullText() string {
	if o == nil || IsNil(o.FullText) {
		var ret string
		return ret
	}
	return *o.FullText
}

// GetFullTextOk returns a tuple with the FullText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetFullTextOk() (*string, bool) {
	if o == nil || IsNil(o.FullText) {
		return nil, false
	}
	return o.FullText, true
}

// HasFullText returns a boolean if a field has been set.
func (o *SearchResult) HasFullText() bool {
	if o != nil && !IsNil(o.FullText) {
		return true
	}

	return false
}

// SetFullText gets a reference to the given string and assigns it to the FullText field.
func (o *SearchResult) SetFullText(v string) {
	o.FullText = &v
}

// GetFullTextList returns the FullTextList field value if set, zero value otherwise.
func (o *SearchResult) GetFullTextList() []string {
	if o == nil || IsNil(o.FullTextList) {
		var ret []string
		return ret
	}
	return o.FullTextList
}

// GetFullTextListOk returns a tuple with the FullTextList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetFullTextListOk() ([]string, bool) {
	if o == nil || IsNil(o.FullTextList) {
		return nil, false
	}
	return o.FullTextList, true
}

// HasFullTextList returns a boolean if a field has been set.
func (o *SearchResult) HasFullTextList() bool {
	if o != nil && !IsNil(o.FullTextList) {
		return true
	}

	return false
}

// SetFullTextList gets a reference to the given []string and assigns it to the FullTextList field.
func (o *SearchResult) SetFullTextList(v []string) {
	o.FullTextList = v
}

// GetRelatedResults returns the RelatedResults field value if set, zero value otherwise.
func (o *SearchResult) GetRelatedResults() []RelatedDocuments {
	if o == nil || IsNil(o.RelatedResults) {
		var ret []RelatedDocuments
		return ret
	}
	return o.RelatedResults
}

// GetRelatedResultsOk returns a tuple with the RelatedResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetRelatedResultsOk() ([]RelatedDocuments, bool) {
	if o == nil || IsNil(o.RelatedResults) {
		return nil, false
	}
	return o.RelatedResults, true
}

// HasRelatedResults returns a boolean if a field has been set.
func (o *SearchResult) HasRelatedResults() bool {
	if o != nil && !IsNil(o.RelatedResults) {
		return true
	}

	return false
}

// SetRelatedResults gets a reference to the given []RelatedDocuments and assigns it to the RelatedResults field.
func (o *SearchResult) SetRelatedResults(v []RelatedDocuments) {
	o.RelatedResults = v
}

// GetClusteredResults returns the ClusteredResults field value if set, zero value otherwise.
func (o *SearchResult) GetClusteredResults() []SearchResult {
	if o == nil || IsNil(o.ClusteredResults) {
		var ret []SearchResult
		return ret
	}
	return o.ClusteredResults
}

// GetClusteredResultsOk returns a tuple with the ClusteredResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetClusteredResultsOk() ([]SearchResult, bool) {
	if o == nil || IsNil(o.ClusteredResults) {
		return nil, false
	}
	return o.ClusteredResults, true
}

// HasClusteredResults returns a boolean if a field has been set.
func (o *SearchResult) HasClusteredResults() bool {
	if o != nil && !IsNil(o.ClusteredResults) {
		return true
	}

	return false
}

// SetClusteredResults gets a reference to the given []SearchResult and assigns it to the ClusteredResults field.
func (o *SearchResult) SetClusteredResults(v []SearchResult) {
	o.ClusteredResults = v
}

// GetAllClusteredResults returns the AllClusteredResults field value if set, zero value otherwise.
func (o *SearchResult) GetAllClusteredResults() []ClusterGroup {
	if o == nil || IsNil(o.AllClusteredResults) {
		var ret []ClusterGroup
		return ret
	}
	return o.AllClusteredResults
}

// GetAllClusteredResultsOk returns a tuple with the AllClusteredResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetAllClusteredResultsOk() ([]ClusterGroup, bool) {
	if o == nil || IsNil(o.AllClusteredResults) {
		return nil, false
	}
	return o.AllClusteredResults, true
}

// HasAllClusteredResults returns a boolean if a field has been set.
func (o *SearchResult) HasAllClusteredResults() bool {
	if o != nil && !IsNil(o.AllClusteredResults) {
		return true
	}

	return false
}

// SetAllClusteredResults gets a reference to the given []ClusterGroup and assigns it to the AllClusteredResults field.
func (o *SearchResult) SetAllClusteredResults(v []ClusterGroup) {
	o.AllClusteredResults = v
}

// GetAttachmentCount returns the AttachmentCount field value if set, zero value otherwise.
func (o *SearchResult) GetAttachmentCount() int32 {
	if o == nil || IsNil(o.AttachmentCount) {
		var ret int32
		return ret
	}
	return *o.AttachmentCount
}

// GetAttachmentCountOk returns a tuple with the AttachmentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetAttachmentCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AttachmentCount) {
		return nil, false
	}
	return o.AttachmentCount, true
}

// HasAttachmentCount returns a boolean if a field has been set.
func (o *SearchResult) HasAttachmentCount() bool {
	if o != nil && !IsNil(o.AttachmentCount) {
		return true
	}

	return false
}

// SetAttachmentCount gets a reference to the given int32 and assigns it to the AttachmentCount field.
func (o *SearchResult) SetAttachmentCount(v int32) {
	o.AttachmentCount = &v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *SearchResult) GetAttachments() []SearchResult {
	if o == nil || IsNil(o.Attachments) {
		var ret []SearchResult
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetAttachmentsOk() ([]SearchResult, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *SearchResult) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []SearchResult and assigns it to the Attachments field.
func (o *SearchResult) SetAttachments(v []SearchResult) {
	o.Attachments = v
}

// GetBacklinkResults returns the BacklinkResults field value if set, zero value otherwise.
func (o *SearchResult) GetBacklinkResults() []SearchResult {
	if o == nil || IsNil(o.BacklinkResults) {
		var ret []SearchResult
		return ret
	}
	return o.BacklinkResults
}

// GetBacklinkResultsOk returns a tuple with the BacklinkResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetBacklinkResultsOk() ([]SearchResult, bool) {
	if o == nil || IsNil(o.BacklinkResults) {
		return nil, false
	}
	return o.BacklinkResults, true
}

// HasBacklinkResults returns a boolean if a field has been set.
func (o *SearchResult) HasBacklinkResults() bool {
	if o != nil && !IsNil(o.BacklinkResults) {
		return true
	}

	return false
}

// SetBacklinkResults gets a reference to the given []SearchResult and assigns it to the BacklinkResults field.
func (o *SearchResult) SetBacklinkResults(v []SearchResult) {
	o.BacklinkResults = v
}

// GetClusterType returns the ClusterType field value if set, zero value otherwise.
func (o *SearchResult) GetClusterType() ClusterTypeEnum {
	if o == nil || IsNil(o.ClusterType) {
		var ret ClusterTypeEnum
		return ret
	}
	return *o.ClusterType
}

// GetClusterTypeOk returns a tuple with the ClusterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetClusterTypeOk() (*ClusterTypeEnum, bool) {
	if o == nil || IsNil(o.ClusterType) {
		return nil, false
	}
	return o.ClusterType, true
}

// HasClusterType returns a boolean if a field has been set.
func (o *SearchResult) HasClusterType() bool {
	if o != nil && !IsNil(o.ClusterType) {
		return true
	}

	return false
}

// SetClusterType gets a reference to the given ClusterTypeEnum and assigns it to the ClusterType field.
func (o *SearchResult) SetClusterType(v ClusterTypeEnum) {
	o.ClusterType = &v
}

// GetMustIncludeSuggestions returns the MustIncludeSuggestions field value if set, zero value otherwise.
func (o *SearchResult) GetMustIncludeSuggestions() QuerySuggestionList {
	if o == nil || IsNil(o.MustIncludeSuggestions) {
		var ret QuerySuggestionList
		return ret
	}
	return *o.MustIncludeSuggestions
}

// GetMustIncludeSuggestionsOk returns a tuple with the MustIncludeSuggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetMustIncludeSuggestionsOk() (*QuerySuggestionList, bool) {
	if o == nil || IsNil(o.MustIncludeSuggestions) {
		return nil, false
	}
	return o.MustIncludeSuggestions, true
}

// HasMustIncludeSuggestions returns a boolean if a field has been set.
func (o *SearchResult) HasMustIncludeSuggestions() bool {
	if o != nil && !IsNil(o.MustIncludeSuggestions) {
		return true
	}

	return false
}

// SetMustIncludeSuggestions gets a reference to the given QuerySuggestionList and assigns it to the MustIncludeSuggestions field.
func (o *SearchResult) SetMustIncludeSuggestions(v QuerySuggestionList) {
	o.MustIncludeSuggestions = &v
}

// GetQuerySuggestion returns the QuerySuggestion field value if set, zero value otherwise.
func (o *SearchResult) GetQuerySuggestion() QuerySuggestion {
	if o == nil || IsNil(o.QuerySuggestion) {
		var ret QuerySuggestion
		return ret
	}
	return *o.QuerySuggestion
}

// GetQuerySuggestionOk returns a tuple with the QuerySuggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetQuerySuggestionOk() (*QuerySuggestion, bool) {
	if o == nil || IsNil(o.QuerySuggestion) {
		return nil, false
	}
	return o.QuerySuggestion, true
}

// HasQuerySuggestion returns a boolean if a field has been set.
func (o *SearchResult) HasQuerySuggestion() bool {
	if o != nil && !IsNil(o.QuerySuggestion) {
		return true
	}

	return false
}

// SetQuerySuggestion gets a reference to the given QuerySuggestion and assigns it to the QuerySuggestion field.
func (o *SearchResult) SetQuerySuggestion(v QuerySuggestion) {
	o.QuerySuggestion = &v
}

// GetDebugInfo returns the DebugInfo field value if set, zero value otherwise.
func (o *SearchResult) GetDebugInfo() SearchResultDebugInfo {
	if o == nil || IsNil(o.DebugInfo) {
		var ret SearchResultDebugInfo
		return ret
	}
	return *o.DebugInfo
}

// GetDebugInfoOk returns a tuple with the DebugInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetDebugInfoOk() (*SearchResultDebugInfo, bool) {
	if o == nil || IsNil(o.DebugInfo) {
		return nil, false
	}
	return o.DebugInfo, true
}

// HasDebugInfo returns a boolean if a field has been set.
func (o *SearchResult) HasDebugInfo() bool {
	if o != nil && !IsNil(o.DebugInfo) {
		return true
	}

	return false
}

// SetDebugInfo gets a reference to the given SearchResultDebugInfo and assigns it to the DebugInfo field.
func (o *SearchResult) SetDebugInfo(v SearchResultDebugInfo) {
	o.DebugInfo = &v
}

// GetStructuredResults returns the StructuredResults field value if set, zero value otherwise.
func (o *SearchResult) GetStructuredResults() []StructuredResult {
	if o == nil || IsNil(o.StructuredResults) {
		var ret []StructuredResult
		return ret
	}
	return o.StructuredResults
}

// GetStructuredResultsOk returns a tuple with the StructuredResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetStructuredResultsOk() ([]StructuredResult, bool) {
	if o == nil || IsNil(o.StructuredResults) {
		return nil, false
	}
	return o.StructuredResults, true
}

// HasStructuredResults returns a boolean if a field has been set.
func (o *SearchResult) HasStructuredResults() bool {
	if o != nil && !IsNil(o.StructuredResults) {
		return true
	}

	return false
}

// SetStructuredResults gets a reference to the given []StructuredResult and assigns it to the StructuredResults field.
func (o *SearchResult) SetStructuredResults(v []StructuredResult) {
	o.StructuredResults = v
}

// GetProminence returns the Prominence field value if set, zero value otherwise.
func (o *SearchResult) GetProminence() SearchResultProminenceEnum {
	if o == nil || IsNil(o.Prominence) {
		var ret SearchResultProminenceEnum
		return ret
	}
	return *o.Prominence
}

// GetProminenceOk returns a tuple with the Prominence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetProminenceOk() (*SearchResultProminenceEnum, bool) {
	if o == nil || IsNil(o.Prominence) {
		return nil, false
	}
	return o.Prominence, true
}

// HasProminence returns a boolean if a field has been set.
func (o *SearchResult) HasProminence() bool {
	if o != nil && !IsNil(o.Prominence) {
		return true
	}

	return false
}

// SetProminence gets a reference to the given SearchResultProminenceEnum and assigns it to the Prominence field.
func (o *SearchResult) SetProminence(v SearchResultProminenceEnum) {
	o.Prominence = &v
}

// GetAttachmentContext returns the AttachmentContext field value if set, zero value otherwise.
func (o *SearchResult) GetAttachmentContext() string {
	if o == nil || IsNil(o.AttachmentContext) {
		var ret string
		return ret
	}
	return *o.AttachmentContext
}

// GetAttachmentContextOk returns a tuple with the AttachmentContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetAttachmentContextOk() (*string, bool) {
	if o == nil || IsNil(o.AttachmentContext) {
		return nil, false
	}
	return o.AttachmentContext, true
}

// HasAttachmentContext returns a boolean if a field has been set.
func (o *SearchResult) HasAttachmentContext() bool {
	if o != nil && !IsNil(o.AttachmentContext) {
		return true
	}

	return false
}

// SetAttachmentContext gets a reference to the given string and assigns it to the AttachmentContext field.
func (o *SearchResult) SetAttachmentContext(v string) {
	o.AttachmentContext = &v
}

// GetPins returns the Pins field value if set, zero value otherwise.
func (o *SearchResult) GetPins() []PinDocument {
	if o == nil || IsNil(o.Pins) {
		var ret []PinDocument
		return ret
	}
	return o.Pins
}

// GetPinsOk returns a tuple with the Pins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResult) GetPinsOk() ([]PinDocument, bool) {
	if o == nil || IsNil(o.Pins) {
		return nil, false
	}
	return o.Pins, true
}

// HasPins returns a boolean if a field has been set.
func (o *SearchResult) HasPins() bool {
	if o != nil && !IsNil(o.Pins) {
		return true
	}

	return false
}

// SetPins gets a reference to the given []PinDocument and assigns it to the Pins field.
func (o *SearchResult) SetPins(v []PinDocument) {
	o.Pins = v
}

func (o SearchResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Document) {
		toSerialize["document"] = o.Document
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.NativeAppUrl) {
		toSerialize["nativeAppUrl"] = o.NativeAppUrl
	}
	if !IsNil(o.TrackingToken) {
		toSerialize["trackingToken"] = o.TrackingToken
	}
	toSerialize["snippets"] = o.Snippets
	if !IsNil(o.ExpandedSnippets) {
		toSerialize["expandedSnippets"] = o.ExpandedSnippets
	}
	if !IsNil(o.FullText) {
		toSerialize["fullText"] = o.FullText
	}
	if !IsNil(o.FullTextList) {
		toSerialize["fullTextList"] = o.FullTextList
	}
	if !IsNil(o.RelatedResults) {
		toSerialize["relatedResults"] = o.RelatedResults
	}
	if !IsNil(o.ClusteredResults) {
		toSerialize["clusteredResults"] = o.ClusteredResults
	}
	if !IsNil(o.AllClusteredResults) {
		toSerialize["allClusteredResults"] = o.AllClusteredResults
	}
	if !IsNil(o.AttachmentCount) {
		toSerialize["attachmentCount"] = o.AttachmentCount
	}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.BacklinkResults) {
		toSerialize["backlinkResults"] = o.BacklinkResults
	}
	if !IsNil(o.ClusterType) {
		toSerialize["clusterType"] = o.ClusterType
	}
	if !IsNil(o.MustIncludeSuggestions) {
		toSerialize["mustIncludeSuggestions"] = o.MustIncludeSuggestions
	}
	if !IsNil(o.QuerySuggestion) {
		toSerialize["querySuggestion"] = o.QuerySuggestion
	}
	if !IsNil(o.DebugInfo) {
		toSerialize["debugInfo"] = o.DebugInfo
	}
	if !IsNil(o.StructuredResults) {
		toSerialize["structuredResults"] = o.StructuredResults
	}
	if !IsNil(o.Prominence) {
		toSerialize["prominence"] = o.Prominence
	}
	if !IsNil(o.AttachmentContext) {
		toSerialize["attachmentContext"] = o.AttachmentContext
	}
	if !IsNil(o.Pins) {
		toSerialize["pins"] = o.Pins
	}
	return toSerialize, nil
}

type NullableSearchResult struct {
	value *SearchResult
	isSet bool
}

func (v NullableSearchResult) Get() *SearchResult {
	return v.value
}

func (v *NullableSearchResult) Set(val *SearchResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResult(val *SearchResult) *NullableSearchResult {
	return &NullableSearchResult{value: val, isSet: true}
}

func (v NullableSearchResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


