/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the Navigation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Navigation{}

// Navigation Menu navigation config schema
type Navigation struct {
	// Contains a collection of (top-level) menu links
	Panels []NavigationMenuPanel `json:"panels"`
}

// NewNavigation instantiates a new Navigation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNavigation(panels []NavigationMenuPanel) *Navigation {
	this := Navigation{}
	this.Panels = panels
	return &this
}

// NewNavigationWithDefaults instantiates a new Navigation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNavigationWithDefaults() *Navigation {
	this := Navigation{}
	return &this
}

// GetPanels returns the Panels field value
func (o *Navigation) GetPanels() []NavigationMenuPanel {
	if o == nil {
		var ret []NavigationMenuPanel
		return ret
	}

	return o.Panels
}

// GetPanelsOk returns a tuple with the Panels field value
// and a boolean to check if the value has been set.
func (o *Navigation) GetPanelsOk() ([]NavigationMenuPanel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Panels, true
}

// SetPanels sets field value
func (o *Navigation) SetPanels(v []NavigationMenuPanel) {
	o.Panels = v
}

func (o Navigation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Navigation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["panels"] = o.Panels
	return toSerialize, nil
}

type NullableNavigation struct {
	value *Navigation
	isSet bool
}

func (v NullableNavigation) Get() *Navigation {
	return v.value
}

func (v *NullableNavigation) Set(val *Navigation) {
	v.value = val
	v.isSet = true
}

func (v NullableNavigation) IsSet() bool {
	return v.isSet
}

func (v *NullableNavigation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNavigation(val *Navigation) *NullableNavigation {
	return &NullableNavigation{value: val, isSet: true}
}

func (v NullableNavigation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNavigation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


