/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DeleteAnnouncementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteAnnouncementRequest{}

// DeleteAnnouncementRequest struct for DeleteAnnouncementRequest
type DeleteAnnouncementRequest struct {
	// The opaque id of the announcement to be deleted.
	Id int32 `json:"id"`
}

// NewDeleteAnnouncementRequest instantiates a new DeleteAnnouncementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAnnouncementRequest(id int32) *DeleteAnnouncementRequest {
	this := DeleteAnnouncementRequest{}
	this.Id = id
	return &this
}

// NewDeleteAnnouncementRequestWithDefaults instantiates a new DeleteAnnouncementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAnnouncementRequestWithDefaults() *DeleteAnnouncementRequest {
	this := DeleteAnnouncementRequest{}
	return &this
}

// GetId returns the Id field value
func (o *DeleteAnnouncementRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeleteAnnouncementRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeleteAnnouncementRequest) SetId(v int32) {
	o.Id = v
}

func (o DeleteAnnouncementRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteAnnouncementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableDeleteAnnouncementRequest struct {
	value *DeleteAnnouncementRequest
	isSet bool
}

func (v NullableDeleteAnnouncementRequest) Get() *DeleteAnnouncementRequest {
	return v.value
}

func (v *NullableDeleteAnnouncementRequest) Set(val *DeleteAnnouncementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAnnouncementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAnnouncementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAnnouncementRequest(val *DeleteAnnouncementRequest) *NullableDeleteAnnouncementRequest {
	return &NullableDeleteAnnouncementRequest{value: val, isSet: true}
}

func (v NullableDeleteAnnouncementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAnnouncementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


