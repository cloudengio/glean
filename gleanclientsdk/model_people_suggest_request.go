/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PeopleSuggestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PeopleSuggestRequest{}

// PeopleSuggestRequest struct for PeopleSuggestRequest
type PeopleSuggestRequest struct {
	// Categories of data requested. Request can include single or multiple categories.
	Categories []PeopleSuggestionCategory `json:"categories"`
	// Departments that the data is requested for. If empty, corresponds to whole company.
	Departments []string `json:"departments,omitempty"`
}

// NewPeopleSuggestRequest instantiates a new PeopleSuggestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeopleSuggestRequest(categories []PeopleSuggestionCategory) *PeopleSuggestRequest {
	this := PeopleSuggestRequest{}
	this.Categories = categories
	return &this
}

// NewPeopleSuggestRequestWithDefaults instantiates a new PeopleSuggestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeopleSuggestRequestWithDefaults() *PeopleSuggestRequest {
	this := PeopleSuggestRequest{}
	return &this
}

// GetCategories returns the Categories field value
func (o *PeopleSuggestRequest) GetCategories() []PeopleSuggestionCategory {
	if o == nil {
		var ret []PeopleSuggestionCategory
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *PeopleSuggestRequest) GetCategoriesOk() ([]PeopleSuggestionCategory, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *PeopleSuggestRequest) SetCategories(v []PeopleSuggestionCategory) {
	o.Categories = v
}

// GetDepartments returns the Departments field value if set, zero value otherwise.
func (o *PeopleSuggestRequest) GetDepartments() []string {
	if o == nil || IsNil(o.Departments) {
		var ret []string
		return ret
	}
	return o.Departments
}

// GetDepartmentsOk returns a tuple with the Departments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeopleSuggestRequest) GetDepartmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Departments) {
		return nil, false
	}
	return o.Departments, true
}

// HasDepartments returns a boolean if a field has been set.
func (o *PeopleSuggestRequest) HasDepartments() bool {
	if o != nil && !IsNil(o.Departments) {
		return true
	}

	return false
}

// SetDepartments gets a reference to the given []string and assigns it to the Departments field.
func (o *PeopleSuggestRequest) SetDepartments(v []string) {
	o.Departments = v
}

func (o PeopleSuggestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PeopleSuggestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["categories"] = o.Categories
	if !IsNil(o.Departments) {
		toSerialize["departments"] = o.Departments
	}
	return toSerialize, nil
}

type NullablePeopleSuggestRequest struct {
	value *PeopleSuggestRequest
	isSet bool
}

func (v NullablePeopleSuggestRequest) Get() *PeopleSuggestRequest {
	return v.value
}

func (v *NullablePeopleSuggestRequest) Set(val *PeopleSuggestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePeopleSuggestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePeopleSuggestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeopleSuggestRequest(val *PeopleSuggestRequest) *NullablePeopleSuggestRequest {
	return &NullablePeopleSuggestRequest{value: val, isSet: true}
}

func (v NullablePeopleSuggestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeopleSuggestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


