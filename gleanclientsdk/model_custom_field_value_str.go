/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CustomFieldValueStr type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomFieldValueStr{}

// CustomFieldValueStr struct for CustomFieldValueStr
type CustomFieldValueStr struct {
	// Text field for string value.
	StrText string `json:"strText"`
}

// NewCustomFieldValueStr instantiates a new CustomFieldValueStr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomFieldValueStr(strText string) *CustomFieldValueStr {
	this := CustomFieldValueStr{}
	this.StrText = strText
	return &this
}

// NewCustomFieldValueStrWithDefaults instantiates a new CustomFieldValueStr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomFieldValueStrWithDefaults() *CustomFieldValueStr {
	this := CustomFieldValueStr{}
	return &this
}

// GetStrText returns the StrText field value
func (o *CustomFieldValueStr) GetStrText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StrText
}

// GetStrTextOk returns a tuple with the StrText field value
// and a boolean to check if the value has been set.
func (o *CustomFieldValueStr) GetStrTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StrText, true
}

// SetStrText sets field value
func (o *CustomFieldValueStr) SetStrText(v string) {
	o.StrText = v
}

func (o CustomFieldValueStr) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomFieldValueStr) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["strText"] = o.StrText
	return toSerialize, nil
}

type NullableCustomFieldValueStr struct {
	value *CustomFieldValueStr
	isSet bool
}

func (v NullableCustomFieldValueStr) Get() *CustomFieldValueStr {
	return v.value
}

func (v *NullableCustomFieldValueStr) Set(val *CustomFieldValueStr) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomFieldValueStr) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomFieldValueStr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomFieldValueStr(val *CustomFieldValueStr) *NullableCustomFieldValueStr {
	return &NullableCustomFieldValueStr{value: val, isSet: true}
}

func (v NullableCustomFieldValueStr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomFieldValueStr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


