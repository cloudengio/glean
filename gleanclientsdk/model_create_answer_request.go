/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the CreateAnswerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAnswerRequest{}

// CreateAnswerRequest struct for CreateAnswerRequest
type CreateAnswerRequest struct {
	Data AnswerCreationData `json:"data"`
}

// NewCreateAnswerRequest instantiates a new CreateAnswerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAnswerRequest(data AnswerCreationData) *CreateAnswerRequest {
	this := CreateAnswerRequest{}
	this.Data = data
	return &this
}

// NewCreateAnswerRequestWithDefaults instantiates a new CreateAnswerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAnswerRequestWithDefaults() *CreateAnswerRequest {
	this := CreateAnswerRequest{}
	return &this
}

// GetData returns the Data field value
func (o *CreateAnswerRequest) GetData() AnswerCreationData {
	if o == nil {
		var ret AnswerCreationData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateAnswerRequest) GetDataOk() (*AnswerCreationData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateAnswerRequest) SetData(v AnswerCreationData) {
	o.Data = v
}

func (o CreateAnswerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAnswerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableCreateAnswerRequest struct {
	value *CreateAnswerRequest
	isSet bool
}

func (v NullableCreateAnswerRequest) Get() *CreateAnswerRequest {
	return v.value
}

func (v *NullableCreateAnswerRequest) Set(val *CreateAnswerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAnswerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAnswerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAnswerRequest(val *CreateAnswerRequest) *NullableCreateAnswerRequest {
	return &NullableCreateAnswerRequest{value: val, isSet: true}
}

func (v NullableCreateAnswerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAnswerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


