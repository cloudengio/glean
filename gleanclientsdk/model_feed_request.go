/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the FeedRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedRequest{}

// FeedRequest struct for FeedRequest
type FeedRequest struct {
	// Type of refresh requested. Intended for logging and future optimizations.
	RefreshType string `json:"refreshType"`
	// Categories of content requested. An allowlist gives flexibility to request content separately or together.
	Categories []string `json:"categories,omitempty"`
	RequestOptions *FeedRequestOptions `json:"requestOptions,omitempty"`
	ClientData *ClientData `json:"clientData,omitempty"`
	// Timeout in milliseconds for the request. Backend should throw a 408 if request takes longer.
	TimeoutMillis *int32 `json:"timeoutMillis,omitempty"`
	// Debug only feed params to to change the flow of control in request handling.
	Sc *string `json:"sc,omitempty"`
	SessionInfo *SessionInfo `json:"sessionInfo,omitempty"`
}

// NewFeedRequest instantiates a new FeedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedRequest(refreshType string) *FeedRequest {
	this := FeedRequest{}
	this.RefreshType = refreshType
	return &this
}

// NewFeedRequestWithDefaults instantiates a new FeedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedRequestWithDefaults() *FeedRequest {
	this := FeedRequest{}
	return &this
}

// GetRefreshType returns the RefreshType field value
func (o *FeedRequest) GetRefreshType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefreshType
}

// GetRefreshTypeOk returns a tuple with the RefreshType field value
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetRefreshTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshType, true
}

// SetRefreshType sets field value
func (o *FeedRequest) SetRefreshType(v string) {
	o.RefreshType = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *FeedRequest) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *FeedRequest) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *FeedRequest) SetCategories(v []string) {
	o.Categories = v
}

// GetRequestOptions returns the RequestOptions field value if set, zero value otherwise.
func (o *FeedRequest) GetRequestOptions() FeedRequestOptions {
	if o == nil || IsNil(o.RequestOptions) {
		var ret FeedRequestOptions
		return ret
	}
	return *o.RequestOptions
}

// GetRequestOptionsOk returns a tuple with the RequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetRequestOptionsOk() (*FeedRequestOptions, bool) {
	if o == nil || IsNil(o.RequestOptions) {
		return nil, false
	}
	return o.RequestOptions, true
}

// HasRequestOptions returns a boolean if a field has been set.
func (o *FeedRequest) HasRequestOptions() bool {
	if o != nil && !IsNil(o.RequestOptions) {
		return true
	}

	return false
}

// SetRequestOptions gets a reference to the given FeedRequestOptions and assigns it to the RequestOptions field.
func (o *FeedRequest) SetRequestOptions(v FeedRequestOptions) {
	o.RequestOptions = &v
}

// GetClientData returns the ClientData field value if set, zero value otherwise.
func (o *FeedRequest) GetClientData() ClientData {
	if o == nil || IsNil(o.ClientData) {
		var ret ClientData
		return ret
	}
	return *o.ClientData
}

// GetClientDataOk returns a tuple with the ClientData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetClientDataOk() (*ClientData, bool) {
	if o == nil || IsNil(o.ClientData) {
		return nil, false
	}
	return o.ClientData, true
}

// HasClientData returns a boolean if a field has been set.
func (o *FeedRequest) HasClientData() bool {
	if o != nil && !IsNil(o.ClientData) {
		return true
	}

	return false
}

// SetClientData gets a reference to the given ClientData and assigns it to the ClientData field.
func (o *FeedRequest) SetClientData(v ClientData) {
	o.ClientData = &v
}

// GetTimeoutMillis returns the TimeoutMillis field value if set, zero value otherwise.
func (o *FeedRequest) GetTimeoutMillis() int32 {
	if o == nil || IsNil(o.TimeoutMillis) {
		var ret int32
		return ret
	}
	return *o.TimeoutMillis
}

// GetTimeoutMillisOk returns a tuple with the TimeoutMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetTimeoutMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutMillis) {
		return nil, false
	}
	return o.TimeoutMillis, true
}

// HasTimeoutMillis returns a boolean if a field has been set.
func (o *FeedRequest) HasTimeoutMillis() bool {
	if o != nil && !IsNil(o.TimeoutMillis) {
		return true
	}

	return false
}

// SetTimeoutMillis gets a reference to the given int32 and assigns it to the TimeoutMillis field.
func (o *FeedRequest) SetTimeoutMillis(v int32) {
	o.TimeoutMillis = &v
}

// GetSc returns the Sc field value if set, zero value otherwise.
func (o *FeedRequest) GetSc() string {
	if o == nil || IsNil(o.Sc) {
		var ret string
		return ret
	}
	return *o.Sc
}

// GetScOk returns a tuple with the Sc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetScOk() (*string, bool) {
	if o == nil || IsNil(o.Sc) {
		return nil, false
	}
	return o.Sc, true
}

// HasSc returns a boolean if a field has been set.
func (o *FeedRequest) HasSc() bool {
	if o != nil && !IsNil(o.Sc) {
		return true
	}

	return false
}

// SetSc gets a reference to the given string and assigns it to the Sc field.
func (o *FeedRequest) SetSc(v string) {
	o.Sc = &v
}

// GetSessionInfo returns the SessionInfo field value if set, zero value otherwise.
func (o *FeedRequest) GetSessionInfo() SessionInfo {
	if o == nil || IsNil(o.SessionInfo) {
		var ret SessionInfo
		return ret
	}
	return *o.SessionInfo
}

// GetSessionInfoOk returns a tuple with the SessionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedRequest) GetSessionInfoOk() (*SessionInfo, bool) {
	if o == nil || IsNil(o.SessionInfo) {
		return nil, false
	}
	return o.SessionInfo, true
}

// HasSessionInfo returns a boolean if a field has been set.
func (o *FeedRequest) HasSessionInfo() bool {
	if o != nil && !IsNil(o.SessionInfo) {
		return true
	}

	return false
}

// SetSessionInfo gets a reference to the given SessionInfo and assigns it to the SessionInfo field.
func (o *FeedRequest) SetSessionInfo(v SessionInfo) {
	o.SessionInfo = &v
}

func (o FeedRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["refreshType"] = o.RefreshType
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.RequestOptions) {
		toSerialize["requestOptions"] = o.RequestOptions
	}
	if !IsNil(o.ClientData) {
		toSerialize["clientData"] = o.ClientData
	}
	if !IsNil(o.TimeoutMillis) {
		toSerialize["timeoutMillis"] = o.TimeoutMillis
	}
	if !IsNil(o.Sc) {
		toSerialize["sc"] = o.Sc
	}
	if !IsNil(o.SessionInfo) {
		toSerialize["sessionInfo"] = o.SessionInfo
	}
	return toSerialize, nil
}

type NullableFeedRequest struct {
	value *FeedRequest
	isSet bool
}

func (v NullableFeedRequest) Get() *FeedRequest {
	return v.value
}

func (v *NullableFeedRequest) Set(val *FeedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedRequest(val *FeedRequest) *NullableFeedRequest {
	return &NullableFeedRequest{value: val, isSet: true}
}

func (v NullableFeedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


