/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the DocumentMetadataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentMetadataRequest{}

// DocumentMetadataRequest struct for DocumentMetadataRequest
type DocumentMetadataRequest struct {
	// The IDs of the documents for which metadata is requested
	Ids []string `json:"ids"`
	// The requested metadata fields
	DocumentFields []string `json:"documentFields,omitempty"`
}

// NewDocumentMetadataRequest instantiates a new DocumentMetadataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentMetadataRequest(ids []string) *DocumentMetadataRequest {
	this := DocumentMetadataRequest{}
	this.Ids = ids
	return &this
}

// NewDocumentMetadataRequestWithDefaults instantiates a new DocumentMetadataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentMetadataRequestWithDefaults() *DocumentMetadataRequest {
	this := DocumentMetadataRequest{}
	return &this
}

// GetIds returns the Ids field value
func (o *DocumentMetadataRequest) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *DocumentMetadataRequest) GetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *DocumentMetadataRequest) SetIds(v []string) {
	o.Ids = v
}

// GetDocumentFields returns the DocumentFields field value if set, zero value otherwise.
func (o *DocumentMetadataRequest) GetDocumentFields() []string {
	if o == nil || IsNil(o.DocumentFields) {
		var ret []string
		return ret
	}
	return o.DocumentFields
}

// GetDocumentFieldsOk returns a tuple with the DocumentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentMetadataRequest) GetDocumentFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.DocumentFields) {
		return nil, false
	}
	return o.DocumentFields, true
}

// HasDocumentFields returns a boolean if a field has been set.
func (o *DocumentMetadataRequest) HasDocumentFields() bool {
	if o != nil && !IsNil(o.DocumentFields) {
		return true
	}

	return false
}

// SetDocumentFields gets a reference to the given []string and assigns it to the DocumentFields field.
func (o *DocumentMetadataRequest) SetDocumentFields(v []string) {
	o.DocumentFields = v
}

func (o DocumentMetadataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentMetadataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ids"] = o.Ids
	if !IsNil(o.DocumentFields) {
		toSerialize["documentFields"] = o.DocumentFields
	}
	return toSerialize, nil
}

type NullableDocumentMetadataRequest struct {
	value *DocumentMetadataRequest
	isSet bool
}

func (v NullableDocumentMetadataRequest) Get() *DocumentMetadataRequest {
	return v.value
}

func (v *NullableDocumentMetadataRequest) Set(val *DocumentMetadataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentMetadataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentMetadataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentMetadataRequest(val *DocumentMetadataRequest) *NullableDocumentMetadataRequest {
	return &NullableDocumentMetadataRequest{value: val, isSet: true}
}

func (v NullableDocumentMetadataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentMetadataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


