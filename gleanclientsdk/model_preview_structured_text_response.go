/*
Glean Client API - Platform Preview

# Introduction These are all the APIs used by Glean to implement the Glean client. These are available as platform preview for implementing a custom client to the Glean system.  # Usage guidelines A subset of these endpoints are also in the developer ready section, which is available for public use. The rest of the endpoints are subject to prior agreement with Glean before usage. Please contact support@glean.com if you would like to use an API that is not currently available in the developer ready section. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleanclientsdk

import (
	"encoding/json"
)

// checks if the PreviewStructuredTextResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewStructuredTextResponse{}

// PreviewStructuredTextResponse struct for PreviewStructuredTextResponse
type PreviewStructuredTextResponse struct {
	StructuredText StructuredText `json:"structuredText"`
	// A list of links the user doesn't have access to.
	DocsInaccessibleToUser []string `json:"docsInaccessibleToUser,omitempty"`
	CombinedAnswerText StructuredText `json:"combinedAnswerText"`
}

// NewPreviewStructuredTextResponse instantiates a new PreviewStructuredTextResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewStructuredTextResponse(structuredText StructuredText, combinedAnswerText StructuredText) *PreviewStructuredTextResponse {
	this := PreviewStructuredTextResponse{}
	this.StructuredText = structuredText
	this.CombinedAnswerText = combinedAnswerText
	return &this
}

// NewPreviewStructuredTextResponseWithDefaults instantiates a new PreviewStructuredTextResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewStructuredTextResponseWithDefaults() *PreviewStructuredTextResponse {
	this := PreviewStructuredTextResponse{}
	return &this
}

// GetStructuredText returns the StructuredText field value
func (o *PreviewStructuredTextResponse) GetStructuredText() StructuredText {
	if o == nil {
		var ret StructuredText
		return ret
	}

	return o.StructuredText
}

// GetStructuredTextOk returns a tuple with the StructuredText field value
// and a boolean to check if the value has been set.
func (o *PreviewStructuredTextResponse) GetStructuredTextOk() (*StructuredText, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StructuredText, true
}

// SetStructuredText sets field value
func (o *PreviewStructuredTextResponse) SetStructuredText(v StructuredText) {
	o.StructuredText = v
}

// GetDocsInaccessibleToUser returns the DocsInaccessibleToUser field value if set, zero value otherwise.
func (o *PreviewStructuredTextResponse) GetDocsInaccessibleToUser() []string {
	if o == nil || IsNil(o.DocsInaccessibleToUser) {
		var ret []string
		return ret
	}
	return o.DocsInaccessibleToUser
}

// GetDocsInaccessibleToUserOk returns a tuple with the DocsInaccessibleToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewStructuredTextResponse) GetDocsInaccessibleToUserOk() ([]string, bool) {
	if o == nil || IsNil(o.DocsInaccessibleToUser) {
		return nil, false
	}
	return o.DocsInaccessibleToUser, true
}

// HasDocsInaccessibleToUser returns a boolean if a field has been set.
func (o *PreviewStructuredTextResponse) HasDocsInaccessibleToUser() bool {
	if o != nil && !IsNil(o.DocsInaccessibleToUser) {
		return true
	}

	return false
}

// SetDocsInaccessibleToUser gets a reference to the given []string and assigns it to the DocsInaccessibleToUser field.
func (o *PreviewStructuredTextResponse) SetDocsInaccessibleToUser(v []string) {
	o.DocsInaccessibleToUser = v
}

// GetCombinedAnswerText returns the CombinedAnswerText field value
func (o *PreviewStructuredTextResponse) GetCombinedAnswerText() StructuredText {
	if o == nil {
		var ret StructuredText
		return ret
	}

	return o.CombinedAnswerText
}

// GetCombinedAnswerTextOk returns a tuple with the CombinedAnswerText field value
// and a boolean to check if the value has been set.
func (o *PreviewStructuredTextResponse) GetCombinedAnswerTextOk() (*StructuredText, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CombinedAnswerText, true
}

// SetCombinedAnswerText sets field value
func (o *PreviewStructuredTextResponse) SetCombinedAnswerText(v StructuredText) {
	o.CombinedAnswerText = v
}

func (o PreviewStructuredTextResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewStructuredTextResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["structuredText"] = o.StructuredText
	if !IsNil(o.DocsInaccessibleToUser) {
		toSerialize["docsInaccessibleToUser"] = o.DocsInaccessibleToUser
	}
	toSerialize["combinedAnswerText"] = o.CombinedAnswerText
	return toSerialize, nil
}

type NullablePreviewStructuredTextResponse struct {
	value *PreviewStructuredTextResponse
	isSet bool
}

func (v NullablePreviewStructuredTextResponse) Get() *PreviewStructuredTextResponse {
	return v.value
}

func (v *NullablePreviewStructuredTextResponse) Set(val *PreviewStructuredTextResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewStructuredTextResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewStructuredTextResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewStructuredTextResponse(val *PreviewStructuredTextResponse) *NullablePreviewStructuredTextResponse {
	return &NullablePreviewStructuredTextResponse{value: val, isSet: true}
}

func (v NullablePreviewStructuredTextResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewStructuredTextResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


