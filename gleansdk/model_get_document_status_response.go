/*
Glean Indexing API

# Introduction In addition to the data sources that Glean has built-in support for, Glean also provides a REST API that enables customers to put arbitrary content in the search index. This is useful, for example, for doing permissions-aware search over content in internal tools that reside on-prem as well as for searching over applications that Glean does not currently support first class. In addition these APIs allow the customer to push organization data (people info, organization structure etc) into Glean.  # Early Access Please note that we are continually evolving the system so these APIs are considered “early access” and are subject to change. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleansdk

import (
	"encoding/json"
)

// GetDocumentStatusResponse Describes the response body of the /getdocumentstatus API call
type GetDocumentStatusResponse struct {
	// Upload status, enum of NOT_UPLOADED, UPLOADED, STATUS_UNKNOWN
	UploadStatus *string `json:"uploadStatus,omitempty"`
	// Time of last successful upload, in epoch seconds
	LastUploadedAt *int64 `json:"lastUploadedAt,omitempty"`
	// Indexing status, enum of NOT_INDEXED, INDEXED, STATUS_UNKNOWN
	IndexingStatus *string `json:"indexingStatus,omitempty"`
	// Time of last successful indexing, in epoch seconds
	LastIndexedAt *int64 `json:"lastIndexedAt,omitempty"`
}

// NewGetDocumentStatusResponse instantiates a new GetDocumentStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDocumentStatusResponse() *GetDocumentStatusResponse {
	this := GetDocumentStatusResponse{}
	return &this
}

// NewGetDocumentStatusResponseWithDefaults instantiates a new GetDocumentStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDocumentStatusResponseWithDefaults() *GetDocumentStatusResponse {
	this := GetDocumentStatusResponse{}
	return &this
}

// GetUploadStatus returns the UploadStatus field value if set, zero value otherwise.
func (o *GetDocumentStatusResponse) GetUploadStatus() string {
	if o == nil || o.UploadStatus == nil {
		var ret string
		return ret
	}
	return *o.UploadStatus
}

// GetUploadStatusOk returns a tuple with the UploadStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDocumentStatusResponse) GetUploadStatusOk() (*string, bool) {
	if o == nil || o.UploadStatus == nil {
		return nil, false
	}
	return o.UploadStatus, true
}

// HasUploadStatus returns a boolean if a field has been set.
func (o *GetDocumentStatusResponse) HasUploadStatus() bool {
	if o != nil && o.UploadStatus != nil {
		return true
	}

	return false
}

// SetUploadStatus gets a reference to the given string and assigns it to the UploadStatus field.
func (o *GetDocumentStatusResponse) SetUploadStatus(v string) {
	o.UploadStatus = &v
}

// GetLastUploadedAt returns the LastUploadedAt field value if set, zero value otherwise.
func (o *GetDocumentStatusResponse) GetLastUploadedAt() int64 {
	if o == nil || o.LastUploadedAt == nil {
		var ret int64
		return ret
	}
	return *o.LastUploadedAt
}

// GetLastUploadedAtOk returns a tuple with the LastUploadedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDocumentStatusResponse) GetLastUploadedAtOk() (*int64, bool) {
	if o == nil || o.LastUploadedAt == nil {
		return nil, false
	}
	return o.LastUploadedAt, true
}

// HasLastUploadedAt returns a boolean if a field has been set.
func (o *GetDocumentStatusResponse) HasLastUploadedAt() bool {
	if o != nil && o.LastUploadedAt != nil {
		return true
	}

	return false
}

// SetLastUploadedAt gets a reference to the given int64 and assigns it to the LastUploadedAt field.
func (o *GetDocumentStatusResponse) SetLastUploadedAt(v int64) {
	o.LastUploadedAt = &v
}

// GetIndexingStatus returns the IndexingStatus field value if set, zero value otherwise.
func (o *GetDocumentStatusResponse) GetIndexingStatus() string {
	if o == nil || o.IndexingStatus == nil {
		var ret string
		return ret
	}
	return *o.IndexingStatus
}

// GetIndexingStatusOk returns a tuple with the IndexingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDocumentStatusResponse) GetIndexingStatusOk() (*string, bool) {
	if o == nil || o.IndexingStatus == nil {
		return nil, false
	}
	return o.IndexingStatus, true
}

// HasIndexingStatus returns a boolean if a field has been set.
func (o *GetDocumentStatusResponse) HasIndexingStatus() bool {
	if o != nil && o.IndexingStatus != nil {
		return true
	}

	return false
}

// SetIndexingStatus gets a reference to the given string and assigns it to the IndexingStatus field.
func (o *GetDocumentStatusResponse) SetIndexingStatus(v string) {
	o.IndexingStatus = &v
}

// GetLastIndexedAt returns the LastIndexedAt field value if set, zero value otherwise.
func (o *GetDocumentStatusResponse) GetLastIndexedAt() int64 {
	if o == nil || o.LastIndexedAt == nil {
		var ret int64
		return ret
	}
	return *o.LastIndexedAt
}

// GetLastIndexedAtOk returns a tuple with the LastIndexedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDocumentStatusResponse) GetLastIndexedAtOk() (*int64, bool) {
	if o == nil || o.LastIndexedAt == nil {
		return nil, false
	}
	return o.LastIndexedAt, true
}

// HasLastIndexedAt returns a boolean if a field has been set.
func (o *GetDocumentStatusResponse) HasLastIndexedAt() bool {
	if o != nil && o.LastIndexedAt != nil {
		return true
	}

	return false
}

// SetLastIndexedAt gets a reference to the given int64 and assigns it to the LastIndexedAt field.
func (o *GetDocumentStatusResponse) SetLastIndexedAt(v int64) {
	o.LastIndexedAt = &v
}

func (o GetDocumentStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UploadStatus != nil {
		toSerialize["uploadStatus"] = o.UploadStatus
	}
	if o.LastUploadedAt != nil {
		toSerialize["lastUploadedAt"] = o.LastUploadedAt
	}
	if o.IndexingStatus != nil {
		toSerialize["indexingStatus"] = o.IndexingStatus
	}
	if o.LastIndexedAt != nil {
		toSerialize["lastIndexedAt"] = o.LastIndexedAt
	}
	return json.Marshal(toSerialize)
}

type NullableGetDocumentStatusResponse struct {
	value *GetDocumentStatusResponse
	isSet bool
}

func (v NullableGetDocumentStatusResponse) Get() *GetDocumentStatusResponse {
	return v.value
}

func (v *NullableGetDocumentStatusResponse) Set(val *GetDocumentStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDocumentStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDocumentStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDocumentStatusResponse(val *GetDocumentStatusResponse) *NullableGetDocumentStatusResponse {
	return &NullableGetDocumentStatusResponse{value: val, isSet: true}
}

func (v NullableGetDocumentStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDocumentStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


