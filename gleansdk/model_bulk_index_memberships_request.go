/*
Glean Indexing API

# Introduction In addition to the data sources that Glean has built-in support for, Glean also provides a REST API that enables customers to put arbitrary content in the search index. This is useful, for example, for doing permissions-aware search over content in internal tools that reside on-prem as well as for searching over applications that Glean does not currently support first class. In addition these APIs allow the customer to push organization data (people info, organization structure etc) into Glean.  # Early Access Please note that we are continually evolving the system so these APIs are considered “early access” and are subject to change. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleansdk

import (
	"encoding/json"
)

// BulkIndexMembershipsRequest Describes the request body for the /bulkindexmemberships API call
type BulkIndexMembershipsRequest struct {
	// Unique id that must be used for this instance of datasource group memberships upload
	UploadId string `json:"uploadId"`
	// true if this is the first page of the upload. Defaults to false
	IsFirstPage *bool `json:"isFirstPage,omitempty"`
	// true if this is the last page of the upload. Defaults to false
	IsLastPage *bool `json:"isLastPage,omitempty"`
	// Flag to discard previous upload attempts and start from scratch. Must be specified with isFirstPage=true
	ForceRestartUpload *bool `json:"forceRestartUpload,omitempty"`
	// datasource of the memberships
	Datasource string `json:"datasource"`
	// group who's memberships are specified
	Group *string `json:"group,omitempty"`
	// batch of memberships for the group
	Memberships []DatasourceBulkMembershipDefinition `json:"memberships"`
}

// NewBulkIndexMembershipsRequest instantiates a new BulkIndexMembershipsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkIndexMembershipsRequest(uploadId string, datasource string, memberships []DatasourceBulkMembershipDefinition) *BulkIndexMembershipsRequest {
	this := BulkIndexMembershipsRequest{}
	this.UploadId = uploadId
	this.Datasource = datasource
	this.Memberships = memberships
	return &this
}

// NewBulkIndexMembershipsRequestWithDefaults instantiates a new BulkIndexMembershipsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkIndexMembershipsRequestWithDefaults() *BulkIndexMembershipsRequest {
	this := BulkIndexMembershipsRequest{}
	return &this
}

// GetUploadId returns the UploadId field value
func (o *BulkIndexMembershipsRequest) GetUploadId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadId
}

// GetUploadIdOk returns a tuple with the UploadId field value
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetUploadIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadId, true
}

// SetUploadId sets field value
func (o *BulkIndexMembershipsRequest) SetUploadId(v string) {
	o.UploadId = v
}

// GetIsFirstPage returns the IsFirstPage field value if set, zero value otherwise.
func (o *BulkIndexMembershipsRequest) GetIsFirstPage() bool {
	if o == nil || o.IsFirstPage == nil {
		var ret bool
		return ret
	}
	return *o.IsFirstPage
}

// GetIsFirstPageOk returns a tuple with the IsFirstPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetIsFirstPageOk() (*bool, bool) {
	if o == nil || o.IsFirstPage == nil {
		return nil, false
	}
	return o.IsFirstPage, true
}

// HasIsFirstPage returns a boolean if a field has been set.
func (o *BulkIndexMembershipsRequest) HasIsFirstPage() bool {
	if o != nil && o.IsFirstPage != nil {
		return true
	}

	return false
}

// SetIsFirstPage gets a reference to the given bool and assigns it to the IsFirstPage field.
func (o *BulkIndexMembershipsRequest) SetIsFirstPage(v bool) {
	o.IsFirstPage = &v
}

// GetIsLastPage returns the IsLastPage field value if set, zero value otherwise.
func (o *BulkIndexMembershipsRequest) GetIsLastPage() bool {
	if o == nil || o.IsLastPage == nil {
		var ret bool
		return ret
	}
	return *o.IsLastPage
}

// GetIsLastPageOk returns a tuple with the IsLastPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetIsLastPageOk() (*bool, bool) {
	if o == nil || o.IsLastPage == nil {
		return nil, false
	}
	return o.IsLastPage, true
}

// HasIsLastPage returns a boolean if a field has been set.
func (o *BulkIndexMembershipsRequest) HasIsLastPage() bool {
	if o != nil && o.IsLastPage != nil {
		return true
	}

	return false
}

// SetIsLastPage gets a reference to the given bool and assigns it to the IsLastPage field.
func (o *BulkIndexMembershipsRequest) SetIsLastPage(v bool) {
	o.IsLastPage = &v
}

// GetForceRestartUpload returns the ForceRestartUpload field value if set, zero value otherwise.
func (o *BulkIndexMembershipsRequest) GetForceRestartUpload() bool {
	if o == nil || o.ForceRestartUpload == nil {
		var ret bool
		return ret
	}
	return *o.ForceRestartUpload
}

// GetForceRestartUploadOk returns a tuple with the ForceRestartUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetForceRestartUploadOk() (*bool, bool) {
	if o == nil || o.ForceRestartUpload == nil {
		return nil, false
	}
	return o.ForceRestartUpload, true
}

// HasForceRestartUpload returns a boolean if a field has been set.
func (o *BulkIndexMembershipsRequest) HasForceRestartUpload() bool {
	if o != nil && o.ForceRestartUpload != nil {
		return true
	}

	return false
}

// SetForceRestartUpload gets a reference to the given bool and assigns it to the ForceRestartUpload field.
func (o *BulkIndexMembershipsRequest) SetForceRestartUpload(v bool) {
	o.ForceRestartUpload = &v
}

// GetDatasource returns the Datasource field value
func (o *BulkIndexMembershipsRequest) GetDatasource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Datasource
}

// GetDatasourceOk returns a tuple with the Datasource field value
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetDatasourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datasource, true
}

// SetDatasource sets field value
func (o *BulkIndexMembershipsRequest) SetDatasource(v string) {
	o.Datasource = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *BulkIndexMembershipsRequest) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *BulkIndexMembershipsRequest) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *BulkIndexMembershipsRequest) SetGroup(v string) {
	o.Group = &v
}

// GetMemberships returns the Memberships field value
func (o *BulkIndexMembershipsRequest) GetMemberships() []DatasourceBulkMembershipDefinition {
	if o == nil {
		var ret []DatasourceBulkMembershipDefinition
		return ret
	}

	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value
// and a boolean to check if the value has been set.
func (o *BulkIndexMembershipsRequest) GetMembershipsOk() ([]DatasourceBulkMembershipDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memberships, true
}

// SetMemberships sets field value
func (o *BulkIndexMembershipsRequest) SetMemberships(v []DatasourceBulkMembershipDefinition) {
	o.Memberships = v
}

func (o BulkIndexMembershipsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uploadId"] = o.UploadId
	}
	if o.IsFirstPage != nil {
		toSerialize["isFirstPage"] = o.IsFirstPage
	}
	if o.IsLastPage != nil {
		toSerialize["isLastPage"] = o.IsLastPage
	}
	if o.ForceRestartUpload != nil {
		toSerialize["forceRestartUpload"] = o.ForceRestartUpload
	}
	if true {
		toSerialize["datasource"] = o.Datasource
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["memberships"] = o.Memberships
	}
	return json.Marshal(toSerialize)
}

type NullableBulkIndexMembershipsRequest struct {
	value *BulkIndexMembershipsRequest
	isSet bool
}

func (v NullableBulkIndexMembershipsRequest) Get() *BulkIndexMembershipsRequest {
	return v.value
}

func (v *NullableBulkIndexMembershipsRequest) Set(val *BulkIndexMembershipsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkIndexMembershipsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkIndexMembershipsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkIndexMembershipsRequest(val *BulkIndexMembershipsRequest) *NullableBulkIndexMembershipsRequest {
	return &NullableBulkIndexMembershipsRequest{value: val, isSet: true}
}

func (v NullableBulkIndexMembershipsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkIndexMembershipsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


