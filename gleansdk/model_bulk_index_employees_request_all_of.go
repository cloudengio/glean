/*
Glean Indexing API

# Introduction In addition to the data sources that Glean has built-in support for, Glean also provides a REST API that enables customers to put arbitrary content in the search index. This is useful, for example, for doing permissions-aware search over content in internal tools that reside on-prem as well as for searching over applications that Glean does not currently support first class. In addition these APIs allow the customer to push organization data (people info, organization structure etc) into Glean.  # Early Access Please note that we are continually evolving the system so these APIs are considered “early access” and are subject to change. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleansdk

import (
	"encoding/json"
)

// BulkIndexEmployeesRequestAllOf struct for BulkIndexEmployeesRequestAllOf
type BulkIndexEmployeesRequestAllOf struct {
	// Batch of employee information
	Employees []EmployeeInfoDefinition `json:"employees"`
}

// NewBulkIndexEmployeesRequestAllOf instantiates a new BulkIndexEmployeesRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkIndexEmployeesRequestAllOf(employees []EmployeeInfoDefinition) *BulkIndexEmployeesRequestAllOf {
	this := BulkIndexEmployeesRequestAllOf{}
	this.Employees = employees
	return &this
}

// NewBulkIndexEmployeesRequestAllOfWithDefaults instantiates a new BulkIndexEmployeesRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkIndexEmployeesRequestAllOfWithDefaults() *BulkIndexEmployeesRequestAllOf {
	this := BulkIndexEmployeesRequestAllOf{}
	return &this
}

// GetEmployees returns the Employees field value
func (o *BulkIndexEmployeesRequestAllOf) GetEmployees() []EmployeeInfoDefinition {
	if o == nil {
		var ret []EmployeeInfoDefinition
		return ret
	}

	return o.Employees
}

// GetEmployeesOk returns a tuple with the Employees field value
// and a boolean to check if the value has been set.
func (o *BulkIndexEmployeesRequestAllOf) GetEmployeesOk() ([]EmployeeInfoDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Employees, true
}

// SetEmployees sets field value
func (o *BulkIndexEmployeesRequestAllOf) SetEmployees(v []EmployeeInfoDefinition) {
	o.Employees = v
}

func (o BulkIndexEmployeesRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["employees"] = o.Employees
	}
	return json.Marshal(toSerialize)
}

type NullableBulkIndexEmployeesRequestAllOf struct {
	value *BulkIndexEmployeesRequestAllOf
	isSet bool
}

func (v NullableBulkIndexEmployeesRequestAllOf) Get() *BulkIndexEmployeesRequestAllOf {
	return v.value
}

func (v *NullableBulkIndexEmployeesRequestAllOf) Set(val *BulkIndexEmployeesRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkIndexEmployeesRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkIndexEmployeesRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkIndexEmployeesRequestAllOf(val *BulkIndexEmployeesRequestAllOf) *NullableBulkIndexEmployeesRequestAllOf {
	return &NullableBulkIndexEmployeesRequestAllOf{value: val, isSet: true}
}

func (v NullableBulkIndexEmployeesRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkIndexEmployeesRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


