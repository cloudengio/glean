/*
Glean Indexing API

# Introduction In addition to the data sources that Glean has built-in support for, Glean also provides a REST API that enables customers to put arbitrary content in the search index. This is useful, for example, for doing permissions-aware search over content in internal tools that reside on-prem as well as for searching over applications that Glean does not currently support first class. In addition these APIs allow the customer to push organization data (people info, organization structure etc) into Glean.  # Early Access Please note that we are continually evolving the system so these APIs are considered “early access” and are subject to change. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleansdk

import (
	"encoding/json"
)

// SocialNetworkDefinition Employee's social network profile
type SocialNetworkDefinition struct {
	// Possible values are \"twitter\", \"linkedin\".
	Name *string `json:"name,omitempty"`
	// Human-readable profile name.
	ProfileName *string `json:"profileName,omitempty"`
	// Link to profile.
	ProfileUrl *string `json:"profileUrl,omitempty"`
}

// NewSocialNetworkDefinition instantiates a new SocialNetworkDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSocialNetworkDefinition() *SocialNetworkDefinition {
	this := SocialNetworkDefinition{}
	return &this
}

// NewSocialNetworkDefinitionWithDefaults instantiates a new SocialNetworkDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSocialNetworkDefinitionWithDefaults() *SocialNetworkDefinition {
	this := SocialNetworkDefinition{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SocialNetworkDefinition) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SocialNetworkDefinition) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SocialNetworkDefinition) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SocialNetworkDefinition) SetName(v string) {
	o.Name = &v
}

// GetProfileName returns the ProfileName field value if set, zero value otherwise.
func (o *SocialNetworkDefinition) GetProfileName() string {
	if o == nil || o.ProfileName == nil {
		var ret string
		return ret
	}
	return *o.ProfileName
}

// GetProfileNameOk returns a tuple with the ProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SocialNetworkDefinition) GetProfileNameOk() (*string, bool) {
	if o == nil || o.ProfileName == nil {
		return nil, false
	}
	return o.ProfileName, true
}

// HasProfileName returns a boolean if a field has been set.
func (o *SocialNetworkDefinition) HasProfileName() bool {
	if o != nil && o.ProfileName != nil {
		return true
	}

	return false
}

// SetProfileName gets a reference to the given string and assigns it to the ProfileName field.
func (o *SocialNetworkDefinition) SetProfileName(v string) {
	o.ProfileName = &v
}

// GetProfileUrl returns the ProfileUrl field value if set, zero value otherwise.
func (o *SocialNetworkDefinition) GetProfileUrl() string {
	if o == nil || o.ProfileUrl == nil {
		var ret string
		return ret
	}
	return *o.ProfileUrl
}

// GetProfileUrlOk returns a tuple with the ProfileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SocialNetworkDefinition) GetProfileUrlOk() (*string, bool) {
	if o == nil || o.ProfileUrl == nil {
		return nil, false
	}
	return o.ProfileUrl, true
}

// HasProfileUrl returns a boolean if a field has been set.
func (o *SocialNetworkDefinition) HasProfileUrl() bool {
	if o != nil && o.ProfileUrl != nil {
		return true
	}

	return false
}

// SetProfileUrl gets a reference to the given string and assigns it to the ProfileUrl field.
func (o *SocialNetworkDefinition) SetProfileUrl(v string) {
	o.ProfileUrl = &v
}

func (o SocialNetworkDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ProfileName != nil {
		toSerialize["profileName"] = o.ProfileName
	}
	if o.ProfileUrl != nil {
		toSerialize["profileUrl"] = o.ProfileUrl
	}
	return json.Marshal(toSerialize)
}

type NullableSocialNetworkDefinition struct {
	value *SocialNetworkDefinition
	isSet bool
}

func (v NullableSocialNetworkDefinition) Get() *SocialNetworkDefinition {
	return v.value
}

func (v *NullableSocialNetworkDefinition) Set(val *SocialNetworkDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableSocialNetworkDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableSocialNetworkDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSocialNetworkDefinition(val *SocialNetworkDefinition) *NullableSocialNetworkDefinition {
	return &NullableSocialNetworkDefinition{value: val, isSet: true}
}

func (v NullableSocialNetworkDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSocialNetworkDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


