/*
Glean Indexing API

# Introduction In addition to the data sources that Glean has built-in support for, Glean also provides a REST API that enables customers to put arbitrary content in the search index. This is useful, for example, for doing permissions-aware search over content in internal tools that reside on-prem as well as for searching over applications that Glean does not currently support first class. In addition these APIs allow the customer to push organization data (people info, organization structure etc) into Glean.  # Early Access Please note that we are continually evolving the system so these APIs are considered “early access” and are subject to change. 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gleansdk

import (
	"encoding/json"
)

// BulkIndexDocumentsRequestAllOf struct for BulkIndexDocumentsRequestAllOf
type BulkIndexDocumentsRequestAllOf struct {
	// Datasource of the documents
	Datasource string `json:"datasource"`
	// Batch of documents for the datasource
	Documents []DocumentDefinition `json:"documents"`
	// True if older documents need to be force deleted after the upload completes. Defaults to older documents being deleted asynchronously. This must only be set when `isLastPage = true`
	DisableStaleDocumentDeletionCheck *bool `json:"disableStaleDocumentDeletionCheck,omitempty"`
}

// NewBulkIndexDocumentsRequestAllOf instantiates a new BulkIndexDocumentsRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkIndexDocumentsRequestAllOf(datasource string, documents []DocumentDefinition) *BulkIndexDocumentsRequestAllOf {
	this := BulkIndexDocumentsRequestAllOf{}
	this.Datasource = datasource
	this.Documents = documents
	return &this
}

// NewBulkIndexDocumentsRequestAllOfWithDefaults instantiates a new BulkIndexDocumentsRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkIndexDocumentsRequestAllOfWithDefaults() *BulkIndexDocumentsRequestAllOf {
	this := BulkIndexDocumentsRequestAllOf{}
	return &this
}

// GetDatasource returns the Datasource field value
func (o *BulkIndexDocumentsRequestAllOf) GetDatasource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Datasource
}

// GetDatasourceOk returns a tuple with the Datasource field value
// and a boolean to check if the value has been set.
func (o *BulkIndexDocumentsRequestAllOf) GetDatasourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Datasource, true
}

// SetDatasource sets field value
func (o *BulkIndexDocumentsRequestAllOf) SetDatasource(v string) {
	o.Datasource = v
}

// GetDocuments returns the Documents field value
func (o *BulkIndexDocumentsRequestAllOf) GetDocuments() []DocumentDefinition {
	if o == nil {
		var ret []DocumentDefinition
		return ret
	}

	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value
// and a boolean to check if the value has been set.
func (o *BulkIndexDocumentsRequestAllOf) GetDocumentsOk() ([]DocumentDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents, true
}

// SetDocuments sets field value
func (o *BulkIndexDocumentsRequestAllOf) SetDocuments(v []DocumentDefinition) {
	o.Documents = v
}

// GetDisableStaleDocumentDeletionCheck returns the DisableStaleDocumentDeletionCheck field value if set, zero value otherwise.
func (o *BulkIndexDocumentsRequestAllOf) GetDisableStaleDocumentDeletionCheck() bool {
	if o == nil || o.DisableStaleDocumentDeletionCheck == nil {
		var ret bool
		return ret
	}
	return *o.DisableStaleDocumentDeletionCheck
}

// GetDisableStaleDocumentDeletionCheckOk returns a tuple with the DisableStaleDocumentDeletionCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkIndexDocumentsRequestAllOf) GetDisableStaleDocumentDeletionCheckOk() (*bool, bool) {
	if o == nil || o.DisableStaleDocumentDeletionCheck == nil {
		return nil, false
	}
	return o.DisableStaleDocumentDeletionCheck, true
}

// HasDisableStaleDocumentDeletionCheck returns a boolean if a field has been set.
func (o *BulkIndexDocumentsRequestAllOf) HasDisableStaleDocumentDeletionCheck() bool {
	if o != nil && o.DisableStaleDocumentDeletionCheck != nil {
		return true
	}

	return false
}

// SetDisableStaleDocumentDeletionCheck gets a reference to the given bool and assigns it to the DisableStaleDocumentDeletionCheck field.
func (o *BulkIndexDocumentsRequestAllOf) SetDisableStaleDocumentDeletionCheck(v bool) {
	o.DisableStaleDocumentDeletionCheck = &v
}

func (o BulkIndexDocumentsRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["datasource"] = o.Datasource
	}
	if true {
		toSerialize["documents"] = o.Documents
	}
	if o.DisableStaleDocumentDeletionCheck != nil {
		toSerialize["disableStaleDocumentDeletionCheck"] = o.DisableStaleDocumentDeletionCheck
	}
	return json.Marshal(toSerialize)
}

type NullableBulkIndexDocumentsRequestAllOf struct {
	value *BulkIndexDocumentsRequestAllOf
	isSet bool
}

func (v NullableBulkIndexDocumentsRequestAllOf) Get() *BulkIndexDocumentsRequestAllOf {
	return v.value
}

func (v *NullableBulkIndexDocumentsRequestAllOf) Set(val *BulkIndexDocumentsRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkIndexDocumentsRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkIndexDocumentsRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkIndexDocumentsRequestAllOf(val *BulkIndexDocumentsRequestAllOf) *NullableBulkIndexDocumentsRequestAllOf {
	return &NullableBulkIndexDocumentsRequestAllOf{value: val, isSet: true}
}

func (v NullableBulkIndexDocumentsRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkIndexDocumentsRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


